cscope 15 $HOME/program/cc/v5root               0000449634
	@usr/c/c00.c

7 
	~"c0h.c
"

9 
	gi¢
 1;

10 
	g≥eksym
 -1;

11 
	glöe
 1;

12 
	gdebug
 0;

13 
	gdimp
 0;

15 
	skwèb
 {

16 *
	mkw«me
;

17 
	mkwvÆ
;

18 } 
	gkwèb
[]

20 "öt", 
	gINT
,

21 "ch¨", 
	gCHAR
,

22 "Êﬂt", 
	gFLOAT
,

23 "doubÀ", 
	gDOUBLE
,

24 "°ru˘", 
	gSTRUCT
,

25 "auto", 
	gAUTO
,

26 "exã∫", 
	gEXTERN
,

27 "°©ic", 
	gSTATIC
,

28 "ªgi°î", 
	gREG
,

29 "gŸo", 
	gGOTO
,

30 "ªtu∫", 
	gRETURN
,

31 "if", 
	gIF
,

32 "whûe", 
	gWHILE
,

33 "ñ£", 
	gELSE
,

34 "swôch", 
	gSWITCH
,

35 "ˇ£", 
	gCASE
,

36 "bªak", 
	gBREAK
,

37 "c⁄töue", 
	gCONTIN
,

38 "do", 
	gDO
,

39 "deÁu…", 
	gDEFAULT
,

40 "f‹", 
	gFOR
,

41 "sizeof", 
	gSIZEOF
,

45 
	$maö
(
¨gc
, 
¨gv
)

46 *
¨gv
[];

48 
fö
, 
fout
;

49 
åì•a˚
[
ossiz
];

50 *
•
, *
≈
;

51 
kwèb
 *
ù
;

53 if(
¨gc
<4) {

54 
	`îr‹
("Arg count");

55 
	`exô
(1);

57 if((
fö
=
	`›í
(
¨gv
[1],0))<0) {

58 
	`îr‹
("C™'àföd %s", 
¨gv
[1]);

59 
	`exô
(1);

61 i‡(
	`f¸ót
(
¨gv
[2], &
fout
)<0 || f¸ót◊rgv[3], 
böbuf
)<0) {

62 
	`îr‹
("Can't createÅemp");

63 
	`exô
(1);

65 i‡(
¨gc
>4)

66 
¥oÊg
++;

67 
xdÊg
++;

68 
ù
=
kwèb
; (
≈
 = ip->
kw«me
); ip++) {

69 
•
 = 
symbuf
; sp<symbuf+
n˝s
;)

70 i‡((*
•
++ = *
≈
++) == '\0')

71 
≈
--;

72 
≈
 = 
	`lookup
();

73 
≈
->
h˛ass
 = 
KEYWC
;

74 
≈
->
hty≥
 = 
ù
->
kwvÆ
;

76 
xdÊg
 = 0;

77 
åìba£
 = 
åì•a˚
+10;

78 
	`putw
(
åìba£
, 
böbuf
);

79 !
eof
) {

80 
	`extdef
();

81 
	`blkíd
();

83 
	`Êush
();

84 
	`fÊush
(
böbuf
);

85 
	`exô
(
√º‹
!=0);

86 
	}
}

88 
hshèb
 *
	$lookup
()

90 
ihash
;

91 
hshèb
 *
Ω
;

92 *
•
, *
≈
;

94 
ihash
 = 0;

95 
•
=
symbuf
; sp<symbuf+
n˝s
;)

96 
ihash
 =+ *
•
++;

97 
Ω
 = &
hshèb
[
ihash
%
hshsiz
];

98 *(
≈
 = 
Ω
->
«me
)) {

99 
•
=
symbuf
; sp<symbuf+
n˝s
;)

100 i‡(*
≈
++ !*
•
++)

101 
no
;

102 (
Ω
);

103 
no
:

104 i‡(++
Ω
 >&
hshèb
[
hshsiz
])

105 
Ω
 = 
hshèb
;

107 if(++
hshu£d
 >
hshsiz
) {

108 
	`îr‹
("SymbolÅable overflow");

109 
	`exô
(1);

111 
Ω
->
h˛ass
 = 0;

112 
Ω
->
hty≥
 = 0;

113 
Ω
->
hoff£t
 = 0;

114 
Ω
->
dimp
 = 0;

115 
Ω
->
hÊag
 = 
xdÊg
;

116 
•
 = 
symbuf
;

117 
≈
=
Ω
->
«me
; 
•
<
symbuf
+
n˝s
;)

118 *
≈
++ = *
•
++;

119 (
Ω
);

120 
	}
}

122 
	$symbﬁ
() {

123 
c
;

124 *
•
;

126 i‡(
≥eksym
>=0) {

127 
c
 = 
≥eksym
;

128 
≥eksym
 = -1;

129 i‡(
c
==
NAME
)

130 
mosÊg
 = 0;

131 (
c
);

133 i‡(
≥ekc
) {

134 
c
 = 
≥ekc
;

135 
≥ekc
 = 0;

137 i‡(
eof
)

138 (
EOF
);

140 
c
 = 
	`gëch¨
();

141 
lo›
:

142 
˘ab
[
c
]) {

144 
INSERT
:

145 
öhdr
 = 1;

146 
c
 = 
	`gëch¨
();

147 
lo›
;

149 
NEWLN
:

150 i‡(!
öhdr
)

151 
löe
++;

152 
öhdr
 = 0;

154 
SPACE
:

155 
c
 = 
	`gëch¨
();

156 
lo›
;

158 
EOF
:

159 
eof
++;

162 
PLUS
:

163 (
	`sub£q
(
c
,
PLUS
,
INCBEF
));

165 
MINUS
:

166 (
	`sub£q
(
c
,sub£q('>',
MINUS
,
ARROW
),
DECBEF
));

168 
ASSIGN
:

169 i‡(
	`sub£q
(' ',0,1)Ë(
ASSIGN
);

170 
c
 = 
	`symbﬁ
();

171 i‡(
c
>=
PLUS
 && c<=
EXOR
) {

172 i‡(
≥ekc
==0)

173 
≥ekc
 = 
	`gëch¨
();

174 i‡(
˘ab
[
≥ekc
] !
SPACE


175 && (
c
==
MINUS
 || c==
AND
 || c==
TIMES
)) {

176 
	`îr‹
("Warning:ássignment operatorássumed");

177 
√º‹
--;

179 (
c
+30);

181 i‡(
c
==
ASSIGN
)

182 (
EQUAL
);

183 
≥eksym
 = 
c
;

184 (
ASSIGN
);

186 
LESS
:

187 i‡(
	`sub£q
(
c
,0,1)Ë(
LSHIFT
);

188 (
	`sub£q
('=',
LESS
,
LESSEQ
));

190 
GREAT
:

191 i‡(
	`sub£q
(
c
,0,1)Ë(
RSHIFT
);

192 (
	`sub£q
('=',
GREAT
,
GREATEQ
));

194 
EXCLA
:

195 (
	`sub£q
('=',
EXCLA
,
NEQUAL
));

197 
DIVIDE
:

198 i‡(
	`sub£q
('*',1,0))

199 (
DIVIDE
);

200 
com
:

201 
c
 = 
	`gëch¨
();

202 
com1
:

203 
c
) {

205 
eof
++;

206 
	`îr‹
("Nonterminated comment");

209 i‡(!
öhdr
)

210 
löe
++;

211 
öhdr
 = 0;

212 
com
;

214 
öhdr
++;

216 
com
;

218 
c
 = 
	`gëch¨
();

219 i‡(
c
!='/')

220 
com1
;

222 
c
 = 
	`gëch¨
();

223 
lo›
;

225 
PERIOD
:

226 
DIGIT
:

227 
≥ekc
 = 
c
;

228 i‡((
c
=
	`gënum
(c=='0'?8:10)Ë=
FCON
)

229 
cvÆ
 = 
i¢
++;

230 (
c
);

232 
DQUOTE
:

233 (
	`gë°r
());

235 
SQUOTE
:

236 (
	`gëcc
());

238 
LETTER
:

239 
•
 = 
symbuf
;

240 i‡(
mosÊg
) {

241 *
•
++ = '.';

242 
mosÊg
 = 0;

244 
˘ab
[
c
]==
LETTER
 || cèb[c]==
DIGIT
) {

245 i‡(
•
<
symbuf
+
n˝s
Ë*•++ = 
c
;

246 
c
 = 
	`gëch¨
();

248 
•
<
symbuf
+
n˝s
)

249 *
•
++ = '\0';

250 
≥ekc
 = 
c
;

251 
csym
 = 
	`lookup
();

252 i‡(
csym
->
h˛ass
==
KEYWC
) {

253 i‡(
csym
->
hty≥
==
SIZEOF
)

254 (
SIZEOF
);

255 
cvÆ
 = 
csym
->
hty≥
;

256 (
KEYW
);

258 (
NAME
);

260 
AND
:

261 (
	`sub£q
('&', 
AND
, 
LOGAND
));

263 
OR
:

264 (
	`sub£q
('|', 
OR
, 
LOGOR
));

266 
UNKN
:

267 
	`îr‹
("Unknown character");

268 
c
 = 
	`gëch¨
();

269 
lo›
;

272 (
˘ab
[
c
]);

273 
	}
}

275 
	$sub£q
(
c
,
a
,
b
) {

276 i‡(!
≥ekc
)

277 
≥ekc
 = 
	`gëch¨
();

278 i‡(
≥ekc
 !
c
)

279 (
a
);

280 
≥ekc
 = 0;

281 (
b
);

282 
	}
}

284 
	$gë°r
() {

285 
c
;

286 *
t
, *
d
;

288 
nch°r
 = 1;

289 
t
 = ".text";

290 
d
 = ".data";

291 
	`¥ötf
("%s\nL%d:.byã ", (
°rÊg
?
t
:
d
), 
cvÆ
=
i¢
++);

292 (
c
=
	`m≠ch
('"')) >= 0) {

293 
	`¥ötf
("%o,", 
c
);

294 
nch°r
++;

296 
	`¥ötf
("0\n.eví\n%s\n", (
°rÊg
?
d
:
t
));

297 (
STRING
);

298 
	}
}

300 
	$gëcc
()

302 
c
, 
cc
;

303 *
c˝
;

305 
cvÆ
 = 0;

306 
c˝
 = &
cvÆ
;

307 
cc
 = 0;

308 (
c
=
	`m≠ch
('\'')) >= 0)

309 if(
cc
++ < 
n˝w
)

310 *
c˝
++ = 
c
;

311 if(
cc
>
n˝w
)

312 
	`îr‹
("Long character constant");

313 (
CON
);

314 
	}
}

316 
	$m≠ch
(
ac
)

318 
a
, 
c
, 
n
;

319 
m≥ek
;

321 
c
 = 
ac
;

322 i‡(
m≥ek
) {

323 
a
 = 
m≥ek
;

324 
m≥ek
 = 0;

326 
a
 = 
	`gëch¨
();

327 
lo›
:

328 i‡(
a
==
c
)

330 
a
) {

334 
	`îr‹
("Nonterminated string");

335 
≥ekc
 = 
a
;

339 
a
=
	`gëch¨
()) {

352 
n
 = 0;

353 
c
 = 0;

354 ++
c
<=3 && '0'<=
a
 &&á<='7') {

355 
n
 =<< 3;

356 
n
 =+ 
a
-'0';

357 
a
 = 
	`gëch¨
();

359 
m≥ek
 = 
a
;

360 (
n
);

366 i‡(!
öhdr
)

367 
löe
++;

368 
öhdr
 = 0;

369 
a
 = 
	`gëch¨
();

370 
lo›
;

373 (
a
);

374 
	}
}

376 
	$åì
()

378 
	#SEOF
 200

	)

379 
	#SSIZE
 20

	)

380 *
›
, 
›°
[
SSIZE
], *
µ
, 
¥°
[SSIZE];

381 
™dÊg
, 
o
;

382 
hshèb
 *
cs
;

383 
p
, 
ps
, 
os
, *
≈
;

385 
o¶e·
 = 
ossiz
;

386 
•a˚
 = 
åìba£
;

387 
›
 = 
›°
;

388 
µ
 = 
¥°
;

389 
˝
 = 
cm°
;

390 *
›
 = 
SEOF
;

391 *
µ
 = 06;

392 
™dÊg
 = 0;

394 
adv™c
:

395 
o
=
	`symbﬁ
()) {

397 
NAME
:

398 
cs
 = 
csym
;

399 i‡(
cs
->
h˛ass
==0 && cs->
hty≥
==0)

400 if(
	`√xtch¨
()=='(') {

402 
cs
->
h˛ass
 = 
EXTERN
;

403 
cs
->
hty≥
 = 
FUNC
;

404 } i‡(
öôÊg
)

405 
cs
->
h˛ass
 = 
EXTERN
;

408 
cs
->
hty≥
 = 
ARRAY
;

409 i‡(
cs
->
hoff£t
==0)

410 
cs
->
hoff£t
 = 
i¢
++;

412 *
˝
++ = 
	`block
(2,
NAME
,
cs
->
hty≥
,cs->
hdimp
,

413 
cs
->
h˛ass
,0);

414 i‡(
cs
->
h˛ass
==
EXTERN
) {

415 
≈
 = 
cs
->
«me
;

416 
o
=0; o<4; o++) {

417 
	`pblock
(*
≈
);

418 i‡(((*
≈
++)&~0177) == 0)

422 
	`pblock
(
cs
->
hoff£t
);

423 
ènd
;

425 
FCON
:

426 i‡(!
öôÊg
)

427 
	`¥ötf
(".d©a\nL%d:%o;%o;%o;%o\n.ãxt\n",
cvÆ
,
fcvÆ
);

429 
CON
:

430 
SFCON
:

431 *
˝
++ = 
	`block
(1,
o
,(o==
CON
?
INT
:
DOUBLE
),0,
cvÆ
);

432 
ènd
;

435 
STRING
:

436 *
˝
++ = 
	`block
(3, 
NAME
, 
ARRAY
+
CHAR
,0,
STATIC
,0,
cvÆ
);

438 
ènd
:

439 if(
˝
>=
cm°
+
cmsiz
) {

440 
	`îr‹
("Expression overflow");

441 
	`exô
(1);

443 i‡(
™dÊg
)

444 
sy¡ax
;

445 
™dÊg
 = 1;

446 
adv™c
;

448 
INCBEF
:

449 
DECBEF
:

450 i‡(
™dÊg
)

451 
o
 =+ 2;

452 
›⁄°
;

454 
COMPL
:

455 
EXCLA
:

456 
SIZEOF
:

457 i‡(
™dÊg
)

458 
sy¡ax
;

459 
›⁄°
;

461 
MINUS
:

462 i‡(!
™dÊg
) {

463 i‡((
≥eksym
=
	`symbﬁ
())==
FCON
) {

464 
fcvÆ
 = - fcval;

465 
adv™c
;

467 i‡(
≥eksym
==
SFCON
) {

468 
fcvÆ
 = - fcval;

469 
cvÆ
 =^ 0100000;

470 
adv™c
;

472 
o
 = 
NEG
;

474 
™dÊg
 = 0;

475 
›⁄°
;

477 
AND
:

478 
TIMES
:

479 i‡(
™dÊg
)

480 
™dÊg
 = 0; 

481 if(
o
==
AND
)

482 
o
 = 
AMPER
;

484 
o
 = 
STAR
;

485 
›⁄°
;

487 
LPARN
:

488 i‡(
™dÊg
) {

489 
o
 = 
	`symbﬁ
();

490 i‡(
o
==
RPARN
)

491 
o
 = 
MCALL
;

493 
≥eksym
 = 
o
;

494 
o
 = 
CALL
;

495 
™dÊg
 = 0;

498 
›⁄°
;

500 
RBRACK
:

501 
RPARN
:

502 i‡(!
™dÊg
)

503 
sy¡ax
;

504 
›⁄°
;

506 
DOT
:

507 
ARROW
:

508 
mosÊg
++;

513 i‡(!
™dÊg
)

514 
sy¡ax
;

515 
™dÊg
 = 0;

517 
›⁄°
:

518 
p
 = (
›d›e
[
o
]>>9) & 077;

519 i‡((
o
==
COMMA
 || o==
COLON
Ë&& 
öôÊg
)

520 
p
 = 05;

521 
›⁄1
:

522 
ps
 = *
µ
;

523 i‡(
p
>
ps
 ||Ö=ı†&& (
›d›e
[
o
]&
RASSOC
)!=0) {

524 
o
) {

526 
INCAFT
:

527 
DECAFT
:

528 
p
 = 37;

530 
LPARN
:

531 
LBRACK
:

532 
CALL
:

533 
p
 = 04;

535 i‡(
›
 >&
›°
[
SSIZE
-1]) {

536 
	`îr‹
("expression overflow");

537 
	`exô
(1);

539 *++
›
 = 
o
;

540 *++
µ
 = 
p
;

541 
adv™c
;

543 --
µ
;

544 
os
 = *
›
--) {

546 
SEOF
:

547 
≥eksym
 = 
o
;

548 
	`buûd
(0);

549 (*--
˝
);

551 
CALL
:

552 i‡(
o
!=
RPARN
)

553 
sy¡ax
;

554 
	`buûd
(
os
);

555 
adv™c
;

557 
MCALL
:

558 *
˝
++ = 
	`block
(0,0,0,0);

559 
os
 = 
CALL
;

560 
fbuûd
;

562 
LPARN
:

563 i‡(
o
!=
RPARN
)

564 
sy¡ax
;

565 
adv™c
;

567 
LBRACK
:

568 i‡(
o
!=
RBRACK
)

569 
sy¡ax
;

570 
	`buûd
(
LBRACK
);

571 
adv™c
;

573 
fbuûd
:

574 
	`buûd
(
os
);

575 
›⁄1
;

577 
sy¡ax
:

578 
	`îr‹
("Expression syntax");

579 
	`îrÊush
(
o
);

581 
	}
}

583 
	$de˛¨e
(
askw
, 
tkw
, 
off£t
, 
ñsize
)

585 
o
;

586 
skw
;

588 
skw
 = 
askw
;

590 
off£t
 =+ 
	`de˛1
(
skw
, 
tkw
, off£t, 
ñsize
);

591 i‡(
xdÊg
 && 
skw
!=
MOS
)

593 } (
o
=
	`symbﬁ
()Ë=
COMMA
);

594 i‡(
o
==
SEMI
 || o==
RPARN
 && 
skw
==
ARG1
)

595 (
off£t
);

596 
	`decsyn
(
o
);

597 
	}
}

599 
	$de˛1
(
askw
, 
tkw
, 
off£t
, 
ñsize
)

601 
t1
, 
chkoff
;

602 
ty≥
, 
skw
;

603 
hshèb
 *
dsym
;

605 
skw
 = 
askw
;

606 
chkoff
 = 0;

607 
mosÊg
 = 
skw
==
MOS
;

608 i‡((
≥eksym
=
	`symbﬁ
())==
SEMI
 ||Öìksym==
RPARN
)

610 i‡((
t1
=
	`gëy≥
()) < 0)

611 
sy¡ax
;

612 
ty≥
 = 0;

614 
ty≥
 =Åy≥<<2 | (
t1
 & 030);

615 ((
t1
=>>2) & 030)!=0);

616 
ty≥
 =| 
tkw
;

617 
dsym
 = 
defsym
;

618 i‡(!(
dsym
->
h˛ass
==0

619 || (
skw
==
ARG
 && 
dsym
->
h˛ass
==
ARG1
)

620 || (
skw
==
EXTERN
 && 
dsym
->
h˛ass
==EXTERN && dsym->
hty≥
==
ty≥
)))

621 i‡(
skw
==
MOS
 && 
dsym
->
h˛ass
==MOS && dsym->
hty≥
==
ty≥
)

622 
chkoff
 = 1;

624 
	`ªdec
();

625 
sy¡ax
;

627 
dsym
->
hty≥
 = 
ty≥
;

628 i‡(
skw
)

629 
dsym
->
h˛ass
 = 
skw
;

630 i‡(
skw
==
ARG1
) {

631 i‡(
∑øml
==0)

632 
∑øml
 = 
dsym
;

634 
∑øme
->
hoff£t
 = 
dsym
;

635 
∑øme
 = 
dsym
;

637 i‡(
ñsize
 && ((
ty≥
&07)==
RSTRUCT
 || (ty≥&07)==
STRUCT
)) {

638 
dsym
->
À≈
 = 
dimp
;

639 
	`chkdim
();

640 
dimèb
[
dimp
++] = 
ñsize
;

642 
ñsize
 = 0;

643 i‡(
skw
==
MOS
) {

644 
ñsize
 = 
	`Àngth
(
dsym
);

645 i‡((
off£t
&1)!=0 && 
ñsize
!=1) {

646 
off£t
++;

647 
ñsize
++;

649 i‡(
chkoff
 && 
dsym
->
hoff£t
 !
off£t
)

650 
	`ªdec
();

651 
dsym
->
hoff£t
 = 
off£t
;

653 i‡((
dsym
->
hty≥
&030)==
FUNC
) {

654 i‡(
dsym
->
h˛ass
!=
EXTERN
 && dsym->h˛ass!=
AUTO
)

655 
	`îr‹
("Bad function");

656 
dsym
->
h˛ass
 = 
EXTERN
;

658 i‡(
dsym
->
h˛ass
==
AUTO
) {

659 
autﬁí
 =+ 
	`æígth
(
dsym
);

660 
dsym
->
hoff£t
 = -
autﬁí
;

661 } i‡(
dsym
->
h˛ass
==
STATIC
) {

662 
dsym
->
hoff£t
 = 
i¢
;

663 
	`¥ötf
(".bss\nL%d:.=.+%o\n.ãxt\n", 
i¢
++, 
	`æígth
(
dsym
));

664 } i‡(
dsym
->
h˛ass
==
REG
) {

665 i‡((
ty≥
&07)>
CHAR
 && (type&030)==0

666 || (
ty≥
&030)>
PTR
 || 
ªgv¨
<3)

667 
	`îr‹
("BadÑegi°î %o", 
ty≥
);

668 
dsym
->
hoff£t
 = --
ªgv¨
;

670 
sy¡ax
:

671 (
ñsize
);

672 
	}
}

674 
	$gëy≥
()

676 
o
, 
ty≥
;

677 
hshèb
 *
ds
;

679 
o
=
	`symbﬁ
()) {

681 
TIMES
:

682 (
	`gëy≥
()<<2 | 
PTR
);

684 
LPARN
:

685 
ty≥
 = 
	`gëy≥
();

686 i‡((
o
=
	`symbﬁ
()Ë!
RPARN
)

687 
sy¡ax
;

688 
gëf
;

690 
NAME
:

691 
defsym
 = 
ds
 = 
csym
;

692 
ty≥
 = 0;

693 
ds
->
s•
 = 
dimp
;

694 
gëf
:

695 
o
=
	`symbﬁ
()) {

697 
LPARN
:

698 i‡(
xdÊg
) {

699 
xdÊg
 = 0;

700 
ds
 = 
defsym
;

701 
	`de˛¨e
(
ARG1
, 0, 0, 0);

702 
defsym
 = 
ds
;

703 
xdÊg
++;

705 i‡((
o
=
	`symbﬁ
()Ë!
RPARN
)

706 
sy¡ax
;

707 
ty≥
 =Åy≥<<2 | 
FUNC
;

708 
gëf
;

710 
LBRACK
:

711 i‡((
o
=
	`symbﬁ
()Ë!
RBRACK
) {

712 
≥eksym
 = 
o
;

713 
cvÆ
 = 
	`c⁄exp
();

714 
o
=
ds
->
s•
&0377; o<
dimp
; o++)

715 
dimèb
[
o
] =* 
cvÆ
;

716 
dimèb
[
dimp
++] = 
cvÆ
;

717 i‡((
o
=
	`symbﬁ
())!=
RBRACK
)

718 
sy¡ax
;

720 
dimèb
[
dimp
++] = 1;

721 
ty≥
 =Åy≥<<2 | 
ARRAY
;

722 
gëf
;

724 
≥eksym
 = 
o
;

725 (
ty≥
);

727 
sy¡ax
:

728 
	`decsyn
(
o
);

730 
	}
}

732 
	$decsyn
(
o
)

734 
	`îr‹
("Declaration syntax");

735 
	`îrÊush
(
o
);

736 
	}
}

738 
	$ªdec
()

740 
	`îr‹
("%.8†ªde˛¨ed", 
defsym
->
«me
);

741 
	}
}

	@usr/c/c01.c

7 
	~"c0h.c
"

9 
	$buûd
(
›
) {

10 
t1
;

11 
t2
, 
t3
, 
t
;

12 
äode
 *
p3
, *
	`dißºay
();

13 
äode
 *
p1
, *
p2
;

14 
d
, 
d›e
, 
À·c
, 
cvn
, 
pcvn
;

16 i‡(
›
==
LBRACK
) {

17 
	`buûd
(
PLUS
);

18 
›
 = 
STAR
;

20 
d›e
 = 
›d›e
[
›
];

21 i‡((
d›e
&
BINARY
)!=0) {

22 
p2
 = 
	`chkfun
(
	`dißºay
(*--
˝
));

23 
t2
 = 
p2
->
ty≥
;

25 
p1
 = *--
˝
;

26 i‡(
›
==
SIZEOF
) {

27 
t1
 = 
	`Àngth
(
p1
);

28 
p1
->
›
 = 
CON
;

29 
p1
->
ty≥
 = 
INT
;

30 
p1
->
dimp
 = 0;

31 
p1
->
vÆue
 = 
t1
;

32 *
˝
++ = 
p1
;

35 i‡(
›
!=
AMPER
) {

36 
p1
 = 
	`dißºay
(p1);

37 i‡(
›
!=
CALL
)

38 
p1
 = 
	`chkfun
(p1);

40 
t1
 = 
p1
->
ty≥
;

41 
pcvn
 = 0;

42 
›
) {

46 *
˝
++ = 
p1
;

50 
COMMA
:

51 
LOGAND
:

52 
LOGOR
:

53 *
˝
++ = 
	`block
(2, 
›
, 0, 0, 
p1
, 
p2
);

56 
QUEST
:

57 i‡(
p2
->
›
!=
COLON
)

58 
	`îr‹
("Illegal conditional");

59 
t
 = 
t2
;

60 
nocv
;

62 
CALL
:

63 i‡((
t1
&030Ë!
FUNC
)

64 
	`îr‹
("Call ofÇon-function");

65 *
˝
++ = 
	`block
(2,
CALL
,
	`de¸ef
(
t1
),
p1
->
dimp
,p1,
p2
);

68 
STAR
:

69 i‡(
p1
->
›
==
AMPER
 ) {

70 *
˝
++ = 
p1
->
å1
;

73 i‡((
t1
&030Ë=
FUNC
)

74 
	`îr‹
("Illegal indirection");

75 *
˝
++ = 
	`block
(1,
STAR
,
	`de¸ef
(
t1
),
p1
->
dimp
,p1);

78 
AMPER
:

79 i‡(
p1
->
›
==
STAR
) {

80 
p1
->
å1
->
dimp
 =Ö1->dimp;

81 
p1
->
å1
->
ty≥
 = 
	`ö¸ef
(
t1
);

82 *
˝
++ = 
p1
->
å1
;

85 i‡(
p1
->
›
==
NAME
) {

86 *
˝
++ = 
	`block
(1,
›
,
	`ö¸ef
(
t1
),
p1
->
dimp
,p1);

89 
	`îr‹
("IllegalÜvalue");

92 
INCBEF
:

93 
DECBEF
:

94 
INCAFT
:

95 
DECAFT
:

96 
	`chklvÆ
(
p1
);

97 *
˝
++ = 
	`block
(2,
›
,
t1
,
p1
->
dimp
,p1,
	`∂ígth
(p1));

100 
ARROW
:

101 *
˝
++ = 
p1
;

102 
	`chkw
(
p1
);

103 
p1
->
ty≥
 = 
PTR
+
STRUCT
;

104 
	`buûd
(
STAR
);

105 
p1
 = *--
˝
;

107 
DOT
:

108 i‡(
p2
->
›
!=
NAME
 ||Ö2->
˛ass
!=
MOS
)

109 
	`îr‹
("Illegal structureÑef");

110 *
˝
++ = 
p1
;

111 
t
 = 
t2
;

112 i‡((
t
&030Ë=
ARRAY
) {

113 
t
 = 
	`de¸ef
(t);

114 
p2
->
s•
++;

116 
	`£ty≥
(
p1
, 
t
, 
p2
->
dimp
);

117 
	`buûd
(
AMPER
);

118 *
˝
++ = 
	`block
(1,
CON
,7,0,
p2
->
∆oc
);

119 
	`buûd
(
PLUS
);

120 i‡((
t2
&030Ë!
ARRAY
)

121 
	`buûd
(
STAR
);

124 i‡((
d›e
&
LVALUE
)!=0)

125 
	`chklvÆ
(
p1
);

126 i‡((
d›e
&
LWORD
)!=0)

127 
	`chkw
(
p1
);

128 i‡((
d›e
&
RWORD
)!=0)

129 
	`chkw
(
p2
);

130 i‡((
d›e
&
BINARY
)==0) {

131 i‡(!
	`fﬁd
(
›
, 
p1
, 0))

132 *
˝
++ = 
	`block
(1,
›
,
t1
,
p1
->
dimp
,p1);

135 i‡(
t2
==7) {

136 
t
 = 
t1
;

137 
p2
->
ty≥
 = 0;

138 
t2
 = 0;

139 
nocv
;

141 
cvn
 = 
cvèb
[11*
	`lötyp
(
t1
)+lötyp(
t2
)];

142 
À·c
 = 
cvn
&0100;

143 
t
 = 
À·c
? 
t2
:
t1
;

144 i‡(
›
==
ASSIGN
 && 
t1
!=
STRUCT
 && 
t2
!=STRUCT) {

145 
t
 = 
t1
;

146 i‡(
À·c
 || 
cvn
!=3)

147 
nocv
;

149 i‡(
cvn
 =& 077) {

150 i‡(
›
==
COLON
 && 
t1
>=
PTR
 &&Å1==
t2
)

151 
nocv
;

152 i‡(
cvn
==077) {

153 i‡((
d›e
&
RELAT
)==0 || 
t1
<
PTR
 || 
t2
<PTR)

154 
ûlcv
:

155 
	`îr‹
("Illegal conversion");

156 
nocv
;

158 i‡(
cvn
==2) {

159 
t
 = 0;

160 i‡((
d›e
&
RELAT
)!=0) {

161 
cvn
 = 0;

162 
nocv
;

164 i‡(
›
!=
MINUS
)

165 
ûlcv
;

166 
pcvn
 = 
cvn
;

167 
cvn
 = 0;

168 
nocv
;

170 i‡(
À·c
) {

171 i‡((
d›e
&
ASSGOP
) != 0) {

172 i‡(
cvn
 == 3) {

173 
À·c
 = 0;

174 
cvn
 = 4;

175 
t
 = 
t1
;

176 
rcvt
;

178 
ûlcv
;

180 
p1
 = 
	`c⁄vît
’1, 
t
, 
cvn
, 
	`∂ígth
(
p2
));

182 
rcvt
:

183 
p2
 = 
	`c⁄vît
’2, 
t
, 
cvn
, 
	`∂ígth
(
p1
));

185 
nocv
:; }

186 i‡((
d›e
&
RELAT
)!=0) {

187 i‡(
›
>
NEQUAL
 && (
t1
>=
PTR
 || 
t2
>=PTR))

188 
›
 =+ 4;

189 
t
 = 0;

191 i‡(
	`fﬁd
(
›
, 
p1
, 
p2
))

193 *
˝
++ = 
	`block
(2,
›
,
t
,(
p1
->
dimp
==0? 
p2
:p1)->dimp,p1,p2);

194 i‡(
pcvn
) {

195 
p1
 = *--
˝
;

196 *
˝
++ = 
	`c⁄vît
(
p1
, 0, 
pcvn
, 
	`∂ígth
’1->
å1
));

198 
	}
}

200 
	$c⁄vît
(
p
, 
t
, 
cvn
, 
Àn
)

201 
äode
 *
p
;

203 
n
;

205 
cvn
) {

209 
n
 = 
TIMES
;

210 
md
;

214 
n
 = 
DIVIDE
;

215 
md
:

216 (
	`block
(2, 
n
, 
t
, 0, 
p
, block(1, 
CON
, 0, 0, 
Àn
)));

220 
n
 = 
ITOF
;

221 
di
;

225 
n
 = 
FTOI
;

226 
di
:

227 (
	`block
(1, 
n
, 
t
, 0, 
p
));

229 
	`îr‹
("CÉrror-- convert");

230 (
p
);

231 
	}
}

233 
	$£ty≥
(
≠
, 
©
, 
adim±r
)

234 
äode
 *
≠
;

236 
äode
 *
p
;

237 
t
, 
dim±r
;

239 
p
 = 
≠
;

240 
t
 = 
©
;

241 
dim±r
 = 
adim±r
;

242 
p
->
ty≥
 = 
t
;

243 i‡(
dim±r
 != -1)

244 
p
->
dimp
 = 
dim±r
;

245 
p
->
›
) {

247 
AMPER
:

248 
	`£ty≥
(
p
->
å1
, 
	`de¸ef
(
t
), 
dim±r
);

251 
STAR
:

252 
	`£ty≥
(
p
->
å1
, 
	`ö¸ef
(
t
), 
dim±r
);

255 
PLUS
:

256 
MINUS
:

257 
	`£ty≥
(
p
->
å1
, 
t
, 
dim±r
);

259 
	}
}

261 
	$chkfun
(
≠
)

262 
äode
 *
≠
;

264 
äode
 *
p
;

265 
t
;

267 
p
 = 
≠
;

268 i‡(((
t
 = 
p
->
ty≥
)&030)==
FUNC
)

269 (
	`block
(1,
AMPER
,
	`ö¸ef
(
t
),
p
->
dimp
,p));

270 (
p
);

271 
	}
}

273 
äode
 *
	$dißºay
(
≠
)

274 
äode
 *
≠
;

276 
t
;

277 
äode
 *
p
;

279 
p
 = 
≠
;

281 i‡(((
t
 = 
p
->
ty≥
)&030)!=
ARRAY
 ||Ö->
›
==
NAME
&&p->
˛ass
==
MOS
)

282 (
p
);

283 
p
->
s•
++;

284 *
˝
++ = 
p
;

285 
	`£ty≥
(
p
, 
	`de¸ef
(
t
), -1);

286 
	`buûd
(
AMPER
);

287 (*--
˝
);

288 
	}
}

290 
	$chkw
(
p
)

291 
äode
 *
p
;

293 
t
;

295 i‡((
t
=
p
->
ty≥
)>
CHAR
 &&Å<
PTR
)

296 
	`îr‹
("Integer operandÑequired");

298 
	}
}

300 
	$lötyp
(
©
)

302 
t
;

304 
t
 = 
©
;

305 i‡(
t
<
PTR
)

306 (
t
);

307 i‡((
t
&0170) == 0150)

309 i‡((
t
&037)==t)

310 ((
t
&07)+5);

312 
	}
}

314 
	$îr‹
(
s
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
)

316 
f
;

317 
fout
;

319 
√º‹
++;

320 
	`Êush
();

321 
f
 = 
fout
;

322 
fout
 = 1;

323 
	`¥ötf
("%d: ", 
löe
);

324 
	`¥ötf
(
s
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
);

325 
	`putch¨
('\n');

326 
	`Êush
();

327 
fout
 = 
f
;

328 
	}
}

330 
	$block
(
n
, 
›
, 
t
, 
d
, 
p1
,
p2
,
p3
)

331 *
p1
, *
p2
, *
p3
;

333 *
≠
, *
p
;

335 
≠
 = &
›
;

336 
n
 =+ 3;

337 
p
 = 
•a˚
;

338 
n
--)

339 
	`pblock
(*
≠
++);

340 (
p
);

341 
	}
}

343 
	$pblock
(
p
)

346 *
•a˚
++ = 
p
;

347 i‡(--
o¶e·
<=0) {

348 
	`îr‹
("Expression overflow");

349 
	`exô
(1);

351 
	}
}

353 
	$chklvÆ
(
≠
)

354 
äode
 *
≠
;

356 
äode
 *
p
;

358 
p
 = 
≠
;

359 i‡(
p
->
›
!=
NAME
 &&Ö->›!=
STAR
)

360 
	`îr‹
("LvalueÑequired");

361 
	}
}

363 
	$fﬁd
(
›
, 
≠1
, 
≠2
)

364 
äode
 *
≠1
, *
≠2
;

366 
äode
 *
p1
;

367 
v1
, 
v2
;

369 
p1
 = 
≠1
;

370 i‡(
p1
->
›
!=
CON
 || (
≠2
!=0 &&áp2->op!=CON))

372 
v1
 = 
p1
->
vÆue
;

373 
v2
 = 
≠2
->
vÆue
;

374 
›
) {

376 
PLUS
:

377 
v1
 =+ 
v2
;

380 
MINUS
:

381 
v1
 =- 
v2
;

384 
TIMES
:

385 
v1
 =* 
v2
;

388 
DIVIDE
:

389 
v1
 =/ 
v2
;

392 
MOD
:

393 
v1
 =% 
v2
;

396 
AND
:

397 
v1
 =& 
v2
;

400 
OR
:

401 
v1
 =| 
v2
;

404 
EXOR
:

405 
v1
 =^ 
v2
;

408 
NEG
:

409 
v1
 = - v1;

412 
COMPL
:

413 
v1
 = ~ v1;

416 
LSHIFT
:

417 
v1
 =<< 
v2
;

420 
RSHIFT
:

421 
v1
 =>> 
v2
;

427 
p1
->
vÆue
 = 
v1
;

428 *
˝
++ = 
p1
;

430 
	}
}

432 
	$c⁄exp
()

434 
äode
 *
t
;

436 
öôÊg
++;

437 i‡(
t
 = 
	`åì
())

438 i‡(
t
->
›
 !
CON
)

439 
	`îr‹
("ConstantÑequired");

440 
öôÊg
--;

441 (
t
->
vÆue
);

442 
	}
}

	@usr/c/c02.c

7 
	~"c0h.c
"

9 
	$extdef
()

11 
o
, 
width
;

12 
ty≥
, 
ñsize
, 
√l
;

13 *
cs
;

14 
hshèb
 *
ds
;

16 if(((
o
=
	`symbﬁ
())==
EOF
Ë|| o==
SEMI
)

18 
ty≥
 = 0;

19 
xdÊg
 = 
FNDEL
;

20 
xxx
:

21 i‡(
o
==
KEYW
) {

22 i‡(
cvÆ
==
EXTERN
) {

23 
o
 = 
	`symbﬁ
();

24 
xxx
;

26 i‡((
ty≥
=
cvÆ
)>
STRUCT
)

27 
sy¡ax
;

28 
ñsize
 = 0;

29 i‡(
ty≥
==
STRUCT
) {

30 
ñsize
 = 
	`°rdec
(&
ty≥
, 0);

31 i‡((
≥eksym
=
	`symbﬁ
())!=
KEYW
)

32 
	`blkhed
();

35 i‡(
o
!=
NAME
)

36 
sy¡ax
;

37 
≥eksym
 = 
o
;

40 
defsym
 = 0;

41 
°rÊg
 = 1;

42 
	`de˛1
(
EXTERN
, 
ty≥
&07, 0, 
ñsize
);

43 i‡((
ds
=
defsym
)==0)

45 
cs
 = 
ds
->
«me
;

46 
funcsym
 = 
ds
;

47 
ds
->
hÊag
 = 
FNDEL
;

48 
	`¥ötf
(".globl _%.8s\n", 
cs
);

49 
xdÊg
 = 0;

50 
ty≥
 = 
ds
->type;

51 i‡((
ty≥
&030)==
FUNC
) {

52 i‡((
≥eksym
=
	`symbﬁ
())==
LBRACE
 ||Öìksym==
KEYW
)

53 
	`cfunc
(
cs
);

56 
√l
 = 1;

57 (
ds
->
ty≥
&030)==
ARRAY
) {

58 
√l
 = 
dimèb
[
ds
->
s•
&0377];

59 
ds
->
ty≥
 = 
	`de¸ef
(ds->type);

61 
width
 = 
	`Àngth
(
ds
);

62 i‡(
ds
->
ty≥
==
STRUCT
) {

63 
√l
 =* 
width
/2;

64 
width
 = 0;

66 
ds
->
ty≥
 =Åype;

67 
	`cöô
(
cs
, 
ty≥
, 
√l
, 
width
);

68 } (
o
=
	`symbﬁ
())==
COMMA
);

69 i‡(
o
==
SEMI
)

71 
sy¡ax
:

72 
	`îr‹
("External definition syntax");

73 
	`îrÊush
(
o
);

74 
	`°©emít
(0);

75 
	}
}

77 
	$cfunc
(
cs
)

78 *
cs
;

80 
ßvdimp
;

82 
°rÊg
 = 0;

83 
ßvdimp
 = 
dimp
;

84 
	`¥ötf
(".ãxt\n_%.8s:\n", 
cs
);

85 
	`de˛i°
(
ARG
);

86 
ªgv¨
 = 5;

87 
ªéab
 = 
i¢
++;

88 i‡((
≥eksym
 = 
	`symbﬁ
()Ë!
LBRACE
)

89 
	`îr‹
("Compound statementÑequired");

90 
	`°©emít
(1);

91 
	`¥ötf
("L%d:jmpÑªån\n", 
ªéab
);

92 
dimp
 = 
ßvdimp
;

93 
	}
}

95 
	$cöô
(
cs
, 
ty≥
, 
√l
, 
awidth
)

96 *
cs
;

98 
o
, 
nöô
, 
width
;

100 i‡((
width
 = 
awidth
) == 0)

101 
width
 = 2;

102 i‡((
≥eksym
=
	`symbﬁ
())==
COMMA
 ||Öìksym==
SEMI
) {

103 
	`¥ötf
(".comm _%.8s,%o\n", 
cs
, (
√l
*
width
+1)&~01);

106 
nöô
 = 0;

107 
	`¥ötf
(".d©a\n_%.8s=.\n", 
cs
);

108 i‡((
o
=
	`symbﬁ
())==
LBRACE
) {

110 
nöô
 = 
	`cöô1
(
cs
, 
ty≥
, 
awidth
,Çinit);

111 (
o
=
	`symbﬁ
())==
COMMA
);

112 i‡(
o
!=
RBRACE
)

113 
≥eksym
 = 
o
;

115 
≥eksym
 = 
o
;

116 
nöô
 = 
	`cöô1
(
cs
, 
ty≥
, 
awidth
, 0);

118 i‡(
nöô
<
√l
)

119 
	`¥ötf
(".=.+%o\n", (
√l
-
nöô
)*
width
);

121 
√l
 = 
nöô
;

122 i‡(
√l
>1 && (
ty≥
&030)!=
ARRAY
 && (ty≥&07)!=
STRUCT
)

123 
	`îr‹
("Too many initializers");

124 i‡(((
√l
&
width
)&01) != 0)

125 
	`¥ötf
(".even\n");

126 
	}
}

128 
	$cöô1
(
cs
, 
ty≥
, 
awidth
, 
nöô
)

129 *
cs
;

131 
sf
;

132 
äode
 *
s
;

133 
width
;

135 i‡((
≥eksym
=
	`symbﬁ
())==
STRING
 && 
ty≥
==
ARRAY
+
CHAR
) {

136 
≥eksym
 = -1;

137 i‡(
nöô
)

138 
	`bxdec
();

139 
	`¥ötf
(".ãxt\n_%.8s=L%d\n", 
cs
, 
cvÆ
);

140 ((
nch°r
+1) & ~01);

142 i‡(
≥eksym
==
RBRACE
)

143 (
nöô
);

144 
öôÊg
++;

145 
s
 = 
	`åì
();

146 i‡((
width
 = 
awidth
) == 0)

147 
width
 = 
	`Àngth
(
s
);

148 
öôÊg
 = 0;

149 
width
) {

152 
	`¥ötf
(".byte ");

153 i‡(
s
->
›
 !
CON
)

154 
	`bxdec
();

157 i‡(
s
->
›
==
CON
) {

158 
	`¥ötf
("%o\n", 
s
->
vÆue
);

161 
	`r˚x¥
(
	`block
(1,
INIT
,0,0,
s
), 
ªgèb
);

165 
sf
 = 
fcvÆ
;

166 
	`¥ötf
("%o;%o\n", 
sf
);

167 
Êt
;

170 
	`¥ötf
("%o;%o;%o;%o\n", 
fcvÆ
);

171 i‡(
awidth
==0)

172 
nöô
 =+ 3;

173 
Êt
:

174 i‡(
s
->
›
==
FCON
 || s->›==
SFCON
)

178 
	`bxdec
();

181 (++
nöô
);

182 
	}
}

184 
	$bxdec
()

186 
	`îr‹
("InconsistentÉxternal initialization");

187 
	}
}

189 
	$°©emít
(
d
)

191 
o
, 
o1
, 
o2
;

192 
o3
, 
o4
;

193 
äode
 *
≈
;

195 
°mt
:

196 
o
=
	`symbﬁ
()) {

198 
EOF
:

199 
	`îr‹
("Unexpected EOF");

200 
SEMI
:

201 
RBRACE
:

204 
LBRACE
:

205 i‡(
d
) {

206 
o2
 = 
	`blkhed
() - 4;

207 i‡(
¥oÊg
)

208 
o
 = "jsr\tr5,mrsave;0f;%o\n.bss\n0:.=.+2\n.text\n";

210 
o
 = "jsrÑ5,rsave; %o\n";

211 
	`¥ötf
(
o
, 
o2
);

213 !
eof
) {

214 i‡((
o
=
	`symbﬁ
())==
RBRACE
)

216 
≥eksym
 = 
o
;

217 
	`°©emít
(0);

219 
	`îr‹
("Missing '}'");

222 
KEYW
:

223 
cvÆ
) {

225 
GOTO
:

226 i‡(
o1
 = 
	`sim∂egŸo
())

227 
	`bønch
(
o1
);

229 
	`dogŸo
();

230 
£mi
;

232 
RETURN
:

233 
	`d‹ë
();

234 
£mi
;

236 
IF
:

237 
≈
 = 
	`≥x¥
();

238 
o2
 = 0;

239 i‡((
o1
=
	`symbﬁ
())==
KEYW
Ë
cvÆ
) {

240 
GOTO
:

241 i‡(
o2
=
	`sim∂egŸo
())

242 
simpif
;

243 
	`cbønch
(
≈
, 
o2
=
i¢
++, 0);

244 
	`dogŸo
();

245 
	`œbñ
(
o2
);

246 
h¨dif
;

248 
RETURN
:

249 i‡(
	`√xtch¨
()==';') {

250 
o2
 = 
ªéab
;

251 
simpif
;

253 
	`cbønch
(
≈
, 
o1
=
i¢
++, 0);

254 
	`d‹ë
();

255 
	`œbñ
(
o1
);

256 
o2
++;

257 
h¨dif
;

259 
BREAK
:

260 
o2
 = 
brkœb
;

261 
simpif
;

263 
CONTIN
:

264 
o2
 = 
c⁄éab
;

265 
simpif
:

266 
	`chc⁄brk
(
o2
);

267 
	`cbønch
(
≈
, 
o2
, 1);

268 
h¨dif
:

269 i‡((
o
=
	`symbﬁ
())!=
SEMI
)

270 
sy¡ax
;

271 i‡((
o1
=
	`symbﬁ
())==
KEYW
 && 
cvÆ
==
ELSE
)

272 
°mt
;

273 
≥eksym
 = 
o1
;

276 
≥eksym
 = 
o1
;

277 
	`cbønch
(
≈
, 
o1
=
i¢
++, 0);

278 
	`°©emít
(0);

279 i‡((
o
=
	`symbﬁ
())==
KEYW
 && 
cvÆ
==
ELSE
) {

280 
o2
 = 
i¢
++;

281 
	`bønch
(
o2
);

282 
	`œbñ
(
o1
);

283 
	`°©emít
(0);

284 
	`œbñ
(
o2
);

287 
≥eksym
 = 
o
;

288 
	`œbñ
(
o1
);

291 
WHILE
:

292 
o1
 = 
c⁄éab
;

293 
o2
 = 
brkœb
;

294 
	`œbñ
(
c⁄éab
 = 
i¢
++);

295 
	`cbønch
(
	`≥x¥
(), 
brkœb
=
i¢
++, 0);

296 
	`°©emít
(0);

297 
	`bønch
(
c⁄éab
);

298 
	`œbñ
(
brkœb
);

299 
c⁄éab
 = 
o1
;

300 
brkœb
 = 
o2
;

303 
BREAK
:

304 
	`chc⁄brk
(
brkœb
);

305 
	`bønch
(
brkœb
);

306 
£mi
;

308 
CONTIN
:

309 
	`chc⁄brk
(
c⁄éab
);

310 
	`bønch
(
c⁄éab
);

311 
£mi
;

313 
DO
:

314 
o1
 = 
c⁄éab
;

315 
o2
 = 
brkœb
;

316 
c⁄éab
 = 
i¢
++;

317 
brkœb
 = 
i¢
++;

318 
	`œbñ
(
o3
 = 
i¢
++);

319 
	`°©emít
(0);

320 
	`œbñ
(
c⁄éab
);

321 
c⁄éab
 = 
o1
;

322 i‡((
o
=
	`symbﬁ
())==
KEYW
 && 
cvÆ
==
WHILE
) {

323 
	`cbønch
(
	`åì
(), 
o3
, 1);

324 
	`œbñ
(
brkœb
);

325 
brkœb
 = 
o2
;

326 
£mi
;

328 
sy¡ax
;

330 
CASE
:

331 
o1
 = 
	`c⁄exp
();

332 i‡((
o
=
	`symbﬁ
())!=
COLON
)

333 
sy¡ax
;

334 i‡(
swp
==0) {

335 
	`îr‹
("CaseÇot in switch");

336 
°mt
;

338 if(
swp
>=
swèb
+
swsiz
) {

339 
	`îr‹
("SwitchÅable overflow");

341 
swp
->
swœb
 = 
i¢
;

342 (
swp
++)->
swvÆ
 = 
o1
;

343 
	`œbñ
(
i¢
++);

345 
°mt
;

347 
SWITCH
:

348 
o1
 = 
brkœb
;

349 
brkœb
 = 
i¢
++;

350 
≈
 = 
	`≥x¥
();

351 
	`chkw
(
≈
);

352 
	`r˚x¥
(
	`block
(1,
RFORCE
,0,0,
≈
), 
ªgèb
);

353 
	`pswôch
();

354 
brkœb
 = 
o1
;

357 
DEFAULT
:

358 i‡(
swp
==0)

359 
	`îr‹
("DefaultÇot in switch");

360 i‡((
o
=
	`symbﬁ
())!=
COLON
)

361 
sy¡ax
;

362 
	`œbñ
(
deÊab
 = 
i¢
++);

363 
°mt
;

365 
FOR
:

366 
o1
 = 
c⁄éab
;

367 
o2
 = 
brkœb
;

368 
c⁄éab
 = 
i¢
++;

369 
brkœb
 = 
i¢
++;

370 i‡(
o
=
	`f‹°mt
())

371 
sy¡ax
;

372 
	`œbñ
(
brkœb
);

373 
c⁄éab
 = 
o1
;

374 
brkœb
 = 
o2
;

378 
	`îr‹
("Unknown keyword");

379 
sy¡ax
;

381 
NAME
:

382 i‡(
	`√xtch¨
()==':') {

383 
≥ekc
 = 0;

384 
o1
 = 
csym
;

385 i‡(
o1
->
h˛ass
>0) {

386 
	`îr‹
("Redefinition");

387 
°mt
;

389 
o1
->
h˛ass
 = 
STATIC
;

390 
o1
->
hty≥
 = 
ARRAY
;

391 i‡(
o1
->
hoff£t
==0)

392 
o1
->
hoff£t
 = 
i¢
++;

393 
	`œbñ
(
o1
->
hoff£t
);

394 i‡((
≥eksym
=
	`symbﬁ
())==
RBRACE
)

396 
°mt
;

400 
≥eksym
 = 
o
;

401 
	`r˚x¥
(
	`åì
(), 
ef·ab
);

403 
£mi
:

404 i‡((
o
=
	`symbﬁ
())==
SEMI
)

406 
sy¡ax
:

407 
	`îr‹
("Statement syntax");

408 
	`îrÊush
(
o
);

409 
°mt
;

410 
	}
}

412 
	#f‹•s
 150

	)

414 
	$f‹°mt
()

416 
l
, 
ßvx¥
[
f‹•s
];

417 *
°
, *
ss
;

418 *
•1
, *
•2
, 
o
;

420 i‡((
o
=
	`symbﬁ
()Ë!
LPARN
)

421 (
o
);

422 i‡((
o
=
	`symbﬁ
()Ë!
SEMI
) {

423 
≥eksym
 = 
o
;

424 
	`r˚x¥
(
	`åì
(), 
ef·ab
);

425 i‡((
o
=
	`symbﬁ
()Ë!
SEMI
)

426 (
o
);

428 
	`œbñ
(
c⁄éab
);

429 i‡((
o
=
	`symbﬁ
()Ë!
SEMI
) {

430 
≥eksym
 = 
o
;

431 
	`r˚x¥
(
	`block
(1,
CBRANCH
,
	`åì
(),
brkœb
,0), 
c˘ab
);

432 i‡((
o
=
	`symbﬁ
()Ë!
SEMI
)

433 (
o
);

435 i‡((
≥eksym
=
	`symbﬁ
()Ë=
RPARN
) {

436 
≥eksym
 = -1;

437 
	`°©emít
(0);

438 
	`bønch
(
c⁄éab
);

441 
l
 = 
c⁄éab
;

442 
c⁄éab
 = 
i¢
++;

443 
°
 = 
	`åì
();

444 i‡((
o
=
	`symbﬁ
()Ë!
RPARN
)

445 (
o
);

446 
ss
 = 
•a˚
;

447 i‡(
•a˚
-
åìba£
 > 
f‹•s
) {

448 
	`îr‹
("ExpressionÅooÜarge");

449 
•a˚
 = &
åìba£
[
f‹•s
];

451 
•2
 = 
ßvx¥
;

452 
•1
=
åìba£
; sp1<
•a˚
;)

453 *
•2
++ = *
•1
++;

454 
	`°©emít
(0);

455 
•a˚
 = 
ss
;

456 
•2
 = 
ßvx¥
;

457 
•1
=
åìba£
; sp1<
•a˚
;)

458 *
•1
++ = *
•2
++;

459 
	`œbñ
(
c⁄éab
);

460 
	`r˚x¥
(
°
, 
ef·ab
);

461 
	`bønch
(
l
);

463 
	}
}

465 
	$≥x¥
()

467 
o
, 
t
;

469 i‡((
o
=
	`symbﬁ
())!=
LPARN
)

470 
sy¡ax
;

471 
t
 = 
	`åì
();

472 i‡((
o
=
	`symbﬁ
())!=
RPARN
)

473 
sy¡ax
;

474 (
t
);

475 
sy¡ax
:

476 
	`îr‹
("Statement syntax");

477 
	`îrÊush
(
o
);

479 
	}
}

481 
	$pswôch
()

483 *
sswp
, 
swœb
;

484 *
swb
, *
wswp
, 
dl
;

486 
swb
 = 
sswp
 = 
swp
;

487 i‡(
swp
==0)

488 
swb
 = 
swp
 = 
swèb
;

489 
	`bønch
(
swœb
=
i¢
++);

490 
dl
 = 
deÊab
;

491 
deÊab
 = 0;

492 
	`°©emít
(0);

493 
	`bønch
(
brkœb
);

494 
	`œbñ
(
swœb
);

495 
	`putch¨
('#');

496 
	`œbñ
(
brkœb
);

497 i‡(!
deÊab
) {

498 
deÊab
 = 
i¢
++;

499 
	`œbñ
(
deÊab
);

501 
wswp
 = 
swp
;

502 
	`putw
(
wswp
-
swb
, 
böbuf
);

503 
	`putw
(
deÊab
, 
böbuf
);

504 
	`putw
(4, 
böbuf
);

505 
	`putw
(
löe
, 
böbuf
);

506 
swb
 < 
wswp
)

507 
	`putw
(*
swb
++, 
böbuf
);

508 
deÊab
 = 
dl
;

509 
swp
 = 
sswp
;

510 
	}
}

512 
	$blkhed
()

514 
∂
;

515 
hshèb
 *
cs
;

517 
autﬁí
 = 6;

518 
	`de˛i°
(0);

519 
∂
 = 4;

520 
∑øml
) {

521 
∑øme
->
hoff£t
 = 0;

522 
cs
 = 
∑øml
;

523 
∑øml
 =Ö¨aml->
hoff£t
;

524 i‡(
cs
->
hty≥
==
FLOAT
)

525 
cs
->
hty≥
 = 
DOUBLE
;

526 
cs
->
hoff£t
 = 
∂
;

527 
cs
->
h˛ass
 = 
AUTO
;

528 i‡((
cs
->
hty≥
&030Ë=
ARRAY
) {

529 
cs
->
hty≥
 =- 020;

530 
cs
->
s•
++;

532 
∂
 =+ 
	`æígth
(
cs
);

534 
cs
=
hshèb
; cs<hshèb+
hshsiz
; cs++) {

535 i‡(
cs
->
«me
[0] == '\0')

538 i‡(
cs
->
h˛ass
>
KEYWC
 && (cs->
hty≥
&07)==
RSTRUCT
) {

539 
cs
->
À≈
 = 
dimèb
[cs->lenp&0377]->lenp;

540 
cs
->
hty≥
 = cs->hty≥&~07 | 
STRUCT
;

542 i‡(
cs
->
h˛ass
 =
STRTAG
 && 
dimèb
[cs->
À≈
&0377]==0)

543 
	`îr‹
("Undeföed såu˘uª: %.8s", 
cs
->
«me
);

544 i‡(
cs
->
h˛ass
 =
ARG
)

545 
	`îr‹
("NŸá¿¨gumít: %.8s", 
cs
->
«me
);

547 
o¶e·
 = 
ossiz
;

548 
•a˚
 = 
åìba£
;

549 
	`r˚x¥
(
	`block
(1, 
SETREG
, 
ªgv¨
), 
ªgèb
);

550 (
autﬁí
);

551 
	}
}

553 
	$blkíd
() {

554 
hshèb
 *
cs
;

556 
cs
=
hshèb
; cs<hshèb+
hshsiz
; cs++) {

557 i‡(
cs
->
«me
[0]) {

558 i‡(
cs
->
h˛ass
==0)

559 
	`îr‹
("%.8†undeföed", 
cs
->
«me
);

560 if((
cs
->
hÊag
&
FNDEL
)==0) {

561 
cs
->
«me
[0] = '\0';

562 
hshu£d
--;

566 
	}
}

568 
	$îrÊush
(
ao
)

570 
o
;

572 
o
 = 
ao
;

573 
o
>
RBRACE
)

574 
o
 = 
	`symbﬁ
();

575 
≥eksym
 = 
o
;

576 
	}
}

578 
	$de˛i°
(
skwd
)

580 
o
, 
ñsize
, 
ndec
;

581 
off£t
, 
tkw
, 
skw
;

583 
off£t
 = 0;

584 
lo›
:

585 
ndec
 = 0;

586 
tkw
 = -1;

587 
skw
 = 
skwd
;

588 
ñsize
 = 0;

589 (
o
=
	`symbﬁ
())==
KEYW
Ë
cvÆ
) {

590 
AUTO
:

591 
STATIC
:

592 
EXTERN
:

593 
REG
:

594 i‡(
skw
)

595 
	`îr‹
("Conflict in storage class");

596 
skw
 = 
cvÆ
;

597 
ndec
++;

598 i‡(
tkw
<0)

600 
li°
;

602 
STRUCT
:

603 
o
 = 
cvÆ
;

604 
ñsize
 = 
	`°rdec
(&
o
, 
skw
==
MOS
);

605 
cvÆ
 = 
o
;

606 
INT
:

607 
CHAR
:

608 
FLOAT
:

609 
DOUBLE
:

610 
ndec
++;

611 i‡(
tkw
>=0)

612 
	`îr‹
("Type clash");

613 
tkw
 = 
cvÆ
;

614 i‡(
skw
==0)

616 
li°
;

619 
brk1
;

621 
brk1
:

622 
≥eksym
 = 
o
;

623 i‡(
ndec
==0)

624 (
off£t
);

625 
li°
:

626 i‡(
tkw
<0)

627 
tkw
 = 
INT
;

628 i‡(
skw
==0)

629 
skw
 = 
AUTO
;

630 
off£t
 = 
	`de˛¨e
(
skw
, 
tkw
, off£t, 
ñsize
);

631 
lo›
;

632 
	}
}

634 
	$°rdec
(
tkwp
, 
mosf
)

635 *
tkwp
;

637 
ñsize
, 
o
;

638 
hshèb
 *
ssym
;

639 
hshèb
 *
ds
;

641 
mosÊg
 = 1;

642 
ssym
 = 0;

643 i‡((
o
=
	`symbﬁ
())==
NAME
) {

644 
ssym
 = 
csym
;

645 i‡(
ssym
->
h˛ass
==0) {

646 
ssym
->
h˛ass
 = 
STRTAG
;

647 
ssym
->
À≈
 = 
dimp
;

648 
	`chkdim
();

649 
dimèb
[
dimp
++] = 0;

651 i‡(
ssym
->
h˛ass
 !
STRTAG
)

652 
	`ªdec
();

653 
mosÊg
 = 
mosf
;

654 
o
 = 
	`symbﬁ
();

656 
mosÊg
 = 0;

657 i‡(
o
 !
LBRACE
) {

658 i‡(
ssym
==0) {

659 
sy¡ax
:

660 
	`decsyn
(
o
);

663 i‡(
ssym
->
h˛ass
!=
STRTAG
)

664 
	`îr‹
("Bad structureÇame");

665 i‡((
ñsize
 = 
dimèb
[
ssym
->
À≈
&0377])==0) {

666 *
tkwp
 = 
RSTRUCT
;

667 
ñsize
 = 
ssym
;

669 
≥eksym
 = 
o
;

671 
ds
 = 
defsym
;

672 
mosÊg
 = 0;

673 
ñsize
 = 
	`de˛i°
(
MOS
);

674 i‡(
ñsize
&01)

675 
ñsize
++;

676 
defsym
 = 
ds
;

677 i‡((
o
 = 
	`symbﬁ
()Ë!
RBRACE
)

678 
sy¡ax
;

679 i‡(
ssym
) {

680 i‡(
dimèb
[
ssym
->
À≈
&0377])

681 
	`îr‹
("%.8†ªde˛¨ed", 
ssym
->
«me
);

682 
dimèb
[
ssym
->
À≈
&0377] = 
ñsize
;

685 (
ñsize
);

686 
	}
}

688 
	$chkdim
()

690 i‡(
dimp
 >
dimsiz
) {

691 
	`îr‹
("Dimension/structÅable overflow");

692 
	`exô
(1);

694 
	}
}

	@usr/c/c03.c

7 
	~"c0h.c
"

9 
	$de¸ef
(
©
)

11 
t
;

13 
t
 = 
©
;

14 i‡((
t
 & ~07) == 0) {

15 
	`îr‹
("Illegal indirection");

16 (
t
);

18 ((
t
>>2) & ~07 |Å&07);

19 
	}
}

21 
	$ö¸ef
(
t
)

23 ((
t
<<2)&~034 | (t&07Ë| 
PTR
);

24 
	}
}

26 
	$cbønch
(
åì
, 
lbl
, 
c⁄d
)

27 
äode
 *
åì
;

29 
	`r˚x¥
(
	`block
(1,
CBRANCH
,
åì
,
lbl
,
c⁄d
),
c˘ab
);

30 
	}
}

32 
	$r˚x¥
(
åì
, 
èbÀ
)

33 
èbÀ
;

34 
äode
 *
åì
;

36 
c
, *
•
;

38 i‡(
åì
 == 0)

40 
	`putch¨
('#');

41 
c
 = 
•a˚
-
åìba£
;

42 
•
 = 
åìba£
;

43 
	`putw
(
c
, 
böbuf
);

44 
	`putw
(
åì
, 
böbuf
);

45 
	`putw
(
èbÀ
, 
böbuf
);

46 
	`putw
(
löe
, 
böbuf
);

47 
c
--)

48 
	`putw
(*
•
++, 
böbuf
);

49 
	}
}

51 
	$bønch
(
œb
) {

52 
	`¥ötf
("jbr\tL%d\n", 
œb
);

53 
	}
}

55 
	$œbñ
(
l
) {

56 
	`¥ötf
("L%d:", 
l
);

57 
	}
}

59 
	$∂ígth
(
≠
)

60 
äame
 *
≠
;

62 
t
, 
l
;

63 
äame
 *
p
;

65 
p
 = 
≠
;

66 i‡(((
t
=
p
->
ty≥
)&~07) == 0)

68 
p
->
ty≥
 = 
	`de¸ef
(
t
);

69 
l
 = 
	`Àngth
(
p
);

70 
p
->
ty≥
 = 
t
;

71 (
l
);

72 
	}
}

74 
	$Àngth
(
acs
)

75 
äode
 *
acs
;

77 
t
, 
n
;

78 
äode
 *
cs
;

80 
cs
 = 
acs
;

81 
t
 = 
cs
->
ty≥
;

82 
n
 = 1;

83 (
t
&030Ë=
ARRAY
) {

84 
t
 = 
	`de¸ef
(t);

85 
n
 = 
dimèb
[
cs
->
s•
&0377];

87 i‡((
t
&~07)==
FUNC
)

89 i‡(
t
>=
PTR
)

90 (2*
n
);

91 
t
&07) {

93 
INT
:

94 (2*
n
);

96 
CHAR
:

97 (
n
);

99 
FLOAT
:

100 (4*
n
);

102 
DOUBLE
:

103 (8*
n
);

105 
STRUCT
:

106 (
n
 * 
dimèb
[
cs
->
À≈
&0377]);

108 
RSTRUCT
:

109 
	`îr‹
("Bad structure");

112 
	`îr‹
("CompilerÉrror (length)");

113 
	}
}

115 
	$æígth
(
cs
)

116 
äode
 *
cs
;

118 
l
;

120 i‡(((
l
=
	`Àngth
(
cs
))&01) != 0)

121 
l
++;

122 (
l
);

123 
	}
}

125 
	$sim∂egŸo
()

127 
hshèb
 *
c•
;

129 i‡((
≥eksym
=
	`symbﬁ
())==
NAME
 && 
	`√xtch¨
()==';') {

130 
c•
 = 
csym
;

131 i‡(
c•
->
h˛ass
==0 && c•->
hty≥
==0) {

132 
c•
->
hty≥
 = 
ARRAY
;

133 i‡(
c•
->
hoff£t
==0)

134 
c•
->
hoff£t
 = 
i¢
++;

136 i‡((
c•
->
h˛ass
==0||c•->h˛ass==
STATIC
)

137 && 
c•
->
hty≥
==
ARRAY
) {

138 
≥eksym
 = -1;

139 (
c•
->
hoff£t
);

143 
	}
}

145 
	$√xtch¨
()

147 
˘ab
[
≥ekc
]==
SPACE
)

148 
≥ekc
 = 
	`gëch¨
();

149 (
≥ekc
);

150 
	}
}

152 
	$chc⁄brk
(
l
)

154 i‡(
l
==0)

155 
	`îr‹
("Break/continueÉrror");

156 
	}
}

158 
	$dogŸo
()

160 
äode
 *
≈
;

162 *
˝
++ = 
	`åì
();

163 
	`buûd
(
STAR
);

164 
	`chkw
(
≈
 = *--
˝
);

165 
	`r˚x¥
(
	`block
(1,
JUMP
,0,0,
≈
), 
ªgèb
);

166 
	}
}

168 
	$d‹ë
()

170 i‡(
	`√xtch¨
() != ';')

171 
	`r˚x¥
(
	`block
(1, 
RFORCE
, 0, 0, 
	`åì
()), 
ªgèb
);

172 
	`bønch
(
ªéab
);

173 
	}
}

	@usr/c/c04.c

1 
#ö˛udê
	~"c0h.c
"

15 
	g›d›e
[] {

140 
	gcvèb
[] {

277 
	g˘ab
[] {

278 
	gEOF
, 
	gINSERT
, 
	gUNKN
, UNKN, UNKN, UNKN, UNKN, UNKN,

279 
	gUNKN
, 
	gSPACE
, 
	gNEWLN
, UNKN, UNKN, UNKN, UNKN, UNKN,

280 
	gUNKN
, UNKN, UNKN, UNKN, UNKN, UNKN, UNKN, UNKN,

281 
	gUNKN
, UNKN, UNKN, UNKN, UNKN, UNKN, UNKN, UNKN,

282 
	gSPACE
, 
	gEXCLA
, 
	gDQUOTE
, 
	gUNKN
, UNKN, 
	gMOD
, 
	gAND
, 
	gSQUOTE
,

283 
	gLPARN
, 
	gRPARN
, 
	gTIMES
, 
	gPLUS
, 
	gCOMMA
, 
	gMINUS
, 
	gPERIOD
, 
	gDIVIDE
,

284 
	gDIGIT
, DIGIT, DIGIT, DIGIT, DIGIT, DIGIT, DIGIT, DIGIT,

285 
	gDIGIT
, DIGIT, 
	gCOLON
, 
	gSEMI
, 
	gLESS
, 
	gASSIGN
, 
	gGREAT
, 
	gQUEST
,

286 
	gUNKN
, 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

287 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

288 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

289 
	gLETTER
, LETTER, LETTER, 
	gLBRACK
, 
	gUNKN
, 
	gRBRACK
, 
	gEXOR
, LETTER,

290 
	gUNKN
, 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

291 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

292 
	gLETTER
, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER, LETTER,

293 
	gLETTER
, LETTER, LETTER, 
	gLBRACE
, 
	gOR
, 
	gRBRACE
, 
	gCOMPL
, 
	gUNKN


	@usr/c/c0h.c

13 
	#n˝s
 8

	)

14 
	#hshsiz
 200

	)

15 
	#cmsiz
 40

	)

16 
	#swsiz
 200

	)

17 
	#n˝w
 2

	)

18 
	#ossiz
 500

	)

19 
	#dimsiz
 100

	)

21 
	#ªgèb
 0

	)

22 
	#ef·ab
 1

	)

23 
	#c˘ab
 2

	)

24 
	#•èb
 3

	)

26 
	säode
 {

27 
	m›
;

28 
	mty≥
;

29 
	mdimp
;

30 
äode
 *
	må1
, *
	må2
;

34 
	m›
;

35 
	mty≥
;

36 
	ms•
;

37 
	mÀ≈
;

40 
	säame
 {

41 
	m›
;

42 
	mty≥
;

43 
	mdimp
;

44 
	m˛ass
;

45 
	moff£t
;

46 
	m∆oc
;

50 
	stc⁄°
 {

51 
	m›
;

52 
	mty≥
;

53 
	mdimp
;

54 
	mvÆue
;

57 
	shshèb
 {

58 
	mh˛ass
;

59 
	mhÊag
;

60 
	mhty≥
;

61 
	mhdimp
;

62 
	mhoff£t
;

63 
	m«me
[
n˝s
];

66 
	sswèb
 {

67 
	mswœb
;

68 
	mswvÆ
;

71 
	gcvèb
[];

72 
	g›d›e
[];

73 
	g˘ab
[];

74 
	gsymbuf
[
n˝s
];

75 
	ghshu£d
;

76 
hshèb
 
	ghshèb
[
hshsiz
];

77 *
	g•a˚
;

78 *
	g˝
;

79 
	gcm°
[
cmsiz
];

80 
	gi¢
;

81 
swèb
 
	gswèb
[
swsiz
];

82 
swèb
 *
	gswp
;

83 
	gc⁄éab
;

84 
	gbrkœb
;

85 
	gªéab
;

86 
	gdeÊab
;

87 
	g«uto
;

88 
	gautﬁí
;

89 
	g≥eksym
;

90 
	g≥ekc
;

91 
	geof
;

92 
	glöe
;

93 *
	gåìba£
;

94 
	gdebug
;

95 
hshèb
 *
	gdefsym
;

96 
hshèb
 *
	gfuncsym
;

97 
	gxdÊg
;

98 
	g¥oÊg
;

99 
hshèb
 *
	gcsym
;

100 
	gcvÆ
;

101 
	gfcvÆ
;

102 
	gnch°r
;

103 
	g√º‹
;

104 
hshèb
 *
	g∑øml
;

105 
hshèb
 *
	g∑øme
;

106 
	g°rÊg
;

107 
	go¶e·
;

108 
	gmosÊg
;

109 
	göôÊg
;

110 
	göhdr
;

111 
	gdimèb
[
dimsiz
];

112 
	gböbuf
[518];

113 
	gdimp
;

114 
	gªgv¨
;

119 
	#EOF
 0

	)

120 
	#SEMI
 1

	)

121 
	#LBRACE
 2

	)

122 
	#RBRACE
 3

	)

123 
	#LBRACK
 4

	)

124 
	#RBRACK
 5

	)

125 
	#LPARN
 6

	)

126 
	#RPARN
 7

	)

127 
	#COLON
 8

	)

128 
	#COMMA
 9

	)

130 
	#KEYW
 19

	)

131 
	#NAME
 20

	)

132 
	#CON
 21

	)

133 
	#STRING
 22

	)

134 
	#FCON
 23

	)

135 
	#SFCON
 24

	)

137 
	#SIZEOF
 29

	)

138 
	#INCBEF
 30

	)

139 
	#DECBEF
 31

	)

140 
	#INCAFT
 32

	)

141 
	#DECAFT
 33

	)

142 
	#EXCLA
 34

	)

143 
	#AMPER
 35

	)

144 
	#STAR
 36

	)

145 
	#NEG
 37

	)

146 
	#COMPL
 38

	)

148 
	#DOT
 39

	)

149 
	#PLUS
 40

	)

150 
	#MINUS
 41

	)

151 
	#TIMES
 42

	)

152 
	#DIVIDE
 43

	)

153 
	#MOD
 44

	)

154 
	#RSHIFT
 45

	)

155 
	#LSHIFT
 46

	)

156 
	#AND
 47

	)

157 
	#OR
 48

	)

158 
	#EXOR
 49

	)

159 
	#ARROW
 50

	)

160 
	#ITOF
 51

	)

161 
	#FTOI
 52

	)

162 
	#LOGAND
 53

	)

163 
	#LOGOR
 54

	)

165 
	#EQUAL
 60

	)

166 
	#NEQUAL
 61

	)

167 
	#LESSEQ
 62

	)

168 
	#LESS
 63

	)

169 
	#GREATEQ
 64

	)

170 
	#GREAT
 65

	)

171 
	#LESSP
 66

	)

172 
	#LESSEQP
 67

	)

173 
	#GREATP
 68

	)

174 
	#GREATQP
 69

	)

176 
	#ASPLUS
 70

	)

177 
	#ASMINUS
 71

	)

178 
	#ASTIMES
 72

	)

179 
	#ASDIV
 73

	)

180 
	#ASMOD
 74

	)

181 
	#ASRSH
 75

	)

182 
	#ASLSH
 76

	)

183 
	#ASSAND
 77

	)

184 
	#ASOR
 78

	)

185 
	#ASXOR
 79

	)

186 
	#ASSIGN
 80

	)

188 
	#QUEST
 90

	)

189 
	#CALL
 100

	)

190 
	#MCALL
 101

	)

191 
	#JUMP
 102

	)

192 
	#CBRANCH
 103

	)

193 
	#INIT
 104

	)

194 
	#SETREG
 105

	)

195 
	#RFORCE
 110

	)

196 
	#BRANCH
 111

	)

197 
	#LABEL
 112

	)

202 
	#INT
 0

	)

203 
	#CHAR
 1

	)

204 
	#FLOAT
 2

	)

205 
	#DOUBLE
 3

	)

206 
	#STRUCT
 4

	)

207 
	#RSTRUCT
 5

	)

208 
	#PTR
 010

	)

209 
	#FUNC
 020

	)

210 
	#ARRAY
 030

	)

215 
	#KEYWC
 1

	)

216 
	#MOS
 4

	)

217 
	#AUTO
 5

	)

218 
	#EXTERN
 6

	)

219 
	#STATIC
 7

	)

220 
	#REG
 8

	)

221 
	#STRTAG
 9

	)

222 
	#ARG
 10

	)

223 
	#ARG1
 11

	)

228 
	#GOTO
 10

	)

229 
	#RETURN
 11

	)

230 
	#IF
 12

	)

231 
	#WHILE
 13

	)

232 
	#ELSE
 14

	)

233 
	#SWITCH
 15

	)

234 
	#CASE
 16

	)

235 
	#BREAK
 17

	)

236 
	#CONTIN
 18

	)

237 
	#DO
 19

	)

238 
	#DEFAULT
 20

	)

239 
	#FOR
 21

	)

244 
	#INSERT
 119

	)

245 
	#PERIOD
 120

	)

246 
	#SQUOTE
 121

	)

247 
	#DQUOTE
 122

	)

248 
	#LETTER
 123

	)

249 
	#DIGIT
 124

	)

250 
	#NEWLN
 125

	)

251 
	#SPACE
 126

	)

252 
	#UNKN
 127

	)

258 
	#BINARY
 01

	)

259 
	#LVALUE
 02

	)

260 
	#RELAT
 04

	)

261 
	#ASSGOP
 010

	)

262 
	#LWORD
 020

	)

263 
	#RWORD
 040

	)

264 
	#COMMUTE
 0100

	)

265 
	#RASSOC
 0200

	)

266 
	#LEAF
 0400

	)

272 
	#FNDEL
 1

	)

	@usr/c/c10.c

9 
	~"c1h.c
"

11 
	gm≠ªl
[] { 
	gEQUAL
, 
	gNEQUAL
, 
	gGREATEQ
, 
	gGREAT
, 
	gLESSEQ
,

12 
	gLESS
, 
	gGREATQP
, 
	gGREATP
, 
	gLESSEQP
, 
	gLESSP


15 
	gnŸªl
[] { 
	gNEQUAL
, 
	gEQUAL
, 
	gGREAT
, 
	gGREATEQ
, 
	gLESS
,

16 
	gLESSEQ
, 
	gGREATP
, 
	gGREATQP
, 
	gLESSP
, 
	gLESSEQP


19 
tc⁄°
 
	gczîo
 { 
	gCON
, 
	gINT
, 0, 0};

20 
tc⁄°
 
	gc⁄e
 { 
	gCON
, 
	gINT
, 0, 1};

21 
tc⁄°
 
	gfczîo
 { 
	gSFCON
, 
	gDOUBLE
, 0, 0 };

23 
èbÀ
 *
	gèbèb
[]

25 
	gªgèb
,

26 
	gef·ab
,

27 
	gc˘ab
,

28 
	g•èb
,

32 
	gƒeg
 3;

33 
	gi¢
 10000;

34 
	g«msiz
 8;

35 *
	gåìba£
;

36 
äode
 *
	gxdñ
[2];

38 
	$maö
(
¨gc
, 
¨gv
)

39 *
¨gv
[];

41 
åì•a˚
[
ossiz
];

42 
èbÀ
 *table;

43 *
•
, 
c
, *
åì
;

44 
fout
;

46 i‡(
¨gc
<4) {

47 
	`îr‹
("Arg count");

48 
	`exô
(1);

50 if(
	`f›í
(
¨gv
[1], 
ascbuf
)<0 || f›í◊rgv[2], 
böbuf
)<0){

51 
	`îr‹
("MissingÅemp file");

52 
	`exô
(1);

54 i‡((
fout
 = 
	`¸ót
(
¨gv
[3], 0666)) < 0) {

55 
	`îr‹
("C™'à¸óã %s", 
¨gv
[3]);

56 
	`exô
(1);

58 
åìba£
 = 
	`gëw
(
böbuf
);

59 i‡(
åìba£
 < 
åì•a˚
) {

60 
	`îr‹
("Tree space botch");

61 
	`exô
(1);

63 
•a˚max
 = &
åì•a˚
[
ossiz
];

64 (
c
=
	`gëc
(
ascbuf
)) > 0) {

65 if(
c
=='#') {

66 
•
 = 
åìba£
;

67 
c
 = 
	`gëw
(
böbuf
);

68 
åì
 = 
	`gëw
(
böbuf
);

69 
èbÀ
 = 
èbèb
[
	`gëw
(
böbuf
)];

70 
löe
 = 
	`gëw
(
böbuf
);

71 --
c
 >= 0)

72 *
•
++ = 
	`gëw
(
böbuf
);

73 i‡(
èbÀ
==0)

74 
	`pswôch
(
åìba£
, 
•
, 
åì
);

76 
•a˚p
 = 
•
;

77 
åì
 = 
	`›tim
(tree);

78 
n°ack
 = 0;

79 
	`r˚x¥
(
åì
, 
èbÀ
, 0);

82 
	`putch¨
(
c
);

84 i‡(
nÊﬂt
)

85 
	`¥ötf
(".globl fltused\n");

86 
	`Êush
();

87 
	`exô
(
√º‹
!=0);

88 
	}
}

90 *
	$m©ch
(
©ªe
, 
èbÀ
, 
ƒÀ·
)

91 
äode
 *
©ªe
;

92 
èbÀ
 *table;

94 
›
, 
d1
, 
d2
, 
t1
, 
t2
, 
d›e
;

95 
äode
 *
p2
;

96 
äode
 *
p1
, *
åì
;

97 
›èb
 *
›t
;

99 i‡((
åì
=
©ªe
)==0)

101 i‡(
èbÀ
==
l•èb
)

102 
èbÀ
 = 
•èb
;

103 
›
 = 
åì
->op;

104 
d›e
 = 
›d›e
[
›
];

105 i‡((
d›e
&
LEAF
) == 0)

106 
p1
 = 
åì
->
å1
;

108 
p1
 = 
åì
;

109 
t1
 = 
p1
->
ty≥
;

110 
d1
 = 
	`dˇlc
(
p1
, 
ƒÀ·
);

111 i‡((
d›e
&
BINARY
)!=0) {

112 
p2
 = 
åì
->
å2
;

113 
t2
 = 
p2
->
ty≥
;

114 
d2
 = 
	`dˇlc
(
p2
, 
ƒÀ·
);

116 ; 
èbÀ
->
›
!=op;Åable++)

117 i‡(
èbÀ
->
›
==0)

119 
›t
 = 
èbÀ
->
èbp
; o±->
èbdeg1
!=0; opt++) {

120 i‡(
d1
 > (
›t
->
èbdeg1
&077)

121 || (
›t
->
èbdeg1
 >0100 && (
p1
->
›
 !
STAR
)))

123 i‡(
	`nŸcom∑t
(
p1
, 
›t
->
èbtyp1
, 
›
)) {

126 i‡((
›d›e
[
›
]&
BINARY
)!=0 && 
p2
!=0) {

127 i‡(
d2
 > (
›t
->
èbdeg2
&077)

128 || (
›t
->
èbdeg2
 >0100Ë&& (
p2
->
›
 !
STAR
) )

130 i‡(
	`nŸcom∑t
(
p2
,
›t
->
èbtyp2
, 0))

133 (
›t
);

136 
	}
}

138 
	$r˚x¥
(
©ªe
, 
©abÀ
, 
ªg
)

139 
äode
 *
©ªe
;

140 
èbÀ
 *
©abÀ
;

142 
r
;

143 
modf
, 
«rgs
;

144 
äode
 *
åì
;

145 
èbÀ
 *table;

147 
èbÀ
 = 
©abÀ
;

148 if((
åì
=
©ªe
)==0)

150 
åì
->
›
) {

152 
SETREG
:

153 
ƒeg
 = 
åì
->
ty≥
-1;

156 
CBRANCH
:

157 
	`cbønch
(
åì
->
båì
,Åªe->
lbl
,Åªe->
c⁄d
, 0);

160 
INIT
:

161 i‡(
åì
->
å1
->
›
 =
AMPER
)

162 
åì
->
å1
 =Åree->tr1->tr1;

163 i‡(
åì
->
å1
->
›
!=
NAME
 &&Åªe->å1->›!=
CON
)

164 
	`îr‹
("Illegal initialization");

166 
	`˚x¥
(
åì
, 
ªgèb
, 
ƒeg
);

169 
EXCLA
:

170 i‡((
›d›e
[
åì
->
å1
->
›
] & 
RELAT
) != 0) {

171 
åì
 =Åªe->
å1
;

172 
åì
->
›
 = 
nŸªl
[åì->› - 
EQUAL
];

176 
RFORCE
:

177 if((
r
=
	`r˚x¥
(
åì
->
å1
, 
èbÀ
, 
ªg
)) != 0)

178 
	`¥ötf
("mov%cÑ%d,r0\n", 
	`isÊﬂt
(
åì
->
å1
), 
r
);

181 
COMMA
:

182 
	`r˚x¥
(
åì
->
å1
, 
ef·ab
, 
ªg
);

183 
åì
 =Åªe->
å2
;

186 
CALL
:

187 
r
 = 0;

188 
«rgs
 = 0;

189 
modf
 = 0;

190 i‡(
åì
->
å1
->
›
!=
NAME
) {

191 
«rgs
++;

192 
n°ack
++;

194 
åì
 =Åªe->
å2
;

195 if(
åì
->
›
) {

196 
åì
->
›
==
COMMA
) {

197 
r
 =+ 
	`com¨g
(
åì
->
å2
, &
modf
);

198 
åì
 =Åªe->
å1
;

199 
«rgs
++;

201 
r
 =+ 
	`com¨g
(
åì
, &
modf
);

202 
«rgs
++;

204 
åì
 = 
©ªe
;

205 
åì
->
›
 = 
CALL2
;

206 i‡(
modf
 && 
åì
->
å1
->
›
==
NAME
 &&Åªe->å1->
˛ass
==
EXTERN
)

207 
åì
->
›
 = 
CALL1
;

208 
	`˚x¥
(
åì
, 
ªgèb
, 
ªg
);

209 
	`p›°k
(
r
);

210 
n°ack
 =- 
«rgs
;

211 i‡(
èbÀ
==
ef·ab
 ||ÅabÀ==
ªgèb
)

213 
r
 = 0;

214 
xdñ
[0] = 0;

215 
xdñ
[1] = 0;

216 
fixup
;

218 
TIMES
:

219 
DIVIDE
:

220 
ASTIMES
:

221 
ASDIV
:

222 
	`pow2
(
åì
);

224 
modf
 = 100;

225 
åì
 = 
	`ª‹dî
—ªe, 
ªg
, &
modf
, 0);

226 i‡(
modf
!=100)

227 
åì
 = 
	`›tim
(tree);

228 i‡(
èbÀ
==
ef·ab
 && 
åì
->
›
==
NAME
)

229 (
ªg
);

230 i‡((
r
=
	`˚x¥
(
åì
, 
èbÀ
, 
ªg
))>=0)

231 (
r
);

232 i‡(
èbÀ
!=
ªgèb
) {

233 if((
r
=
	`˚x¥
(
åì
, 
ªgèb
, 
ªg
))>=0) {

234 
fixup
:

235 
modf
 = 
	`isÊﬂt
(
åì
);

236 i‡(
èbÀ
==
•èb
 ||ÅabÀ==
l•èb
) {

237 
	`¥ötf
("mov%cÑ%d,%c(•)\n", 
modf
, 
r
,

238 
èbÀ
==
•èb
? '-':0);

239 
n°ack
++;

241 
©ªe
 = 
xdñ
[1];

242 
xdñ
[1] = 0;

243 i‡(
xdñ
[0]) {

244 
åì
 = 
xdñ
[0];

245 
xdñ
[0] = 0;

246 
	`r˚x¥
(
åì
, 
ef·ab
, 0);

248 i‡(
©ªe
)

249 
	`r˚x¥
(
©ªe
, 
ef·ab
, 0);

250 i‡(
èbÀ
==
c˘ab
)

251 
	`¥ötf
("t°%cÑ%d\n", 
modf
, 
r
);

252 (
r
);

255 
	`îr‹
("Nÿm©ch f‹ o∞%d", 
åì
->
›
);

256 (
ªg
);

257 
	}
}

258 
èbÀ
 *
	g¸egèb
;

260 
	$˚x¥
(
©ªe
, 
èbÀ
, 
¨eg
)

261 
äode
 *
©ªe
;

262 
èbÀ
 *table;

264 
c
, 
r
;

265 
äode
 *
p
, *
p1
, *
åì
;

266 
èbÀ
 *
˘abÀ
;

267 
äode
 *
p2
;

268 *
°rög
;

269 
ªg
, 
ªg1
, 
ºeg
, 
Êag
, 
›d
;

270 *
›t
;

271 
äode
 *
dñ
[2];

273 
åì
 = 
©ªe
;

274 
dñ
[0] = 0;

275 
dñ
[1] = 0;

276 
ªg
 = 
¨eg
;

277 
p1
 = 
åì
->
å2
;

278 
c
 = 
åì
->
›
;

279 
›d
 = 
›d›e
[
c
];

280 i‡((
›d
&
RELAT
||
c
==
LOGAND
||c==
LOGOR
||c==
EXCLA
Ë&& 
èbÀ
!=
c˘ab
) {

281 
	`cbønch
(
åì
, 
c
=
i¢
++, 1, 
ªg
);

282 
	`r˚x¥
(&
czîo
, 
èbÀ
, 
ªg
);

283 
	`bønch
(
i¢
, 0);

284 
	`œbñ
(
c
);

285 
	`r˚x¥
(&
c⁄e
, 
èbÀ
, 
ªg
);

286 
	`œbñ
(
i¢
++);

287 (
ªg
);

289 if(
c
==
QUEST
) {

290 i‡(
èbÀ
==
c˘ab
)

292 
	`cbønch
(
åì
->
å1
, 
c
=
i¢
++, 0, 
ªg
);

293 
Êag
 = 
n°ack
;

294 
ºeg
 = 
	`r˚x¥
(
p1
->
å1
, 
èbÀ
, 
ªg
);

295 
n°ack
 = 
Êag
;

296 
	`bønch
(
r
=
i¢
++, 0);

297 
	`œbñ
(
c
);

298 
ªg
 = 
	`r˚x¥
(
p1
->
å2
, 
èbÀ
, 
ºeg
);

299 i‡(
ºeg
!=
ªg
)

300 
	`¥ötf
("mov%cÑ%d,r%d\n",

301 
	`isÊﬂt
(
åì
),
ªg
,
ºeg
);

302 
ªg
 = 
ºeg
;

303 
	`œbñ
(
r
);

304 
ªån
;

306 
ªg
 = 
	`oddªg
(
åì
,Ñeg);

307 
ªg1
 = 
ªg
+1;

308 i‡((
r
 = 
	`chkÀaf
(
åì
, 
èbÀ
, 
ªg
)) >= 0)

309 (
r
);

310 
r
 = 0;

311 i‡(
èbÀ
==
c˘ab
 ||ÅabÀ==
¸egèb
)

312 
r
++;

314 
Êag
 = 0;

315 i‡((
›d
 & 
LEAF
) == 0)

316 
p1
 = 
åì
->
å1
 = 
	`ª‹dî
—ªe->å1, 
¨eg
, &
Êag
,

317 
r
?0: &
dñ
[0]);

318 
p2
 = 0;

319 i‡(
›d
&
BINARY
)

320 
p2
 = 
åì
->
å2
 = 
	`ª‹dî
—ªe->å2, 
¨eg
, &
Êag
,

321 
r
?0: &
dñ
[1]);

322 i‡(
Êag
==0)

324 i‡(
Êag
 > 1 && (
›d
&
RELAT
Ë&& 
p2
->
›
==
CON


325 && 
p2
->
vÆue
==0 && 
r
 && 
›d›e
[
p1
->
›
]&
LEAF


326 && 
dñ
[0]==0 && del[1]==0)

327 
ªån
;

328 
åì
 = 
	`›tim
(tree);

330 i‡((
åì
->
›
==
PLUS
||åì->›==
ASPLUS
) &&

331 
p2
->
›
 =
CON
 &&Ö2->
vÆue
 == -1) {

332 
p2
->
vÆue
 = 1;

333 
åì
->
›
++;

335 i‡(
èbÀ
==
¸egèb
)

336 
èbÀ
 = 
ªgèb
;

337 i‡(
èbÀ
!=
c˘ab
 || 
c
==
INCAFT
 || c==
DECAFT


338 || (
›t
 = 
	`m©ch
(
åì
, 
ef·ab
, 
ƒeg
-
ªg
)) == 0)

339 i‡((
›t
=
	`m©ch
(
åì
, 
èbÀ
, 
ƒeg
-
ªg
))==0) {

340 
xdñ
[0] = 
dñ
[0];

341 
xdñ
[1] = 
dñ
[1];

344 
°rög
 = 
›t
->
èb°rög
;

345 
lo›
:

346 i‡((
c
 = *
°rög
++) & 0200) {

347 
c
 =& 0177;

348 
	`putch¨
('\t');

350 
c
) {

353 
ªån
:

354 i‡(
dñ
[0])

355 
	`r˚x¥
(
dñ
[0], 
ef·ab
, 0);

356 i‡(
dñ
[1])

357 
	`r˚x¥
(
dñ
[1], 
ef·ab
, 0);

358 i‡(!
	`isÊﬂt
(
åì
))

359 i‡(
åì
->
›
==
DIVIDE
 ||Åªe->›==
ASDIV
)

360 
ªg
--;

361 (
ªg
);

365 
p
 = 
p1
;

366 
adr
;

370 
p
 = 
p2
;

371 
adr
;

375 
p
 = 
åì
;

376 
adr
:

377 
c
 = 0;

378 i‡(*
°rög
=='\'') {

379 
c
++;

380 
°rög
++;

382 
	`≤ame
(
p
, 
c
);

383 
lo›
;

387 i‡((
c
 = *
°rög
)=='\'')

388 
°rög
++;

390 
c
 = 0;

391 
	`¥ös
(
åì
->
›
, 
c
);

392 
lo›
;

396 i‡((
›d
&
LEAF
) != 0)

397 
p
 = 
åì
;

399 
p
 = 
p1
;

400 
pbyã
;

404 
p
 = 
åì
;

405 
pb1
;

409 
p
 = 
p2
;

410 
pbyã
:

411 i‡(
p
->
ty≥
==
CHAR
)

412 
	`putch¨
('b');

413 
pb1
:

414 i‡(
	`isÊﬂt
(
p
))

415 
	`putch¨
('f');

416 
lo›
;

420 i‡(
p1
->
ty≥
==
CHAR
 || 
p2
->type==CHAR)

421 
	`putch¨
('b');

422 
p
 = 
åì
;

423 
pb1
;

427 
p
 = 
p1
->
å1
;

432 
p
 = 
p2
->
å1
;

434 
	`¥ötf
("%o", 
p
);

435 
lo›
;

439 
p
 = 
p1
;

440 
Êag
 = 01;

441 
subåe
;

445 
p
 = 
p2
;

446 
Êag
 = 02;

447 
subåe
;

451 
p
 = 
åì
;

452 
Êag
 = 04;

454 
subåe
:

455 
˘abÀ
 = 
ªgèb
;

456 
c
 = *
°rög
++ - 'A';

457 i‡((
c
&02)!=0)

458 
˘abÀ
 = 
•èb
;

459 i‡((
c
&04)!=0)

460 
˘abÀ
 = 
c˘ab
;

461 i‡((
Êag
&01Ë&& 
˘abÀ
==
ªgèb
 && (
c
&01)==0

462 && (
åì
->
›
==
DIVIDE
||åì->›==
MOD


463 || 
åì
->
›
==
ASDIV
||åì->›==
ASMOD
))

464 
˘abÀ
 = 
¸egèb
;

465 i‡((
c
&01)!=0) {

466 
p
 =Ö->
å1
;

467 if(
	`cﬁlc⁄
(
p
Ë&& 
˘abÀ
!=
•èb
) {

468 i‡(
p
->
›
==
STAR
)

469 
p
 =Ö->
å1
;

470 
p
 =Ö->
å1
;

473 i‡(
èbÀ
==
l•èb
 && 
˘abÀ
==
•èb
)

474 
˘abÀ
 = 
l•èb
;

475 i‡(
c
&010)

476 
r
 = 
ªg1
;

478 i‡(
›d›e
[
p
->
›
]&
LEAF
 ||Ö->
degªe
 < 2)

479 
r
 = 
ªg
;

481 
r
 = 
¨eg
;

482 
ºeg
 = 
	`r˚x¥
(
p
, 
˘abÀ
, 
r
);

483 i‡(
˘abÀ
!=
ªgèb
 && cèbÀ!=
¸egèb
)

484 
lo›
;

485 i‡(
c
&010)

486 
ªg1
 = 
ºeg
;

487 i‡(
ºeg
!=
ªg
)

488 i‡(
	`oddªg
(
åì
, 0)==0 && (
Êag
&04 ||

489 
Êag
&01

490 && 
	`xdˇlc
(
p2
, 
ƒeg
-
ºeg
-1Ë<(
›t
->
èbdeg2
&077)

491 || 
Êag
&02

492 && 
	`xdˇlc
(
p1
,
ƒeg
-
ºeg
-1Ë<(
›t
->
èbdeg1
&077))) {

493 
ªg
 = 
ºeg
;

494 
ªg1
 = 
ºeg
+1;

496 
	`¥ötf
("mov%c\tr%d,r%d\n",

497 
	`isÊﬂt
(
åì
), 
ºeg
, 
ªg
);

498 
lo›
;

502 
r
 = 
ªg
;

503 i‡(*
°rög
=='-') {

504 
°rög
++;

505 
r
--;

507 
¥eg
;

511 
r
 = 
ªg1
;

512 
¥eg
:

513 i‡(
r
>
ƒeg
)

514 
	`îr‹
("Register overflow: simplifyÉxpression");

515 
	`¥ötf
("r%d", 
r
);

516 
lo›
;

519 i‡(*
°rög
=='(') {

520 
n°ack
++;

521 i‡(
èbÀ
!=
l•èb
)

522 
	`putch¨
('-');

523 
lo›
;

528 
	`putch¨
(')');

529 i‡(*
°rög
=='+')

530 
n°ack
--;

531 
lo›
;

535 
p
 = 
p1
->
å1
;

536 
nmbr
;

540 
p
 = 
p2
->
å1
;

542 
nmbr
:

543 if(
	`cﬁlc⁄
(
p
)) {

544 i‡(
p
->
›
==
STAR
) {

545 
	`¥ötf
("*");

546 
p
 =Ö->
å1
;

548 i‡((
p
 =Ö->
å2
)->
›
 =
CON
) {

549 i‡(
p
->
vÆue
)

550 
	`pso˘
(
p
->
vÆue
);

551 } i‡(
p
->
›
==
AMPER
)

552 
	`≤ame
(
p
->
å1
, 0);

554 
lo›
;

558 
åì
->
›
 = 
m≠ªl
[åì->› - 
EQUAL
];

559 
lo›
;

562 
	`¥ötf
("%o", 
åì
->
å2
);

563 
lo›
;

566 i‡(
	`dˇlc
(
p1
, 5)>12 && !
	`m©ch
’1, 
c˘ab
, 10))

567 
	`¥ötf
("t°Ñ%d\n", 
ªg
);

568 
lo›
;

570 
	`putch¨
(
c
);

571 
lo›
;

572 
	}
}

574 
	$ª‹dî
(
≠
, 
ªg
, 
aÂ
, 
dñp
)

575 
äode
 *
≠
;

576 *
aÂ
, *
dñp
;

578 
äode
 *
p
, *
p1
;

579 *
Â
;

581 
p
 = 
≠
;

582 i‡(
›d›e
[
p
->
›
]&
LEAF
)

583 (
p
);

584 
Â
 = 
aÂ
;

585 
p1
 = 
p
->
å1
;

586 i‡(
p
->
›
==
STAR
 ||Ö->›==
PLUS
) {

587 
p
->
å1
 = 
	`ª‹dî
(
p1
, 
ªg
, 
Â
, 
dñp
);

588 i‡(
p
->
›
==
PLUS
)

589 
p
->
å2
 = 
	`ª‹dî
’->å2, 
ªg
, 
Â
, 
dñp
);

590 i‡(*
Â
)

591 *
Â
 = 1;

592 (
p
);

594 i‡(
p1
->
›
==
NAME
Ë
p
->op) {

595 
ASLSH
:

596 
ASRSH
:

597 
ASSIGN
:

598 i‡(
p1
->
˛ass
 !
REG
 || 
	`isÊﬂt
(
p
->
å2
))

600 i‡(
p
->
›
==
ASSIGN
Ëp->
å2
->op) {

601 
TIMES
:

602 
DIVIDE
:

603 i‡(!
	`i•ow2
(
p
->
å2
))

605 
	`pow2
(
p
->
å2
);

606 
PLUS
:

607 
MINUS
:

608 
AND
:

609 
OR
:

610 
EXOR
:

611 
LSHIFT
:

612 
RSHIFT
:

613 
p1
 = 
p
->
å2
->tr2;

614 i‡(
	`xdˇlc
(
p1
) > 12

615 || 
p1
->
›
==
NAME


616 &&(
p1
->
∆oc
==
p
->
å1
->nloc

617 || 
p1
->
ªgno
==
p
->
å1
->
∆oc
))

618 (
p
);

619 
p1
 = 
p
->
å2
;

620 
p
->
å2
 = 
p1
->
å1
;

621 i‡(
p1
->
å1
->
›
!=
NAME


622 || 
p1
->
å1
->
˛ass
!=
REG


623 || 
p1
->
å1
->
∆oc
!=
p
->tr1->nloc)

624 
	`r˚x¥
(
p
, 
ef·ab
, 
ªg
);

625 
p
->
å2
 = 
p1
->tr2;

626 
p
->
›
 = 
p1
->› + 
ASPLUS
 - 
PLUS
;

627 (*
Â
) = 2;

628 (
p
);

630 
OK
;

632 
INCAFT
:

633 
DECAFT
:

634 i‡(
dñp
 && *
Â
 < 100) {

635 i‡(
p1
->
›
==
NAME
 &&Ö1->
˛ass
==
REG
)

636 
p1
 = 
	`block
(3,Ö1->
›
,p1->
ty≥
,p1->
ñsize
,

637 
p1
->
å1
,p1->
off£t
,p1->
∆oc
);

638 *
dñp
 = 
p
;

639 *
Â
 = 1;

640 (
p1
);

644 
ASTIMES
:

645 
ASDIV
:

646 i‡(!
	`i•ow2
(
p
))

648 
ASPLUS
:

649 
ASMINUS
:

650 
ASSAND
:

651 
ASOR
:

652 
ASXOR
:

653 
DECBEF
:

654 
INCBEF
:

655 
OK
:

656 i‡(*
Â
 >= 100)

658 
	`r˚x¥
(
p
, 
dñp
?
ef·ab
:
c˘ab
, 
ªg
);

659 (*
Â
) = 2;

660 (
p1
);

662 (
p
);

663 
	}
}

665 
	$chkÀaf
(
©ªe
, 
èbÀ
, 
ªg
)

666 
äode
 *
©ªe
;

668 
äode
 
lbuf
;

669 
äode
 *
åì
;

671 
åì
 = 
©ªe
;

672 i‡(
åì
->
›
!=
STAR
 && 
	`dˇlc
—ªe, 
ƒeg
-
ªg
) > 12)

674 
lbuf
.
›
 = 
LOAD
;

675 
lbuf
.
ty≥
 = 
åì
->type;

676 
lbuf
.
degªe
 = 
åì
->degree;

677 
lbuf
.
å1
 = 
åì
;

678 (
	`r˚x¥
(&
lbuf
, 
èbÀ
, 
ªg
));

679 
	}
}

681 
	$com¨g
(
©ªe
, 
Êagp
)

682 *
Êagp
;

684 
øthﬁe
;

685 
äode
 *
åì
;

686 
äode
 *
pmp
;

687 
ªtvÆ
;

689 
pmp
 = 0;

690 
åì
 = 
	`ª‹dî
(
©ªe
, 0, &
øthﬁe
, &
pmp
);

691 i‡(
åì
->
ty≥
==
STRUCT
)

692 
	`îr‹
("Illegal structure");

693 i‡(
n°ack
 || 
	`isÊﬂt
(
åì
)) {

694 
	`r˚x¥
(
åì
, 
•èb
, 0);

695 
ªtvÆ
 = 
	`¨Àngth
(
åì
->
ty≥
);

697 (*
Êagp
)++;

698 
	`r˚x¥
(
åì
, 
l•èb
, 0);

699 
ªtvÆ
 = 0;

701 i‡(
pmp
)

702 
	`r˚x¥
(
pmp
, 
ef·ab
, 0);

703 (
ªtvÆ
);

704 
	}
}

	@usr/c/c11.c

5 
	~"c1h.c
"

7 
	$max
(
a
, 
b
)

9 i‡(
a
>
b
)

10 (
a
);

11 (
b
);

12 
	}
}

14 
	$degªe
(
©
)

15 
äode
 *
©
;

17 
äode
 *
t
;

19 i‡((
t
=
©
)==0 ||Å->
›
==0)

21 i‡(
t
->
›
==
CON
 ||Å->›==
SFCON
)

23 i‡(
t
->
›
 =
AMPER
)

25 i‡((
›d›e
[
t
->
›
] & 
LEAF
) != 0) {

26 i‡(
t
->
ty≥
==
CHAR
 ||Å->ty≥==
FLOAT
)

30 (
t
->
degªe
);

31 
	}
}

33 
	$≤ame
(
≠
, 
Êag
)

34 
äode
 *
≠
;

36 
i
;

37 
äode
 *
p
;

39 
p
 = 
≠
;

40 
lo›
:

41 
p
->
›
) {

43 
SFCON
:

44 
CON
:

45 
	`¥ötf
("$%o", 
p
->
vÆue
);

48 
FCON
:

49 
	`¥ötf
("L%d", 
p
->
vÆue
);

52 
NAME
:

53 i‡(
i
 = 
p
->
off£t
) {

54 
	`pso˘
(
i
);

55 i‡(
p
->
˛ass
!=
OFFS
)

56 
	`putch¨
('+');

58 
p
->
˛ass
) {

60 
SOFFS
:

61 
XOFFS
:

62 
	`pba£
(
p
);

64 
OFFS
:

65 
	`¥ötf
("‘%d)", 
p
->
ªgno
);

68 
EXTERN
:

69 
STATIC
:

70 
	`pba£
(
p
);

73 
REG
:

74 
	`¥ötf
("r%d", 
p
->
∆oc
);

78 
	`îr‹
("CompilerÉrror:Öname");

81 
AMPER
:

82 
	`putch¨
('$');

83 
p
 =Ö->
å1
;

84 
lo›
;

86 
AUTOI
:

87 
	`¥ötf
("‘%d)%c", 
p
->
∆oc
, 
Êag
?0:'+');

90 
AUTOD
:

91 
	`¥ötf
("%c‘%d)", 
Êag
?0:'-', 
p
->
∆oc
);

94 
STAR
:

95 
p
 =Ö->
å1
;

96 
	`putch¨
('*');

97 
lo›
;

100 
	`îr‹
("pname called illegally");

101 
	}
}

103 
	$pba£
(
≠
)

104 
äode
 *
≠
;

106 
äode
 *
p
;

108 
p
 = 
≠
;

109 i‡(
p
->
˛ass
==
SOFFS
 ||Ö->˛ass==
STATIC
)

110 
	`¥ötf
("L%d", 
p
->
∆oc
);

112 
	`¥ötf
("_%.8s", &(
p
->
∆oc
));

113 
	}
}

115 
	$xdˇlc
(
≠
, 
ƒÀ·
)

116 
äode
 *
≠
;

118 
äode
 *
p
;

119 
d
;

121 
p
 = 
≠
;

122 
d
 = 
	`dˇlc
(
p
, 
ƒÀ·
);

123 i‡(
d
<20 && 
p
->
ty≥
==
CHAR
) {

124 i‡(
ƒÀ·
>=1)

125 
d
 = 20;

127 
d
 = 24;

129 (
d
);

130 
	}
}

132 
	$dˇlc
(
≠
, 
ƒÀ·
)

133 
äode
 *
≠
;

135 
äode
 *
p
, *
p1
;

137 i‡((
p
=
≠
)==0)

139 
p
->
›
) {

141 
NAME
:

142 i‡(
p
->
˛ass
==
REG
)

145 
AMPER
:

146 
FCON
:

147 
AUTOI
:

148 
AUTOD
:

151 
CON
:

152 
SFCON
:

153 (
p
->
vÆue
==0? 4:(p->value==1?5:8));

155 
STAR
:

156 
p1
 = 
p
->
å1
;

157 i‡(
p1
->
›
==
NAME
 ||Ö1->›==
CON
)

160 (
p
->
degªe
<=
ƒÀ·
? 20: 24);

161 
	}
}

163 
	$nŸcom∑t
(
≠
, 
a°
, 
›
)

164 
äode
 *
≠
;

166 
©
, 
°
;

167 
äode
 *
p
;

169 
p
 = 
≠
;

170 
©
 = 
p
->
ty≥
;

171 
°
 = 
a°
;

172 i‡((
©
&07)==
STRUCT
)

173 
©
 =& 077770;

174 i‡(
°
==0)

175 (
©
>1 &át<=07);

176 i‡(
°
==1)

177 (
©
>0 &át<=07);

178 
°
 =- 2;

179 i‡((
©
&077740) != 0)

180 
©
 = 020;

181 i‡((
©
&077770) != 0)

182 
©
 =át&07 | 020;

183 i‡(
°
==2 && 
©
==3)

184 
©
 = 2;

185 i‡(
p
->
›
==
NAME
 &&Ö->
˛ass
==
REG
 && op==
ASSIGN
 && 
°
==
CHAR
)

187 (
°
 !
©
);

188 
	}
}

190 
	$¥ös
(
›
, 
c
) {

191 
ö°ab
 *
ö•
;

192 *
ù
;

194 
ö•
=
ö°ab
; in•->
›
 != 0; insp++) {

195 i‡(
ö•
->
›
 == op) {

196 
ù
 = 
c
? 
ö•
->
°r2
: in•->
°r1
;

197 i‡(
ù
==0)

199 
	`¥ötf
("%s", 
ù
);

203 
	`îr‹
("Nÿm©ch' f‹ o∞%d", 
›
);

204 
	}
}

206 
	$cﬁlc⁄
(
≠
)

207 
äode
 *
≠
;

209 
›
;

210 
äode
 *
p
;

212 
p
 = 
≠
;

213 i‡(
p
->
›
==
STAR
)

214 
p
 =Ö->
å1
;

215 i‡(
p
->
›
==
PLUS
) {

216 
›
 = 
p
->
å2
->op;

217 i‡(
›
==
CON
 || op==
AMPER
)

221 
	}
}

223 
	$isÊﬂt
(
©
)

224 
äode
 *
©
;

226 
äode
 *
t
;

228 
t
 = 
©
;

229 i‡((
›d›e
[
t
->
›
]&
RELAT
)!=0)

230 
t
 =Å->
å1
;

231 i‡(
t
->
ty≥
==
FLOAT
 ||Å->ty≥==
DOUBLE
) {

232 
nÊﬂt
 = 1;

236 
	}
}

238 
	$oddªg
(
t
, 
¨eg
)

239 
äode
 *
t
;

241 
ªg
;

243 
ªg
 = 
¨eg
;

244 i‡(!
	`isÊﬂt
(
t
))

245 
t
->
›
) {

246 
DIVIDE
:

247 
MOD
:

248 
ASDIV
:

249 
ASMOD
:

250 
ªg
++;

252 
TIMES
:

253 
ASTIMES
:

254 (
ªg
|1);

256 (
ªg
);

257 
	}
}

259 
	$¨Àngth
(
t
)

261 i‡(
t
>=
PTR
)

263 
t
) {

265 
INT
:

266 
CHAR
:

269 
FLOAT
:

270 
DOUBLE
:

274 
	}
}

276 
	$pswôch
(
aÂ
, 
Æp
, 
deÊab
)

277 
swèb
 *
aÂ
, *
Æp
;

279 
éab
, 
nˇ£
, 
i
, 
j
, 
èbs
, 
w‹°
, 
be°
, 
ønge
;

280 
swèb
 *
swp
, *
Â
, *
Õ
;

281 
po˘ab
[
swsiz
];

283 
Â
 = 
aÂ
;

284 
Õ
 = 
Æp
;

285 i‡(
Â
==
Õ
) {

286 
	`¥ötf
("jbr L%d\n", 
deÊab
);

289 
éab
 = 
i¢
++;

290 i‡(
	`s‹t
(
Â
, 
Õ
))

292 
nˇ£
 = 
Õ
-
Â
;

293 
Õ
--;

294 
ønge
 = 
Õ
->
swvÆ
 - 
Â
->swval;

296 i‡(
ønge
>0 &&Ñ™gê<3*
nˇ£
) {

297 i‡(
Â
->
swvÆ
)

298 
	`¥ötf
("sub $%o,r0\n", 
Â
->
swvÆ
);

299 
	`¥ötf
("cmpÑ0,$%o\n", 
ønge
);

300 
	`¥ötf
("jhi L%d\n", 
deÊab
);

301 
	`¥ötf
("aslÑ0\n");

302 
	`¥ötf
("jmp *L%d‘0)\n.d©a\nL%d:", 
i¢
, isn);

303 
i¢
++;

304 
i
=
Â
->
swvÆ
; i<=
Õ
->swval; i++) {

305 i‡(
i
==
Â
->
swvÆ
) {

306 
	`¥ötf
("L%d\n", 
Â
->
swœb
);

307 
Â
++;

309 
	`¥ötf
("L%d\n", 
deÊab
);

311 
esw
;

314 i‡(
nˇ£
<8) {

315 
i
 = 
i¢
++;

316 
j
 = 
i¢
++;

317 
	`¥ötf
("mov $L%d,r1\n", 
i
);

318 
	`¥ötf
("movÑ0,L%d\n", 
j
);

319 
	`¥ötf
("L%d:cmpÑ0,‘1)+\n", 
i¢
);

320 
	`¥ötf
("j√ L%d\n", 
i¢
++);

321 
	`¥ötf
("jmp *L%d-L%d‘1)\n", 
j
, 
i
);

322 
	`¥ötf
(".d©a\nL%d:", 
i
);

323 ; 
Â
<=
Õ
; fp++)

324 
	`¥ötf
("%o\n", 
Â
->
swvÆ
);

325 
	`¥ötf
("L%d:..\n", 
j
);

326 
Â
 = 
aÂ
; fp<=
Õ
; fp++)

327 
	`¥ötf
("L%d\n", 
Â
->
swœb
);

328 
	`¥ötf
("L%d\n", 
deÊab
);

329 
esw
;

332 
be°
 = 077777;

333 
i
=
nˇ£
/4; i<=ncase/2; i++) {

334 
j
=0; j<
i
; j++)

335 
po˘ab
[
j
] = 0;

336 
swp
=
Â
; swp<=
Õ
; swp++)

337 
po˘ab
[
	`Ãem
(0, 
swp
->
swvÆ
, 
i
)]++;

338 
w‹°
 = 0;

339 
j
=0; j<
i
; j++)

340 i‡(
po˘ab
[
j
]>
w‹°
)

341 
w‹°
 = 
po˘ab
[
j
];

342 i‡(
i
*
w‹°
 < 
be°
) {

343 
èbs
 = 
i
;

344 
be°
 = 
i
*
w‹°
;

347 
	`¥ötf
("j§Ñ2,hsw; %o; L%d\n", 
èbs
, 
i¢
);

348 
	`¥ötf
("jmp *L%d-L%d‘1)\n", 
i¢
+
èbs
+1, isn+1);

349 
	`¥ötf
(".d©a\nL%d:", 
i¢
++);

350 
i
=0; i<=
èbs
; i++)

351 
	`¥ötf
("L%d\n", 
i¢
+
i
);

352 
i
=0; i<
èbs
; i++) {

353 
	`¥ötf
("L%d:..\n", 
i¢
++);

354 
swp
=
Â
; swp<=
Õ
; swp++)

355 i‡(
	`Ãem
(0, 
swp
->
swvÆ
, 
èbs
Ë=
i
)

356 
	`¥ötf
("%o\n", 
	`ldiv
(0, 
swp
->
swvÆ
, 
èbs
));

358 
	`¥ötf
("L%d:", 
i¢
++);

359 
i
=0; i<
èbs
; i++) {

360 
	`¥ötf
("L%d\n", 
deÊab
);

361 
swp
=
Â
; swp<=
Õ
; swp++)

362 i‡(
	`Ãem
(0, 
swp
->
swvÆ
, 
èbs
Ë=
i
)

363 
	`¥ötf
("L%d\n", 
swp
->
swœb
);

365 
esw
:

366 
	`¥ötf
(".text\n");

367 
	}
}

369 
	$s‹t
(
aÂ
, 
Æp
)

370 
swèb
 *
aÂ
, *
Æp
;

372 
swèb
 *
˝
, *
Â
, *
Õ
;

373 
ötch
, 
t
;

375 
Â
 = 
aÂ
;

376 
Õ
 = 
Æp
;

377 
Â
 < --
Õ
) {

378 
ötch
 = 0;

379 
˝
=
Â
; cp<
Õ
; cp++) {

380 i‡(
˝
->
swvÆ
 == cp[1].swval) {

381 
	`îr‹
("Du∂iˇã ca£ (%d)", 
˝
->
swvÆ
);

384 i‡(
˝
->
swvÆ
 > cp[1].swval) {

385 
ötch
++;

386 
t
 = 
˝
->
swvÆ
;

387 
˝
->
swvÆ
 = cp[1].swval;

388 
˝
[1].
swvÆ
 = 
t
;

389 
t
 = 
˝
->
swœb
;

390 
˝
->
swœb
 = cp[1].swlab;

391 
˝
[1].
swœb
 = 
t
;

394 i‡(
ötch
==0)

398 
	}
}

400 
	$i•ow2
(
©ªe
)

402 
d
;

403 
äode
 *
åì
;

405 
åì
 = 
©ªe
;

406 i‡(!
	`isÊﬂt
(
åì
Ë&&Åªe->
å2
->
›
==
CON
) {

407 
d
 = 
åì
->
å2
->
vÆue
;

408 i‡(
d
>1 && (d&(d-1))==0)

409 (
d
);

412 
	}
}

414 
	$pow2
(
©ªe
)

415 
äode
 *
©ªe
;

417 
d
, 
i
;

418 
äode
 *
åì
;

420 
åì
 = 
©ªe
;

421 i‡(
d
 = 
	`i•ow2
(
åì
)) {

422 
i
=0; (
d
=>>1)!=0; i++);

423 
åì
->
å2
->
vÆue
 = 
i
;

424 
d
 = 
åì
->
›
;

425 
åì
->
›
 = 
d
==
TIMES
? 
LSHIFT
:

426 (
d
==
DIVIDE
? 
RSHIFT
:

427 (
d
==
ASTIMES
? 
ASLSH
: 
ASRSH
));

429 
	}
}

431 
	$cbønch
(
©ªe
, 
Æbl
, 
c⁄d
, 
¨eg
)

432 
äode
 *
©ªe
;

434 
l1
, 
›
;

435 
lbl
, 
ªg
;

436 
äode
 *
åì
;

438 
lbl
 = 
Æbl
;

439 
ªg
 = 
¨eg
;

440 i‡((
åì
=
©ªe
)==0)

442 
åì
->
›
) {

444 
LOGAND
:

445 i‡(
c⁄d
) {

446 
	`cbønch
(
åì
->
å1
, 
l1
=
i¢
++, 0, 
ªg
);

447 
	`cbønch
(
åì
->
å2
, 
lbl
, 1, 
ªg
);

448 
	`œbñ
(
l1
);

450 
	`cbønch
(
åì
->
å1
, 
lbl
, 0, 
ªg
);

451 
	`cbønch
(
åì
->
å2
, 
lbl
, 0, 
ªg
);

455 
LOGOR
:

456 i‡(
c⁄d
) {

457 
	`cbønch
(
åì
->
å1
, 
lbl
, 1, 
ªg
);

458 
	`cbønch
(
åì
->
å2
, 
lbl
, 1, 
ªg
);

460 
	`cbønch
(
åì
->
å1
, 
l1
=
i¢
++, 1, 
ªg
);

461 
	`cbønch
(
åì
->
å2
, 
lbl
, 0, 
ªg
);

462 
	`œbñ
(
l1
);

466 
EXCLA
:

467 
	`cbønch
(
åì
->
å1
, 
lbl
, !
c⁄d
, 
ªg
);

470 
COMMA
:

471 
	`r˚x¥
(
åì
->
å1
, 
ef·ab
, 
ªg
);

472 
åì
 =Åªe->
å2
;

475 
	`r˚x¥
(
åì
, 
c˘ab
, 
ªg
);

476 
›
 = 
åì
->op;

477 i‡((
›d›e
[
›
]&
RELAT
)==0)

478 
›
 = 
NEQUAL
;

479 i‡(
åì
->
å2
->
›
==
CON
 &&Åªe->å2->
vÆue
==0)

480 
›
 =+ 200;

481 i‡(
	`isÊﬂt
(
åì
))

482 
	`¥ötf
("cfcc\n");

483 
	`bønch
(
lbl
, 
›
, !
c⁄d
);

484 
	}
}

486 
	$bønch
(
lbl
, 
a›
, 
c
)

488 
›
;

490 if(
›
=
a›
)

491 
	`¥ös
(
›
,
c
);

493 
	`¥ötf
("jbr");

494 
	`¥ötf
("\tL%d\n", 
lbl
);

495 
	}
}

497 
	$œbñ
(
l
)

499 
	`¥ötf
("L%d:", 
l
);

500 
	}
}

502 
	$p›°k
(
a
)

504 
a
) {

510 
	`¥ötf
("tst (sp)+\n");

514 
	`¥ötf
("cmp (sp)+,(sp)+\n");

517 
	`¥ötf
("add $%o,•\n", 
a
);

518 
	}
}

520 
	$îr‹
(
s
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
)

522 
f
;

523 
fout
;

525 
√º‹
++;

526 
	`Êush
();

527 
f
 = 
fout
;

528 
fout
 = 1;

529 
	`¥ötf
("%d: ", 
löe
);

530 
	`¥ötf
(
s
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
);

531 
	`putch¨
('\n');

532 
	`Êush
();

533 
fout
 = 
f
;

534 
	}
}

536 
	$pso˘
(
™
)

538 
n
, 
sign
;

540 
sign
 = 0;

541 i‡((
n
 = 
™
) < 0) {

542 
n
 = -n;

543 
sign
 = '-';

545 
	`¥ötf
("%c%o", 
sign
, 
n
);

546 
	}
}

	@usr/c/c12.c

7 
	~"c1h.c
"

9 
	$›tim
(
©ªe
)

10 
äode
 *
©ªe
;

12 
›
, 
d›e
;

13 
d1
, 
d2
;

14 
äode
 *
t
;

15 
äode
 *
åì
;

17 i‡((
åì
=
©ªe
)==0)

19 i‡((
›
 = 
åì
->op)==0)

20 (
åì
);

21 i‡(
›
==
NAME
 && 
åì
->
˛ass
==
AUTO
) {

22 
åì
->
˛ass
 = 
OFFS
;

23 
åì
->
ªgno
 = 5;

24 
åì
->
off£t
 =Åªe->
∆oc
;

26 
d›e
 = 
›d›e
[
›
];

27 i‡((
d›e
&
LEAF
) != 0)

28 (
åì
);

29 i‡((
d›e
&
BINARY
) == 0)

30 (
	`un›tim
(
åì
));

32 i‡((
d›e
&
COMMUTE
)!=0) {

33 
acomm
: 
d1
 = 
åì
->
ty≥
;

34 
åì
 = 
	`acommuã
(tree);

35 
åì
->
ty≥
 = 
d1
;

36 (
åì
);

38 
åì
->
å1
 = 
	`›tim
(tree->tr1);

39 
åì
->
å2
 = 
	`›tim
(tree->tr2);

40 i‡((
d›e
&
RELAT
) != 0) {

41 i‡((
d1
=
	`degªe
(
åì
->
å1
)Ë< (
d2
=degªe—ªe->
å2
))

42 || 
d1
==
d2
 && 
åì
->
å1
->
›
==
NAME
 &&Åªe->
å2
->op!=NAME) {

43 
t
 = 
åì
->
å1
;

44 
åì
->
å1
 =Åªe->
å2
;

45 
åì
->
å2
 = 
t
;

46 
åì
->
›
 = 
m≠ªl
[›-
EQUAL
];

48 i‡(
åì
->
å1
->
ty≥
==
CHAR
 &&Åªe->
å2
->
›
==
CON


49 && (
	`dˇlc
(
åì
->
å1
Ë<12 ||Åªe->å1->
›
==
STAR
)

50 && 
åì
->
å2
->
vÆue
 <= 127 &&Åree->tr2->value >= 0)

51 
åì
->
å2
->
ty≥
 = 
CHAR
;

53 
d1
 = 
	`max
(
	`degªe
(
åì
->
å1
), 1);

54 
d2
 = 
	`max
(
	`degªe
(
åì
->
å2
), 0);

55 
›
) {

57 
ASSAND
:

58 i‡(
åì
->
å2
->
›
 =
COMPL
) {

59 
åì
->
å2
 =Åªe->å2->
å1
;

60 
d2
 = 
	`max
(
	`degªe
(
åì
->
å2
), 0);

61 
åì
->
›
 = 
ASSNAND
;

65 
CALL
:

66 
åì
->
degªe
 = 10;

69 
QUEST
:

70 
COLON
:

71 
åì
->
degªe
 = 
	`max
(
d1
, 
d2
);

74 
MINUS
:

75 i‡(
åì
->
å2
->
›
==
CON
) {

76 
åì
->
›
 = 
PLUS
;

77 
åì
->
å2
->
vÆue
 = -tree->tr2->value;

78 
acomm
;

80 
def
;

82 
DIVIDE
:

83 
ASDIV
:

84 
ASTIMES
:

85 i‡(
åì
->
å2
->
›
==
CON
 &&Åªe->å2->
vÆue
==1)

86 (
åì
->
å1
);

87 i‡(
	`i•ow2
(
åì
) == 0) {

89 
MOD
:

90 
ASMOD
:

91 
d1
 =+ 2;

92 
d2
 =+ 2;

94 
c⁄°™t
;

96 
LSHIFT
:

97 
RSHIFT
:

98 
ASRSH
:

99 
ASLSH
:

100 i‡(
åì
->
å2
->
›
==
CON
 &&Åªe->å2->
vÆue
==0)

101 (
åì
->
å1
);

103 
c⁄°™t
:

104 i‡(
åì
->
å1
->
›
==
CON
 &&Åªe->
å2
->op==CON) {

105 c⁄°(
›
, &
åì
->
å1
->
vÆue
,Åªe->
å2
->value);

106 (
åì
->
å1
);

110 
def
:

112 
åì
->
degªe
 = 
d1
==
d2
? ++d1: 
	`max
(d1, d2);

115 (
åì
);

116 
	}
}

118 
	$un›tim
(
©ªe
)

119 
äode
 *
©ªe
;

121 
äode
 *
subåe
, *
åì
;

122 *
p
;

123 
fv
;

124 °ru˘ { 
öãgî
; };

126 i‡((
åì
=
©ªe
)==0)

128 i‡(
åì
->
›
==
CBRANCH
) {

129 
åì
->
båì
 = 
	`›tim
(tree->btree);

130 (
åì
);

132 
subåe
 = 
åì
->
å1
 = 
	`›tim
(tree->tr1);

134 i‡(
åì
->
›
==
AMPER
) {

135 i‡(
subåe
->
›
==
STAR
)

136 (
subåe
->
å1
);

137 i‡(
subåe
->
›
==
NAME
 && subåe->
˛ass
 =
OFFS
) {

138 
p
 = 
	`block
(2, 
PLUS
, 
åì
->
ty≥
, 1, 
subåe
,Åree);

139 
subåe
->
ty≥
 = 
åì
->type;

140 
åì
->
›
 = 
CON
;

141 
åì
->
ty≥
 = 
INT
;

142 
åì
->
degªe
 = 0;

143 
åì
->
vÆue
 = 
subåe
->
off£t
;

144 
subåe
->
˛ass
 = 
REG
;

145 
subåe
->
∆oc
 = subåe->
ªgno
;

146 
subåe
->
off£t
 = 0;

147 (
p
);

151 i‡(
åì
->
›
==
STAR
) {

152 i‡(
subåe
->
›
==
AMPER
)

153 (
subåe
->
å1
);

154 i‡(
subåe
->
›
==
NAME
 && subåe->
˛ass
==
REG
) {

155 
subåe
->
ty≥
 = 
åì
->type;

156 
subåe
->
˛ass
 = 
OFFS
;

157 
subåe
->
ªgno
 = subåe->
∆oc
;

158 (
subåe
);

160 
p
 = 
subåe
->
å1
;

161 i‡((
subåe
->
›
==
INCAFT
 || subåe->›==
DECBEF
)

162 && 
p
->
›
==
NAME
 &&Ö->
˛ass
==
REG
 &&Ö->
ty≥
==
subåe
->type) {

163 
p
->
ty≥
 = 
åì
->type;

164 
p
->
›
 = 
subåe
->›==
INCAFT
? 
AUTOI
: 
AUTOD
;

165 (
p
);

167 i‡(
subåe
->
›
==
PLUS
 && 
p
->›==
NAME
 &&Ö->
˛ass
==
REG
) {

168 i‡(
subåe
->
å2
->
›
==
CON
) {

169 
p
->
off£t
 =+ 
subåe
->
å2
->
vÆue
;

170 
p
->
˛ass
 = 
OFFS
;

171 
p
->
ty≥
 = 
åì
->type;

172 
p
->
ªgno
 =Ö->
∆oc
;

173 (
p
);

175 i‡(
subåe
->
å2
->
›
==
AMPER
) {

176 
subåe
 = subåe->
å2
->
å1
;

177 
subåe
->
˛ass
 =+ 
XOFFS
-
EXTERN
;

178 
subåe
->
ªgno
 = 
p
->
∆oc
;

179 
subåe
->
ty≥
 = 
åì
->type;

180 (
subåe
);

184 i‡(
åì
->
›
 =
ITOF
 && 
subåe
->› =
CON
) {

185 
fv
 = 
subåe
->
vÆue
;

186 
p
 = &
fv
;

187 
p
++;

188 i‡(*
p
++==0 && *p++==0 && *p++==0) {

189 
subåe
->
ty≥
 = 
DOUBLE
;

190 
subåe
->
vÆue
 = 
fv
.
öãgî
;

191 
subåe
->
›
 = 
SFCON
;

192 (
subåe
);

195 i‡(
subåe
->
›
 =
CON
Ë
åì
->op) {

197 
NEG
:

198 
subåe
->
vÆue
 = -subtre->value;

199 (
subåe
);

201 
COMPL
:

202 
subåe
->
vÆue
 = ~subtre->value;

203 (
subåe
);

205 
åì
->
degªe
 = 
	`max
(1, 
	`degªe
(
subåe
));

206 (
åì
);

207 
	}
}

209 
	sa˛
 {

210 
	m√xé
;

211 
	m√xä
;

212 
äode
 *
	m∆i°
[20];

213 
äode
 *
	mŒi°
[21];

216 
	$acommuã
(
©ªe
)

218 
a˛
ácl;

219 
d
, 
i
, 
›
, 
Êt
;

220 
äode
 *
t1
, **
t2
, *
åì
;

221 
äode
 *
t
;

223 
a˛
.
√xé
 = 0;

224 
a˛
.
√xä
 = 0;

225 
åì
 = 
©ªe
;

226 
›
 = 
åì
->op;

227 
Êt
 = 
	`isÊﬂt
(
åì
);

228 
	`ö£π
(
›
, 
åì
, &
a˛
);

229 
a˛
.
√xé
--;

230 
t2
 = &
a˛
.
Œi°
[a˛.
√xé
];

231 i‡(!
Êt
) {

233 
i
=
a˛
.
√xé
;i>0&&
t2
[0]->
›
==
CON
&&t2[-1]->op==CON;i--) {

234 
a˛
.
√xé
--;

235 
t2
--;

236 c⁄°(
›
, &
t2
[0]->
vÆue
,Å2[1]->value);

239 i‡(
›
==
PLUS
) {

241 i‡(
a˛
.
√xé
>0 && ((*
t2
)->
›
==
CON
 || (*t2)->›==
SFCON
)

242 && (*
t2
)->
vÆue
==0) {

243 
a˛
.
√xé
--;

244 
t2
--;

246 i‡(
a˛
.
√xé
 <= 0)

247 (*
t2
);

249 i‡(
t2
[0]->
›
==
CON
 &&Å2[-1]->›==
AMPER
) {

250 
t2
--;

251 
t2
[0]->
å1
->
off£t
 =+Å2[1]->
vÆue
;

252 
a˛
.
√xé
--;

254 } i‡(
›
==
TIMES
) {

255 
t1
 = 
a˛
.
Œi°
[a˛.
√xé
];

256 i‡(
t1
->
›
==
CON
) {

257 i‡(
t1
->
vÆue
==0)

258 (
t1
);

259 i‡(
t1
->
vÆue
==1 && 
a˛
.
√xé
>0)

260 i‡(--
a˛
.
√xé
 <= 0)

261 (
a˛
.
Œi°
[0]);

264 i‡(
›
==
PLUS
 && !
Êt
)

265 
	`di°rib
(&
a˛
);

266 
åì
 = *(
t2
 = &
a˛
.
Œi°
[0]);

267 
d
 = 
	`max
(
	`degªe
(
åì
), 1);

268 i‡(
›
==
TIMES
 && !
Êt
)

269 
d
++;

270 
i
=0; i<
a˛
.
√xé
; i++) {

271 
t1
 = 
a˛
.
∆i°
[
i
];

272 
t1
->
å2
 = 
t
 = *++
t2
;

273 
t1
->
degªe
 = 
d
 = 
	`degªe
(
t
)>=d? d+1:d;

274 
t1
->
å1
 = 
åì
;

275 
åì
 = 
t1
;

277 i‡(
åì
->
›
==
TIMES
 && 
	`i•ow2
(tree))

278 
åì
->
degªe
 = 
	`max
(
	`degªe
—ªe->
å1
), 1);

279 (
åì
);

280 
	}
}

282 
	$di°rib
(
li°
)

283 
a˛
 *
li°
;

292 
äode
 **
p1
, **
p2
;

293 
äode
 *
t
;

294 
ndmaj
, 
ndmö
;

295 
äode
 **
dividíd
, **
divis‹
;

296 
äode
 **
maxnod
, **
mödiv
;

298 
lo›
:

299 
maxnod
 = &
li°
->
Œi°
[li°->
√xé
];

300 
ndmaj
 = 1000;

301 
dividíd
 = 0;

302 
p1
 = 
li°
->
Œi°
;Ö1 <
maxnod
;Ö1++) {

303 i‡((*
p1
)->
›
!=
TIMES
 || (*p1)->
å2
->›!=
CON
)

305 
ndmö
 = 0;

306 
p2
 = 
li°
->
Œi°
;Ö2 <
maxnod
;Ö2++) {

307 i‡(
p1
==
p2
 || (*p2)->
›
!=
TIMES
 || (*p2)->
å2
->›!=
CON
)

309 i‡((*
p1
)->
å2
->
vÆue
 =(*
p2
)->tr2->value) {

310 (*
p2
)->
å2
 = (*
p1
)->
å1
;

311 (*
p2
)->
›
 = 
PLUS
;

312 (*
p1
)->
å1
 = (*
p2
);

313 *
p1
 = 
	`›tim
(*p1);

314 
	`squash
(
p2
, 
maxnod
);

315 
li°
->
√xé
--;

316 
lo›
;

318 i‡(((*
p2
)->
å2
->
vÆue
 % (*
p1
)->tr2->value) == 0)

319 
c⁄tmaj
;

320 i‡(((*
p1
)->
å2
->
vÆue
 % (*
p2
)->tr2->value) == 0) {

321 
ndmö
++;

322 
mödiv
 = 
p2
;

325 i‡(
ndmö
 > 0 &&Çdmö < 
ndmaj
) {

326 
ndmaj
 = 
ndmö
;

327 
dividíd
 = 
p1
;

328 
divis‹
 = 
mödiv
;

330 
c⁄tmaj
:;

332 i‡(
dividíd
==0)

334 
t
 = 
li°
->
∆i°
[--li°->
√xä
];

335 
p1
 = 
dividíd
;

336 
p2
 = 
divis‹
;

337 
t
->
›
 = 
PLUS
;

338 
t
->
ty≥
 = (*
p1
)->type;

339 
t
->
å1
 = (*
p1
);

340 
t
->
å2
 = (*
p2
)->
å1
;

341 (*
p1
)->
å2
->
vÆue
 =/ (*
p2
)->tr2->value;

342 (*
p2
)->
å1
 = 
t
;

343 
t
 = 
	`›tim
(*
p2
);

344 i‡(
p1
 < 
p2
) {

345 *
p1
 = 
t
;

346 
	`squash
(
p2
, 
maxnod
);

348 *
p2
 = 
t
;

349 
	`squash
(
p1
, 
maxnod
);

351 
li°
->
√xé
--;

352 
lo›
;

353 
	}
}

355 
	$squash
(
p
, 
maxp
)

356 
äode
 **
p
, **
maxp
;

358 
äode
 **
≈
;

360 
≈
 = 
p
;Ç∞< 
maxp
;Çp++)

361 *
≈
 = *(np+1);

362 
	}
}

364 c⁄°(
›
, 
vp
, 
av
)

365 *
vp
;

367 
v
;

369 
v
 = 
av
;

370 
›
) {

372 
PLUS
:

373 *
vp
 =+ 
v
;

376 
TIMES
:

377 *
vp
 =* 
v
;

380 
AND
:

381 *
vp
 =& 
v
;

384 
OR
:

385 *
vp
 =| 
v
;

388 
EXOR
:

389 *
vp
 =^ 
v
;

392 
DIVIDE
:

393 
MOD
:

394 i‡(
v
==0)

395 
	`îr‹
("Divide check");

397 i‡(
›
==
DIVIDE
)

398 *
vp
 =/ 
v
;

400 *
vp
 =% 
v
;

403 
RSHIFT
:

404 *
vp
 =>> 
v
;

407 
LSHIFT
:

408 *
vp
 =<< 
v
;

411 
	`îr‹
("CÉrror: const");

412 
	}
}

414 
	$ö£π
(
›
, 
©ªe
, 
Æi°
)

415 
a˛
 *
Æi°
;

417 
d
;

418 
a˛
 *
li°
;

419 
äode
 *
åì
;

420 
d1
, 
i
;

421 
äode
 *
t
;

423 
åì
 = 
©ªe
;

424 
li°
 = 
Æi°
;

425 i‡(
åì
->
›
 == op) {

426 
ös
: 
li°
->
∆i°
[li°->
√xä
++] = 
åì
;

427 
	`ö£π
(
›
, 
åì
->
å1
, 
li°
);

428 
	`ö£π
(
›
, 
åì
->
å2
, 
li°
);

431 
åì
 = 
	`›tim
(tree);

432 i‡(
åì
->
›
 == op)

433 
ös
;

434 i‡(!
	`isÊﬂt
(
åì
)) {

436 i‡((
åì
->
›
==
TIMES
||åì->›==
LSHIFT
Ë&&Åªe->
å2
->›==
CON


437 && 
åì
->
å1
->
›
==
PLUS
 &&Åªe->å1->
å2
->›==
CON
) {

438 
d
 = 
åì
->
å2
->
vÆue
;

439 i‡(
åì
->
›
==
TIMES
)

440 
åì
->
å2
->
vÆue
 =*Åªe->
å1
->tr2->value;

442 
åì
->
å2
->
vÆue
 =Åªe->
å1
->å2->vÆuê<< 
d
;

443 
åì
->
å1
->
å2
->
vÆue
 = 
d
;

444 
åì
->
å1
->
›
 =Åree->op;

445 
åì
->
›
 = 
PLUS
;

446 i‡(
›
==
PLUS
)

447 
ös
;

450 
d
 = 
	`degªe
(
åì
);

451 
i
=0; i<
li°
->
√xé
; i++) {

452 i‡((
d1
=
	`degªe
(
li°
->
Œi°
[
i
]))<
d
) {

453 
t
 = 
li°
->
Œi°
[
i
];

454 
li°
->
Œi°
[
i
] = 
åì
;

455 
åì
 = 
t
;

456 
d
 = 
d1
;

459 
li°
->
Œi°
[li°->
√xé
++] = 
åì
;

460 
	}
}

462 
	$block
(
™
, 
¨gs
)

464 *
p
;

465 *
ﬁdp
;

466 *
¨gp
, 
n
;

468 
ﬁdp
 = 
p
 = 
•a˚p
;

469 
n
 = 
™
+3;

470 
¨gp
 = &
¨gs
;

472 *
p
++ = *
¨gp
++;

473 --
n
);

474 i‡(
p
 >
•a˚max
) {

475 
	`îr‹
("Exp. ov.Öass 2");

476 
	`exô
(1);

478 
•a˚p
 = 
p
;

479 (
ﬁdp
);

480 
	}
}

	@usr/c/c13.c

1 
	g›d›e
[] {

	@usr/c/c1h.c

5 
	säode
 {

6 
	m›
;

7 
	mty≥
;

8 
	mdegªe
;

9 
äode
 *
	må1
, *
	må2
;

12 
	sbnode
 {

13 
	mb›
;

14 
äode
 *
	mbåì
;

15 
	mlbl
;

16 
	mc⁄d
;

19 
	säame
 {

20 
	mn›
;

21 
	m¡y≥
;

22 
	mñsize
;

23 
	m˛ass
;

24 
	mªgno
;

25 
	moff£t
;

26 
	m∆oc
;

29 
	stc⁄°
 {

30 
	mc›
;

31 
	m˘y≥
;

32 
	mcdeg
;

33 
	mvÆue
;

36 
	s›èb
 {

37 
	mèbdeg1
;

38 
	mèbtyp1
;

39 
	mèbdeg2
;

40 
	mèbtyp2
;

41 *
	mèb°rög
;

44 
	sèbÀ
 {

45 
	mèb›
;

46 
›èb
 *
	mèbp
;

49 
	sö°ab
 {

50 
	mi›
;

51 *
	m°r1
;

52 *
	m°r2
;

55 
	sswèb
 {

56 
	mswœb
;

57 
	mswvÆ
;

60 
	gm≠ªl
[];

61 
	gnŸªl
[];

62 
	gƒeg
;

63 
	gi¢
;

64 
	g«msiz
;

65 
	glöe
;

66 
	gböbuf
[518];

67 
	gascbuf
[518];

68 
	g√º‹
;

69 
èbÀ
 
	gc˘ab
[];

70 
èbÀ
 
	gef·ab
[];

71 
èbÀ
 
	gªgèb
[];

72 
èbÀ
 
	g•èb
[];

73 
èbÀ
 
	gl•èb
[];

74 
ö°ab
 
	gö°ab
[];

75 
	g›d›e
[];

76 
	gn°ack
;

77 
	gnÊﬂt
;

78 *
	g•a˚p
;

79 *
	g•a˚max
;

80 *
	gåìba£
;

81 
tc⁄°
 
	gczîo
, 
	gc⁄e
, 
	gfczîo
;

83 
	#swsiz
 200

	)

84 
	#ossiz
 500

	)

88 
	#EOF
 0

	)

89 
	#SEMI
 1

	)

90 
	#LBRACE
 2

	)

91 
	#RBRACE
 3

	)

92 
	#LBRACK
 4

	)

93 
	#RBRACK
 5

	)

94 
	#LPARN
 6

	)

95 
	#RPARN
 7

	)

96 
	#COLON
 8

	)

97 
	#COMMA
 9

	)

99 
	#KEYW
 19

	)

100 
	#NAME
 20

	)

101 
	#CON
 21

	)

102 
	#STRING
 22

	)

103 
	#FCON
 23

	)

104 
	#SFCON
 24

	)

106 
	#AUTOI
 27

	)

107 
	#AUTOD
 28

	)

108 
	#INCBEF
 30

	)

109 
	#DECBEF
 31

	)

110 
	#INCAFT
 32

	)

111 
	#DECAFT
 33

	)

112 
	#EXCLA
 34

	)

113 
	#AMPER
 35

	)

114 
	#STAR
 36

	)

115 
	#NEG
 37

	)

116 
	#COMPL
 38

	)

118 
	#DOT
 39

	)

119 
	#PLUS
 40

	)

120 
	#MINUS
 41

	)

121 
	#TIMES
 42

	)

122 
	#DIVIDE
 43

	)

123 
	#MOD
 44

	)

124 
	#RSHIFT
 45

	)

125 
	#LSHIFT
 46

	)

126 
	#AND
 47

	)

127 
	#OR
 48

	)

128 
	#EXOR
 49

	)

129 
	#ARROW
 50

	)

130 
	#ITOF
 51

	)

131 
	#FTOI
 52

	)

132 
	#LOGAND
 53

	)

133 
	#LOGOR
 54

	)

135 
	#EQUAL
 60

	)

136 
	#NEQUAL
 61

	)

137 
	#LESSEQ
 62

	)

138 
	#LESS
 63

	)

139 
	#GREATEQ
 64

	)

140 
	#GREAT
 65

	)

141 
	#LESSEQP
 66

	)

142 
	#LESSP
 67

	)

143 
	#GREATQP
 68

	)

144 
	#GREATP
 69

	)

146 
	#ASPLUS
 70

	)

147 
	#ASMINUS
 71

	)

148 
	#ASTIMES
 72

	)

149 
	#ASDIV
 73

	)

150 
	#ASMOD
 74

	)

151 
	#ASRSH
 75

	)

152 
	#ASLSH
 76

	)

153 
	#ASSAND
 77

	)

154 
	#ASOR
 78

	)

155 
	#ASXOR
 79

	)

156 
	#ASSIGN
 80

	)

157 
	#ASSNAND
 81

	)

159 
	#QUEST
 90

	)

160 
	#CALL1
 98

	)

161 
	#CALL2
 99

	)

162 
	#CALL
 100

	)

163 
	#MCALL
 101

	)

164 
	#JUMP
 102

	)

165 
	#CBRANCH
 103

	)

166 
	#INIT
 104

	)

167 
	#SETREG
 105

	)

168 
	#LOAD
 106

	)

169 
	#RFORCE
 110

	)

170 
	#BRANCH
 111

	)

171 
	#LABEL
 112

	)

176 
	#INT
 0

	)

177 
	#CHAR
 1

	)

178 
	#FLOAT
 2

	)

179 
	#DOUBLE
 3

	)

180 
	#STRUCT
 4

	)

181 
	#RSTRUCT
 5

	)

182 
	#PTR
 010

	)

183 
	#FUNC
 020

	)

184 
	#ARRAY
 030

	)

189 
	#KEYWC
 1

	)

190 
	#MOS
 4

	)

191 
	#AUTO
 5

	)

192 
	#EXTERN
 6

	)

193 
	#STATIC
 7

	)

194 
	#REG
 8

	)

195 
	#STRTAG
 9

	)

196 
	#ARG
 10

	)

197 
	#OFFS
 12

	)

198 
	#XOFFS
 13

	)

199 
	#SOFFS
 14

	)

205 
	#BINARY
 01

	)

206 
	#LVALUE
 02

	)

207 
	#RELAT
 04

	)

208 
	#ASSGOP
 010

	)

209 
	#LWORD
 020

	)

210 
	#RWORD
 040

	)

211 
	#COMMUTE
 0100

	)

212 
	#RASSOC
 0200

	)

213 
	#LEAF
 0400

	)

	@usr/c/c20.c

6 
	~"c2h.c
"

8 
›èb
 
	g›èb
[] {

9 "jbr", 
	gJBR
,

10 "jeq", 
	gCBR
 | 
	gJEQ
<<8,

11 "j√", 
	gCBR
 | 
	gJNE
<<8,

12 "jÀ", 
	gCBR
 | 
	gJLE
<<8,

13 "jge", 
	gCBR
 | 
	gJGE
<<8,

14 "j…", 
	gCBR
 | 
	gJLT
<<8,

15 "jgt", 
	gCBR
 | 
	gJGT
<<8,

16 "jlo", 
	gCBR
 | 
	gJLO
<<8,

17 "jhi", 
	gCBR
 | 
	gJHI
<<8,

18 "jlos", 
	gCBR
 | 
	gJLOS
<<8,

19 "jhis", 
	gCBR
 | 
	gJHIS
<<8,

20 "jmp", 
	gJMP
,

21 ".globl",
	gEROU
,

22 "mov", 
	gMOV
,

23 "˛r", 
	gCLR
,

24 "com", 
	gCOM
,

25 "öc", 
	gINC
,

26 "dec", 
	gDEC
,

27 "√g", 
	gNEG
,

28 "t°", 
	gTST
,

29 "a§", 
	gASR
,

30 "a¶", 
	gASL
,

31 "sxt", 
	gSXT
,

32 "cmp", 
	gCMP
,

33 "add", 
	gADD
,

34 "sub", 
	gSUB
,

35 "bô", 
	gBIT
,

36 "bic", 
	gBIC
,

37 "bis", 
	gBIS
,

38 "mul", 
	gMUL
,

39 "ash", 
	gASH
,

40 "x‹", 
	gXOR
,

41 ".ãxt",
	gTEXT
,

42 ".d©a",
	gDATA
,

43 ".bss", 
	gBSS
,

44 ".eví",
	gEVEN
,

45 "movf", 
	gMOVF
,

46 "movof",
	gMOVOF
,

47 "movfo",
	gMOVFO
,

48 "addf", 
	gADDF
,

49 "subf", 
	gSUBF
,

50 "divf", 
	gDIVF
,

51 "mulf", 
	gMULF
,

52 "˛rf", 
	gCLRF
,

53 "cmpf", 
	gCMPF
,

54 "√gf", 
	gNEGF
,

55 "t°f", 
	gTSTF
,

56 "cfcc", 
	gCFCC
,

57 "sob", 
	gSOB
,

58 "j§", 
	gJSR
,

59 ".íd", 
	gEND
,

62 
	gªvbr
[] { 
	gJNE
, 
	gJEQ
, 
	gJGT
, 
	gJLT
, 
	gJGE
, 
	gJLE
, 
	gJHIS
, 
	gJLOS
, 
	gJHI
, 
	gJLO
 };

63 
	gi¢
 20000;

65 
	$maö
(
¨gc
, 
¨gv
)

66 **
¨gv
;

68 
nôî
, 
maxôî
, 
i£nd
;

69 
íd
;

70 
fö
, 
fout
;

71 
nÊag
;

73 i‡(
¨gc
>1 && 
¨gv
[1][0]=='+') {

74 
¨gc
--;

75 
¨gv
++;

76 
debug
++;

78 i‡(
¨gc
>1 && 
¨gv
[1][0]=='-') {

79 
¨gc
--;

80 
¨gv
++;

81 
nÊag
++;

83 i‡(
¨gc
>1) {

84 i‡((
fö
 = 
	`›í
(
¨gv
[1], 0)) < 0) {

85 
	`¥ötf
("C2: c™'àföd %s\n", 
¨gv
[1]);

86 
	`exô
(1);

89 
fö
 = 
	`dup
(0);

90 i‡(
¨gc
>2) {

91 i‡((
fout
 = 
	`¸ót
(
¨gv
[2], 0666)) < 0) {

92 
fout
 = 1;

93 
	`¥ötf
("C2: c™'à¸óã %s\n", 
¨gv
[2]);

94 
	`exô
(1);

97 
fout
 = 
	`dup
(1);

98 
œ°a
 = 
fú°r
 = 
œ°r
 = 
	`sbrk
(2);

99 
maxôî
 = 0;

100 
	`›£tup
();

102 
i£nd
 = 
	`öput
();

103 
	`moved©
();

104 
nôî
 = 0;

106 
	`ªfcou¡
();

108 
	`ôî©e
();

109 
	`˛óºeg
();

110 
nôî
++;

111 } 
nch™ge
);

112 
	`comjump
();

113 
	`rmove
();

114 } 
nch™ge
 || 
	`jumpsw
());

115 
	`addsob
();

116 
	`ouçut
();

117 i‡(
nôî
 > 
maxôî
)

118 
maxôî
 = 
nôî
;

119 
œ°a
 = 
fú°r
;

120 } 
i£nd
);

121 
	`Êush
();

122 
fout
 = 2;

123 i‡(
nÊag
) {

124 
	`¥ötf
("%d iãøti⁄s\n", 
maxôî
);

125 
	`¥ötf
("%d jump†tÿjumps\n", 
nbrbr
);

126 
	`¥ötf
("%d in°.á·î jumps\n", 
ü·br
);

127 
	`¥ötf
("%d jump†tÿ.+2\n", 
njp1
);

128 
	`¥ötf
("%dÑedund™àœbñs\n", 
ƒœb
);

129 
	`¥ötf
("%d cross-jumps\n", 
nxjump
);

130 
	`¥ötf
("%d codêmŸi⁄s\n", 
ncmŸ
);

131 
	`¥ötf
("%d bønche†ªvî£d\n", 
ƒevbr
);

132 
	`¥ötf
("%dÑedund™àmoves\n", 
ªdunm
);

133 
	`¥ötf
("%d sim∂ifõdáddªs£s\n", 
nßddr
);

134 
	`¥ötf
("%dÜo›†övîãd\n", 
lo›iv
);

135 
	`¥ötf
("%dÑedund™àjumps\n", 
ƒedunj
);

136 
	`¥ötf
("%d comm⁄ seq†bef‹êjmp's\n", 
ncomj
);

137 
	`¥ötf
("%d skù†ovî jumps\n", 
nskù
);

138 
	`¥ötf
("%d sob'†added\n", 
nsob
);

139 
	`¥ötf
("%dÑedund™àt°'s\n", 
ƒt°
);

140 
	`¥ötf
("%dK c‹e\n", ((
œ°r
+01777)>>10)&077);

141 
	`Êush
();

143 
	}
}

145 
	$öput
()

147 
node
 *
p
, *
œ°p
;

148 
›
;

150 
œ°p
 = &
fú°
;

152 
›
 = 
	`gëlöe
();

153 
›
.op) {

155 
LABEL
:

156 
p
 = 
	`Æloc
( 
fú°
);

157 i‡(
löe
[0] == 'L') {

158 
p
->
comb›
 = 
LABEL
;

159 
p
->
œbno
 = 
	`gënum
(
löe
+1);

160 
p
->
code
 = 0;

162 
p
->
comb›
 = 
DLABEL
;

163 
p
->
œbno
 = 0;

164 
p
->
code
 = 
	`c›y
(
löe
);

168 
JBR
:

169 
CBR
:

170 
JMP
:

171 
JSW
:

172 
p
 = 
	`Æloc
( 
fú°
);

173 
p
->
comb›
 = 
›
;

174 i‡(*
cuæp
=='L' && (
p
->
œbno
 = 
	`gënum
(curlp+1)))

175 
p
->
code
 = 0;

177 
p
->
œbno
 = 0;

178 
p
->
code
 = 
	`c›y
(
cuæp
);

183 
p
 = 
	`Æloc
( 
fú°
);

184 
p
->
comb›
 = 
›
;

185 
p
->
œbno
 = 0;

186 
p
->
code
 = 
	`c›y
(
cuæp
);

190 
p
->
f‹w
 = 0;

191 
p
->
back
 = 
œ°p
;

192 
œ°p
->
f‹w
 = 
p
;

193 
œ°p
 = 
p
;

194 
p
->
ªf
 = 0;

195 i‡(
›
==
EROU
)

197 i‡(
›
==
END
)

200 
	}
}

202 
	$gëlöe
()

204 *
Õ
;

205 
c
;

207 
Õ
 = 
löe
;

208 
c
 = 
	`gëch¨
()) {

209 i‡(
c
==':') {

210 *
Õ
++ = 0;

211 (
LABEL
);

213 i‡(
c
=='\n') {

214 *
Õ
++ = 0;

215 (
	`›look
());

217 *
Õ
++ = 
c
;

219 *
Õ
++ = 0;

220 (
END
);

221 
	}
}

223 
	$gënum
(
≠
)

224 *
≠
;

226 *
p
;

227 
n
, 
c
;

229 
p
 = 
≠
;

230 
n
 = 0;

231 (
c
 = *
p
++) >= '0' && c <= '9')

232 
n
 =Ç*10 + 
c
 - '0';

233 i‡(*--
p
 != 0)

235 (
n
);

236 
	}
}

238 
	$ouçut
()

240 
node
 *
t
;

241 
›èb
 *
›
;

242 
byã
;

244 
t
 = &
fú°
;

245 
t
 =Å->
f‹w
Ët->
›
) {

247 
END
:

250 
LABEL
:

251 
	`¥ötf
("L%d:", 
t
->
œbno
);

254 
DLABEL
:

255 
	`¥ötf
("%s:", 
t
->
code
);

259 i‡((
byã
 = 
t
->
sub›
Ë=
BYTE
)

260 
t
->
sub›
 = 0;

261 
›
 = 
›èb
; op->
›°rög
!=0; op++)

262 i‡(
›
->
›code
 =
t
->
comb›
) {

263 
	`¥ötf
("%s", 
›
->
›°rög
);

264 i‡(
byã
==
BYTE
)

265 
	`¥ötf
("b");

268 i‡(
t
->
code
)

269 
	`¥ötf
("\t%s\n", 
t
->
code
);

270 i‡(
t
->
›
==
JBR
 ||Å->›==
CBR
)

271 
	`¥ötf
("\tL%d\n", 
t
->
œbno
);

273 
	`¥ötf
("\n");

276 
JSW
:

277 
	`¥ötf
("L%d\n", 
t
->
œbno
);

280 
SOB
:

281 
	`¥ötf
("sob %s,L%d\n", 
t
->
code
,Å->
œbno
);

285 i‡(
t
->
code
)

286 
	`¥ötf
("%s", 
t
->
code
);

287 
	`¥ötf
("\n");

290 
	}
}

292 
	$c›y
(
≠
)

293 *
≠
;

295 *
p
, *
≈
;

296 *
⁄p
;

297 
n
;

298 
«
;

300 
«
 = 
	`«rgs
();

301 
p
 = 
≠
;

302 
n
 = 0;

303 i‡(*
p
==0)

306 
n
++;

307 *
p
++);

308 i‡(
«
>1) {

309 
p
 = (&
≠
)[1];

310 *
p
++)

311 
n
++;

313 
⁄p
 = 
≈
 = 
	`Æloc
(
n
);

314 
p
 = 
≠
;

315 *
≈
++ = *
p
++);

316 i‡(
«
>1) {

317 
p
 = (&
≠
)[1];

318 
≈
--;

319 *
≈
++ = *
p
++);

321 (
⁄p
);

322 
	}
}

324 
	$›£tup
()

326 
›èb
 *
›ç
, **
›hp
;

327 *
p
;

329 
›ç
 = 
›èb
; 
p
 = o±p->
›°rög
; optp++) {

330 
›hp
 = &
›hash
[((
p
[0]+p[1].
lbyã
)&077777Ë% 
OPHS
];

331 *
›hp
++)

332 i‡(
›hp
 > &
›hash
[
OPHS
])

333 
›hp
 = 
›hash
;

334 *--
›hp
 = 
›ç
;

336 
	}
}

338 
	$›look
()

340 
›èb
 *
›ç
;

341 *
Õ
, *
›
;

342 
tmp›
[32];

343 
›èb
 **
›hp
;

345 
›
 = 
tmp›
;

346 
Õ
 = 
löe
; *lp && *lp!=' ' && *lp!='\t';)

347 *
›
++ = *
Õ
++;

348 *
›
++ = 0;

349 *
Õ
=='\t' || *lp==' ')

350 
Õ
++;

351 
cuæp
 = 
Õ
;

352 
›hp
 = &
›hash
[((
tmp›
[0].+tmp›[2])&077777Ë% 
OPHS
];

353 
›ç
 = *
›hp
) {

354 
›
 = 
›ç
->
›°rög
;

355 
Õ
 = 
tmp›
;

356 *
Õ
 =*
›
++)

357 i‡(*
Õ
++ == 0)

358 (
›ç
->
›code
);

359 i‡(*
Õ
++=='b' && *Õ++==0 && *--
›
==0)

360 (
›ç
->
›code
 + (
BYTE
<<8));

361 
›hp
++;

362 i‡(
›hp
 >&
›hash
[
OPHS
])

363 
›hp
 = 
›hash
;

365 i‡(
löe
[0]=='L') {

366 
Õ
 = &
löe
[1];

367 *
Õ
)

368 i‡(*
Õ
<'0' || *lp++>'9')

370 
cuæp
 = 
löe
;

371 (
JSW
);

373 
cuæp
 = 
löe
;

375 
	}
}

377 
	$ªfcou¡
()

379 
node
 *
p
, *
Õ
;

380 
node
 *
œbhash
[
LABHS
];

381 
node
 **
hp
;

383 
hp
 = 
œbhash
; h∞< &œbhash[
LABHS
];)

384 *
hp
++ = 0;

385 
p
 = 
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw)

386 i‡(
p
->
›
==
LABEL
) {

387 
œbhash
[
p
->
œbno
 % 
LABHS
] =Ö;

388 
p
->
ªfc
 = 0;

390 
p
 = 
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw) {

391 i‡(
p
->
›
==
JBR
 ||Ö->›==
CBR
 ||Ö->›==
JSW
) {

392 
p
->
ªf
 = 0;

393 
Õ
 = 
œbhash
[
p
->
œbno
 % 
LABHS
];

394 i‡(
Õ
==0 || 
p
->
œbno
!=lp->labno)

395 
Õ
 = 
fú°
.
f‹w
;Üp!=0;Üp =Üp->forw) {

396 i‡(
Õ
->
›
==
LABEL
 && 
p
->
œbno
==lp->labno)

399 i‡(
Õ
) {

400 
hp
 = 
	`n⁄œb
(
Õ
)->
back
;

401 i‡(
hp
!=
Õ
) {

402 
p
->
œbno
 = 
hp
->labno;

403 
Õ
 = 
hp
;

405 
p
->
ªf
 = 
Õ
;

406 
Õ
->
ªfc
++;

410 
p
 = 
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw)

411 i‡(
p
->
›
==
LABEL
 &&Ö->
ªfc
==0

412 && (
Õ
 = 
	`n⁄œb
(
p
))->
›
 &&Üp->›!=
JSW
)

413 
	`de¸ef
(
p
);

414 
	}
}

416 
	$ôî©e
()

418 
node
 *
p
, *
Ω
, *
p1
;

420 
nch™ge
 = 0;

421 
p
 = 
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw) {

422 i‡((
p
->
›
==
JBR
||p->›==
CBR
||p->›==
JSW
Ë&&Ö->
ªf
) {

423 
Ω
 = 
	`n⁄œb
(
p
->
ªf
);

424 i‡(
Ω
->
›
==
JBR
 &&Ñp->
œbno
) {

425 
nbrbr
++;

426 
p
->
œbno
 = 
Ω
->labno;

427 
	`de¸ef
(
p
->
ªf
);

428 
Ω
->
ªf
->
ªfc
++;

429 
p
->
ªf
 = 
Ω
->ref;

430 
nch™ge
++;

433 i‡(
p
->
›
==
CBR
 && (
p1
 =Ö->
f‹w
)->›==
JBR
) {

434 
Ω
 = 
p
->
ªf
;

436 
Ω
 =Ñp->
back
;

437 
Ω
->
›
==
LABEL
);

438 i‡(
Ω
==
p1
) {

439 
	`de¸ef
(
p
->
ªf
);

440 
p
->
ªf
 = 
p1
->ref;

441 
p
->
œbno
 = 
p1
->labno;

442 
p1
->
f‹w
->
back
 = 
p
;

443 
p
->
f‹w
 = 
p1
->forw;

444 
p
->
sub›
 = 
ªvbr
[p->subop];

445 
nch™ge
++;

446 
nskù
++;

449 i‡(
p
->
›
==
JBR
 ||Ö->›==
JMP
) {

450 
p
->
f‹w
 &&Ö->f‹w->
›
!=
LABEL


451 && 
p
->
f‹w
->
›
!=
EROU
 &&Ö->f‹w->›!=
END
) {

452 
nch™ge
++;

453 
ü·br
++;

454 i‡(
p
->
f‹w
->
ªf
)

455 
	`de¸ef
(
p
->
f‹w
->
ªf
);

456 
p
->
f‹w
 =Ö->forw->forw;

457 
p
->
f‹w
->
back
 =Ö;

459 
Ω
 = 
p
->
f‹w
;

460 
Ω
 &&Ñp->
›
==
LABEL
) {

461 i‡(
p
->
ªf
 =
Ω
) {

462 
p
->
back
->
f‹w
 =Ö->forw;

463 
p
->
f‹w
->
back
 =Ö->back;

464 
p
 =Ö->
back
;

465 
	`de¸ef
(
Ω
);

466 
nch™ge
++;

467 
njp1
++;

470 
Ω
 =Ñp->
f‹w
;

472 
	`xjump
(
p
);

473 
p
 = 
	`codemove
(p);

476 
	}
}

478 
	$xjump
(
≠
)

480 *
p1
, *
p2
, *
p3
;

481 
nxj
;

483 
nxj
 = 0;

484 
p1
 = 
≠
;

485 i‡((
p2
 = 
p1
->
ªf
) == 0)

488 (
p1
 =Ö1->
back
Ë&&Ö1->
›
==
LABEL
);

489 (
p2
 =Ö2->
back
Ë&&Ö2->
›
==
LABEL
);

490 i‡(!
	`equ›
(
p1
, 
p2
))

491 (
nxj
);

492 
p3
 = 
	`ö£πl
(
p2
);

493 
p1
->
comb›
 = 
JBR
;

494 
p1
->
ªf
 = 
p3
;

495 
p1
->
œbno
 = 
p3
->labno;

496 
p1
->
code
 = 0;

497 
nxj
++;

498 
nxjump
++;

499 
nch™ge
++;

501 
	}
}

503 
	$ö£πl
(
≠
)

504 
node
 *
≠
;

506 
node
 *
Õ
, *
›
;

508 
›
 = 
≠
;

509 i‡(
›
->› =
LABEL
) {

510 
›
->
ªfc
++;

511 (
›
);

513 i‡(
›
->
back
->› =
LABEL
) {

514 
›
 = op->
back
;

515 
›
->
ªfc
++;

516 (
›
);

518 
Õ
 = 
	`Æloc
( 
fú°
);

519 
Õ
->
comb›
 = 
LABEL
;

520 
Õ
->
œbno
 = 
i¢
++;

521 
Õ
->
ªf
 = 0;

522 
Õ
->
code
 = 0;

523 
Õ
->
ªfc
 = 1;

524 
Õ
->
back
 = 
›
->back;

525 
Õ
->
f‹w
 = 
›
;

526 
›
->
back
->
f‹w
 = 
Õ
;

527 
›
->
back
 = 
Õ
;

528 (
Õ
);

529 
	}
}

531 
	$codemove
(
≠
)

532 
node
 *
≠
;

534 
node
 *
p1
, *
p2
, *
p3
;

535 
node
 *
t
, *
é
;

536 
n
;

538 
p1
 = 
≠
;

539 i‡(
p1
->
›
!=
JBR
 || (
p2
 =Ö1->
ªf
)==0)

540 (
p1
);

541 
p2
->
›
 =
LABEL
)

542 i‡((
p2
 =Ö2->
back
) == 0)

543 (
p1
);

544 i‡(
p2
->
›
!=
JBR
 &&Ö2->›!=
JMP
)

545 
ivlo›
;

546 
p2
 =Ö2->
f‹w
;

547 
p3
 = 
p1
->
ªf
;

548 
p3
) {

549 i‡(
p3
->
›
==
JBR
 ||Ö3->›==
JMP
) {

550 i‡(
p1
==
p3
)

551 (
p1
);

552 
ncmŸ
++;

553 
nch™ge
++;

554 
p1
->
back
->
f‹w
 = 
p2
;

555 
p1
->
f‹w
->
back
 = 
p3
;

556 
p2
->
back
->
f‹w
 = 
p3
->forw;

557 
p3
->
f‹w
->
back
 = 
p2
->back;

558 
p2
->
back
 = 
p1
->back;

559 
p3
->
f‹w
 = 
p1
->forw;

560 
	`de¸ef
(
p1
->
ªf
);

561 (
p2
);

563 
p3
 =Ö3->
f‹w
;

565 (
p1
);

566 
ivlo›
:

567 i‡(
p1
->
f‹w
->
›
!=
LABEL
)

568 (
p1
);

569 
p3
 = 
p2
 =Ö2->
f‹w
;

570 
n
 = 16;

572 i‡((
p3
 =Ö3->
f‹w
Ë=0 ||Ö3==
p1
 || --
n
==0)

573 (
p1
);

574 } 
p3
->
›
!=
CBR
 ||Ö3->
œbno
!=
p1
->
f‹w
->labno);

576 i‡((
p1
 =Ö1->
back
) == 0)

577 (
≠
);

578 
p1
!=
p3
);

579 
p1
 = 
≠
;

580 
é
 = 
	`ö£πl
(
p1
);

581 
p3
->
sub›
 = 
ªvbr
[p3->subop];

582 
	`de¸ef
(
p3
->
ªf
);

583 
p2
->
back
->
f‹w
 = 
p1
;

584 
p3
->
f‹w
->
back
 = 
p1
;

585 
p1
->
back
->
f‹w
 = 
p2
;

586 
p1
->
f‹w
->
back
 = 
p3
;

587 
t
 = 
p1
->
back
;

588 
p1
->
back
 = 
p2
->back;

589 
p2
->
back
 = 
t
;

590 
t
 = 
p1
->
f‹w
;

591 
p1
->
f‹w
 = 
p3
->forw;

592 
p3
->
f‹w
 = 
t
;

593 
p2
 = 
	`ö£πl
(
p1
->
f‹w
);

594 
p3
->
œbno
 = 
p2
->labno;

595 
p3
->
ªf
 = 
p2
;

596 
	`de¸ef
(
é
);

597 i‡(
é
->
ªfc
<=0)

598 
ƒœb
--;

599 
lo›iv
++;

600 
nch™ge
++;

601 (
p3
);

602 
	}
}

604 
	$comjump
()

606 
node
 *
p1
, *
p2
, *
p3
;

608 
p1
 = 
fú°
.
f‹w
;Ö1!=0;Ö1 =Ö1->forw)

609 i‡(
p1
->
›
==
JBR
 && (
p2
 =Ö1->
ªf
Ë&&Ö2->
ªfc
 > 1)

610 
p3
 = 
p1
->
f‹w
;Ö3!=0;Ö3 =Ö3->forw)

611 i‡(
p3
->
›
==
JBR
 &&Ö3->
ªf
 =
p2
)

612 
	`backjmp
(
p1
, 
p3
);

613 
	}
}

615 
	$backjmp
(
≠1
, 
≠2
)

616 
node
 *
≠1
, *
≠2
;

618 
node
 *
p1
, *
p2
, *
p3
;

620 
p1
 = 
≠1
;

621 
p2
 = 
≠2
;

623 (
p1
 =Ö1->
back
Ë&&Ö1->
›
==
LABEL
);

624 
p2
 =Ö2->
back
;

625 i‡(
	`equ›
(
p1
, 
p2
)) {

626 
p3
 = 
	`ö£πl
(
p1
);

627 
p2
->
back
->
f‹w
 =Ö2->forw;

628 
p2
->
f‹w
->
back
 =Ö2->back;

629 
p2
 =Ö2->
f‹w
;

630 
	`de¸ef
(
p2
->
ªf
);

631 
p2
->
œbno
 = 
p3
->labno;

632 
p2
->
ªf
 = 
p3
;

633 
nch™ge
++;

634 
ncomj
++;

638 
	}
}

	@usr/c/c21.c

6 
	~"c2h.c
"

8 
	$rmove
()

10 
node
 *
p
;

11 *
˝
;

12 
r
;

13 
r1
, 
Êt
;

15 
p
=
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw) {

16 i‡(
debug
) {

17 
r
=0;Ñ<2*
NREG
;Ñ++)

18 i‡(
ªgs
[
r
][0])

19 
	`¥ötf
("%d: %s\n", 
r
, 
ªgs
[r]);

20 
	`¥ötf
("-\n");

22 
Êt
 = 0;

23 
p
->
›
) {

25 
MOVF
:

26 
MOVFO
:

27 
MOVOF
:

28 
Êt
 = 
NREG
;

30 
MOV
:

31 
	`duÆ›
(
p
);

32 i‡((
r
 = 
	`födønd
(
ªgs
[
RT1
], 
Êt
)) >= 0) {

33 i‡(
r
 =
Êt
+
	`i§eg
(
ªgs
[
RT2
]Ë&& 
p
->
f‹w
->
›
!=
CBR
) {

34 
p
->
f‹w
->
back
 =Ö->back;

35 
p
->
back
->
f‹w
 =Ö->forw;

36 
ªdunm
++;

40 
	`ª∂addr
(
p
, 0, 
Êt
);

41 
r
 = 
	`i§eg
(
ªgs
[
RT1
]);

42 
r1
 = 
	`i§eg
(
ªgs
[
RT2
]);

43 
	`de°
(
ªgs
[
RT2
], 
Êt
);

44 i‡(
r
 >= 0)

45 i‡(
r1
 >= 0)

46 
	`ßvîeg
(
r1
+
Êt
, 
ªgs
[
r
+flt]);

48 
	`ßvîeg
(
r
+
Êt
, 
ªgs
[
RT2
]);

50 i‡(
r1
 >= 0)

51 
	`ßvîeg
(
r1
+
Êt
, 
ªgs
[
RT1
]);

53 
	`£tc⁄
(
ªgs
[
RT1
],Ñegs[
RT2
]);

54 
	`sour˚
(
ªgs
[
RT1
]);

55 
	`£tcc
(
ªgs
[
RT2
]);

58 
ADDF
:

59 
SUBF
:

60 
DIVF
:

61 
MULF
:

62 
Êt
 = 
NREG
;

64 
ADD
:

65 
SUB
:

66 
BIC
:

67 
BIS
:

68 
MUL
:

69 
DIV
:

70 
ASH
:

71 
	`duÆ›
(
p
);

72 
	`ª∂addr
(
p
, 0, 
Êt
);

73 
	`sour˚
(
ªgs
[
RT1
]);

74 
	`de°
(
ªgs
[
RT2
], 
Êt
);

75 i‡(
p
->
›
==
DIV
 && (
r
 = 
	`i§eg
(
ªgs
[
RT2
])>=0))

76 
ªgs
[
r
+1][0] = 0;

77 
c˛oc
[0] = 0;

80 
CLRF
:

81 
NEGF
:

82 
Êt
 = 
NREG
;

84 
CLR
:

85 
COM
:

86 
INC
:

87 
DEC
:

88 
NEG
:

89 
ASR
:

90 
ASL
:

91 
SXT
:

92 
	`sög›
(
p
);

93 
	`de°
(
ªgs
[
RT1
], 
Êt
);

94 i‡(
p
->
›
==
CLR
 && 
Êt
==0)

95 i‡((
r
 = 
	`i§eg
(
ªgs
[
RT1
])) >= 0)

96 
	`ßvîeg
(
r
, "$0");

98 
	`£tc⁄
("$0", 
ªgs
[
RT1
]);

99 
	`£tcc
(
ªgs
[
RT1
]);

102 
TSTF
:

103 
Êt
 = 
NREG
;

105 
TST
:

106 
	`sög›
(
p
);

107 
	`ª∂addr
(
p
, 0, 
Êt
);

108 
	`sour˚
(
ªgs
[
RT1
]);

109 i‡(
	`equ°r
(
ªgs
[
RT1
], 
c˛oc
)) {

110 
p
->
back
->
f‹w
 =Ö->forw;

111 
p
->
f‹w
->
back
 =Ö->back;

112 
p
 =Ö->
back
;

113 
ƒt°
++;

114 
nch™ge
++;

118 
CMPF
:

119 
Êt
 = 
NREG
;

121 
CMP
:

122 
BIT
:

123 
	`duÆ›
(
p
);

124 
	`sour˚
(
ªgs
[
RT1
]);

125 
	`sour˚
(
ªgs
[
RT2
]);

126 
	`ª∂addr
(
p
, 1, 
Êt
);

127 
c˛oc
[0] = 0;

130 
CBR
:

131 
CFCC
:

132 
c˛oc
[0] = 0;

135 
JBR
:

136 
	`ªdunbr
(
p
);

139 
	`˛óºeg
();

142 
	}
}

144 
	$jumpsw
()

146 
node
 *
p
, *
p1
;

147 
t
;

148 
nj
;

150 
t
 = 0;

151 
nj
 = 0;

152 
p
=
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw)

153 
p
->
ªfc
 = ++
t
;

154 
p
=
fú°
.
f‹w
;Ö!=0;Ö = 
p1
) {

155 
p1
 = 
p
->
f‹w
;

156 i‡(
p
->
›
 =
CBR
 && 
p1
->›==
JBR
 &&Ö->
ªf
 &&Ö1->ref

157 && 
	`abs
(
p
->
ªfc
 -Ö->
ªf
->ªfcË>ábs(
p1
->refc -Ö1->ref->refc)) {

158 
p
->
sub›
 = 
ªvbr
[p->subop];

159 
t
 = 
p1
->
ªf
;

160 
p1
->
ªf
 = 
p
->ref;

161 
p
->
ªf
 = 
t
;

162 
t
 = 
p1
->
œbno
;

163 
p1
->
œbno
 = 
p
->labno;

164 
p
->
œbno
 = 
t
;

165 
ƒevbr
++;

166 
nj
++;

169 (
nj
);

170 
	}
}

172 
	$addsob
()

174 
node
 *
p
, *
p1
;

176 
p
 = &
fú°
; (
p1
 =Ö->
f‹w
)!=0;Ö =Ö1) {

177 i‡(
p
->
›
==
DEC
 && 
	`i§eg
’->
code
)>=0

178 && 
p1
->
comb›
==(
CBR
|
JNE
<<8)) {

179 i‡(
p
->
ªfc
 < 
p1
->
ªf
->refc)

181 i‡(
p
->
ªfc
 - 
p1
->
ªf
->refc > 50)

183 
p
->
œbno
 = 
p1
->labno;

184 
p
->
comb›
 = 
SOB
;

185 
p1
->
f‹w
->
back
 = 
p
;

186 
p
->
f‹w
 = 
p1
->forw;

187 
nsob
++;

190 
	}
}

192 
	$abs
(
x
)

194 (
x
<0? -x: x);

195 
	}
}

197 
	$equ›
(
≠1
, 
p2
)

198 
node
 *
≠1
, *
p2
;

200 *
˝1
, *
˝2
;

201 
node
 *
p1
;

203 
p1
 = 
≠1
;

204 i‡(
p1
->
comb›
 !
p2
->combop)

206 i‡(
p1
->
›
>0 &&Ö1->›<
MOV
)

208 
˝1
 = 
p1
->
code
;

209 
˝2
 = 
p2
->
code
;

210 i‡(
˝1
==0 && 
˝2
==0)

212 i‡(
˝1
==0 || 
˝2
==0)

214 *
˝1
 =*
˝2
++)

215 i‡(*
˝1
++ == 0)

218 
	}
}

220 
	$de¸ef
(
≠
)

222 
node
 *
p
;

224 
p
 = 
≠
;

225 i‡(--
p
->
ªfc
 <= 0) {

226 
ƒœb
++;

227 
p
->
back
->
f‹w
 =Ö->forw;

228 
p
->
f‹w
->
back
 =Ö->back;

230 
	}
}

232 
	$n⁄œb
(
≠
)

233 
node
 *
≠
;

235 
node
 *
p
;

237 
p
 = 
≠
;

238 
p
 &&Ö->
›
==
LABEL
)

239 
p
 =Ö->
f‹w
;

240 (
p
);

241 
	}
}

243 
	$Æloc
(
™
)

245 
n
;

246 *
p
;

248 
n
 = 
™
;

249 
n
++;

250 
n
 =& ~01;

251 i‡(
œ°a
+
n
 >
œ°r
) {

252 i‡(
	`sbrk
(2000) == -1) {

253 
	`wrôe
(2, "Out of space\n", 14);

254 
	`exô
(1);

256 
œ°r
 =+ 2000;

258 
p
 = 
œ°a
;

259 
œ°a
 =+ 
n
;

260 (
p
);

261 
	}
}

263 
	$˛óºeg
()

265 
i
;

267 
i
=0; i<2*
NREG
; i++)

268 
ªgs
[
i
][0] = '\0';

269 
c⁄loc
[0] = 0;

270 
c˛oc
[0] = 0;

271 
	}
}

273 
	$ßvîeg
(
ai
, 
as
)

274 *
as
;

276 *
p
, *
s
, *
•
;

278 
•
 = 
p
 = 
ªgs
[
ai
];

279 
s
 = 
as
;

280 i‡(
	`sour˚
(
s
))

282 *
p
++ = *
s
) {

283 i‡(
s
[0]=='(' && s[1]=='r' && s[2]<'5') {

284 *
•
 = 0;

287 i‡(*
s
++ == ',')

290 *--
p
 = '\0';

291 
	}
}

293 
	$de°
(
as
, 
Êt
)

294 *
as
;

296 *
s
;

297 
i
;

299 
s
 = 
as
;

300 i‡((
i
 = 
	`i§eg
(
s
)) >= 0)

301 
ªgs
[
i
+
Êt
][0] = 0;

302 (
i
 = 
	`födønd
(
s
, 
Êt
)) >= 0)

303 
ªgs
[
i
][0] = 0;

304 *
s
) {

305 i‡((*
s
=='(' && (*(s+1)!='r' || *(s+2)!='5')) || *s++=='*') {

306 
i
=
Êt
; i<Êt+
NREG
; i++) {

307 i‡(
ªgs
[
i
][0] != '$')

308 
ªgs
[
i
][0] = 0;

309 
c⁄loc
[0] = 0;

314 
	}
}

316 
	$sög›
(
≠
)

317 
node
 *
≠
;

319 *
p1
, *
p2
;

321 
p1
 = 
≠
->
code
;

322 
p2
 = 
ªgs
[
RT1
];

323 *
p2
++ = *
p1
++);

324 
ªgs
[
RT2
][0] = 0;

325 
	}
}

328 
	$duÆ›
(
≠
)

329 
node
 *
≠
;

331 *
p1
, *
p2
;

332 
node
 *
p
;

334 
p
 = 
≠
;

335 
p1
 = 
p
->
code
;

336 
p2
 = 
ªgs
[
RT1
];

337 *
p1
 && *p1!=',')

338 *
p2
++ = *
p1
++;

339 *
p2
++ = 0;

340 
p2
 = 
ªgs
[
RT2
];

341 *
p2
 = 0;

342 i‡(*
p1
++ !=',')

344 *
p2
++ = *
p1
++);

345 
	}
}

347 
	$födønd
(
as
, 
Êt
)

348 *
as
;

350 
i
;

351 
i
 = 
Êt
; i<
NREG
+flt; i++) {

352 i‡(
	`equ°r
(
ªgs
[
i
], 
as
))

353 (
i
);

356 
	}
}

358 
	$i§eg
(
as
)

359 *
as
;

361 *
s
;

363 
s
 = 
as
;

364 i‡(
s
[0]=='r' && s[1]>='0' && s[1]<='4' && s[2]==0)

365 (
s
[1]-'0');

367 
	}
}

369 
	$check
()

371 
node
 *
p
, *
Õ
;

373 
Õ
 = &
fú°
;

374 
p
=
fú°
.
f‹w
;Ö!=0;Ö =Ö->forw) {

375 i‡(
p
->
back
 !
Õ
)

376 
	`ab‹t
();

377 
Õ
 = 
p
;

379 
	}
}

381 
	$sour˚
(
≠
)

382 *
≠
;

384 *
p1
, *
p2
;

386 
p1
 = 
≠
;

387 
p2
 = 
p1
;

388 i‡(*
p1
==0)

390 *
p2
++);

391 i‡(*
p1
=='-' && *(p1+1)=='('

392 || *
p1
=='*' && *(p1+1)=='-' && *(p1+2)=='('

393 || *(
p2
-2)=='+') {

394 *
p1
 && *p1++!='r');

395 i‡(*
p1
>='0' && *p1<='4')

396 
ªgs
[*
p1
 - '0'][0] = 0;

400 
	}
}

402 
	$ª∂addr
(
p
, 
f
, 
Êt
)

403 
node
 *
p
;

405 
r
;

406 
r1
;

407 *
p1
, *
p2
;

408 
π1
[50], 
π2
[50];

410 i‡(
f
)

411 
r1
 = 
	`födønd
(
ªgs
[
RT2
], 
Êt
);

413 
r1
 = -1;

414 
r
 = 
	`födønd
(
ªgs
[
RT1
], 
Êt
);

415 i‡(
r1
 >
NREG
)

416 
r1
 =- 
NREG
;

417 i‡(
r
 >
NREG
)

418 
r
 =- 
NREG
;

419 i‡(
r
>=0 || 
r1
>=0) {

420 
p2
 = 
ªgs
[
RT1
];

421 
p1
 = 
π1
; *p1++ = *
p2
++;);

422 i‡(
ªgs
[
RT2
][0]) {

423 
p1
 = 
π2
;

424 *
p1
++ = ',';

425 
p2
 = 
ªgs
[
RT2
]; *
p1
++ = *p2++;);

427 
π2
[0] = 0;

428 i‡(
r
>=0) {

429 
π1
[0] = 'r';

430 
π1
[1] = 
r
 + '0';

431 
π1
[2] = 0;

432 
nßddr
++;

434 i‡(
r1
>=0) {

435 
π2
[1] = 'r';

436 
π2
[2] = 
r1
 + '0';

437 
π2
[3] = 0;

438 
nßddr
++;

440 
p
->
code
 = 
	`c›y
(
π1
, 
π2
);

442 
	}
}

444 
	$moved©
()

446 
node
 *
p1
, *
p2
;

447 
node
 *
p3
;

448 
£g
;

449 
node
 
d©a
;

450 
node
 *
d©p
;

452 i‡(
fú°
.
f‹w
 == 0)

454 
d©p
 = &
d©a
;

455 
p1
 = 
fú°
.
f‹w
;Ö1!=0;Ö1 =Ö1->forw) {

456 i‡(
p1
->
›
 =
DATA
) {

457 
p2
 = 
p1
->
f‹w
;

458 
p2
 &&Ö2->
›
!=
TEXT
)

459 
p2
 =Ö2->
f‹w
;

460 i‡(
p2
==0)

462 
p3
 = 
p1
->
back
;

463 
p1
->
back
->
f‹w
 = 
p2
->forw;

464 
p2
->
f‹w
->
back
 = 
p3
;

465 
p2
->
f‹w
 = 0;

466 
d©p
->
f‹w
 = 
p1
;

467 
p1
->
back
 = 
d©p
;

468 
p1
 = 
p3
;

469 
d©p
 = 
p2
;

472 i‡(
d©a
.
f‹w
) {

473 
d©p
->
f‹w
 = 
fú°
.forw;

474 
fú°
.
f‹w
->
back
 = 
d©p
;

475 
d©a
.
f‹w
->
back
 = &
fú°
;

476 
fú°
.
f‹w
 = 
d©a
.forw;

478 
£g
 = -1;

479 
p1
 = 
fú°
.
f‹w
;Ö1!=0;Ö1 =Ö1->forw) {

480 i‡(
p1
->
›
==
TEXT
||p1->›==
DATA
||p1->›==
BSS
) {

481 i‡(
p1
->
›
 =
£g
 ||Ö1->
f‹w
&&p1->forw->op==seg) {

482 
p1
->
back
->
f‹w
 =Ö1->forw;

483 
p1
->
f‹w
->
back
 =Ö1->back;

484 
p1
 =Ö1->
back
;

487 
£g
 = 
p1
->
›
;

490 
	}
}

492 
	$ªdunbr
(
≠
)

493 
node
 *
≠
;

495 
node
 *
p
, *
p1
;

496 *
≠1
;

497 *
≠2
;

499 i‡((
p1
 = 
p
->
ªf
) == 0)

501 
p1
 = 
	`n⁄œb
(p1);

502 i‡(
p1
->
›
==
TST
) {

503 
	`sög›
(
p1
);

504 
	`ßvîeg
(
RT2
, "$0");

505 } i‡(
p1
->
›
==
CMP
)

506 
	`duÆ›
(
p1
);

509 i‡(
p1
->
f‹w
->
›
!=
CBR
)

511 
≠1
 = 
	`födc⁄
(
RT1
);

512 
≠2
 = 
	`födc⁄
(
RT2
);

513 
p1
 =Ö1->
f‹w
;

514 i‡(
	`com∑ª
(
p1
->
sub›
, 
≠1
, 
≠2
)) {

515 
ƒedunj
++;

516 
nch™ge
++;

517 
	`de¸ef
(
p
->
ªf
);

518 
p
->
ªf
 = 
p1
->ref;

519 
p
->
œbno
 = 
p1
->labno;

520 
p
->
ªf
->
ªfc
++;

522 
	}
}

524 
	$födc⁄
(
i
)

526 *
p
;

527 
r
;

529 
p
 = 
ªgs
[
i
];

530 i‡(*
p
=='$')

531 (
p
);

532 i‡((
r
 = 
	`i§eg
(
p
)) >= 0)

533 (
ªgs
[
r
]);

534 i‡(
	`equ°r
(
p
, 
c⁄loc
))

535 (
c⁄vÆ
);

536 (
p
);

537 
	}
}

539 
	$com∑ª
(
›
, 
a˝1
, 
a˝2
)

540 *
a˝1
, *
a˝2
;

542 *
˝1
, *
˝2
;

543 
n1
;

544 
n2
;

545 °ru˘ { 
i
;};

547 
˝1
 = 
a˝1
;

548 
˝2
 = 
a˝2
;

549 i‡(*
˝1
++ !'$' || *
˝2
++ != '$')

551 
n1
 = 0;

552 *
˝2
 >= '0' && *cp2 <= '7') {

553 
n1
 =<< 3;

554 
n1
 =+ *
˝2
++ - '0';

556 
n2
 = 
n1
;

557 
n1
 = 0;

558 *
˝1
 >= '0' && *cp1 <= '7') {

559 
n1
 =<< 3;

560 
n1
 =+ *
˝1
++ - '0';

562 i‡(*
˝1
=='+')

563 
˝1
++;

564 i‡(*
˝2
=='+')

565 
˝2
++;

567 i‡(*
˝1
++ !*
˝2
)

569 } *
˝2
++);

570 
˝1
 = 
n1
;

571 
˝2
 = 
n2
;

572 
›
) {

574 
JEQ
:

575 (
˝1
 =
˝2
);

576 
JNE
:

577 (
˝1
 !
˝2
);

578 
JLE
:

579 (
˝1
.
i
 <
˝2
.i);

580 
JGE
:

581 (
˝1
.
i
 >
˝2
.i);

582 
JLT
:

583 (
˝1
.
i
 < 
˝2
.i);

584 
JGT
:

585 (
˝1
.
i
 > 
˝2
.i);

586 
JLO
:

587 (
˝1
 < 
˝2
);

588 
JHI
:

589 (
˝1
 > 
˝2
);

590 
JLOS
:

591 (
˝1
 <
˝2
);

592 
JHIS
:

593 (
˝1
 >
˝2
);

596 
	}
}

598 
	$£tc⁄
(
¨1
, 
¨2
)

599 *
¨1
, *
¨2
;

601 *
˛
, *
cv
, *
p
;

603 
˛
 = 
¨2
;

604 
cv
 = 
¨1
;

605 i‡(*
cv
 != '$')

607 i‡(!
	`«tuøl
(
˛
))

609 
p
 = 
c⁄loc
;

610 *
p
++ = *
˛
++);

611 
p
 = 
c⁄vÆ
;

612 *
p
++ = *
cv
++);

613 
	}
}

615 
	$equ°r
(
≠1
, 
≠2
)

616 *
≠1
, *
≠2
;

618 *
p1
, *
p2
;

620 
p1
 = 
≠1
;

621 
p2
 = 
≠2
;

623 i‡(*
p1
++ !*
p2
)

625 } *
p2
++);

627 
	}
}

629 
	$£tcc
(
≠
)

630 *
≠
;

632 *
p
, *
p1
;

634 
p
 = 
≠
;

635 i‡(!
	`«tuøl
(
p
)) {

636 
c˛oc
[0] = 0;

639 
p1
 = 
c˛oc
;

640 *
p1
++ = *
p
++);

641 
	}
}

643 
	$«tuøl
(
≠
)

644 *
≠
;

646 *
p
;

648 
p
 = 
≠
;

649 i‡(*
p
=='*' || *p=='(' || *p=='-'&&*(p+1)=='(')

651 *
p
++);

652 
p
--;

653 i‡(*--
p
 == '+' || *p ==')' && *--p != '5')

656 
	}
}

	@usr/c/c2h.c

6 
	#JBR
 1

	)

7 
	#CBR
 2

	)

8 
	#JMP
 3

	)

9 
	#LABEL
 4

	)

10 
	#DLABEL
 5

	)

11 
	#EROU
 7

	)

12 
	#JSW
 9

	)

13 
	#MOV
 10

	)

14 
	#CLR
 11

	)

15 
	#COM
 12

	)

16 
	#INC
 13

	)

17 
	#DEC
 14

	)

18 
	#NEG
 15

	)

19 
	#TST
 16

	)

20 
	#ASR
 17

	)

21 
	#ASL
 18

	)

22 
	#SXT
 19

	)

23 
	#CMP
 20

	)

24 
	#ADD
 21

	)

25 
	#SUB
 22

	)

26 
	#BIT
 23

	)

27 
	#BIC
 24

	)

28 
	#BIS
 25

	)

29 
	#MUL
 26

	)

30 
	#DIV
 27

	)

31 
	#ASH
 28

	)

32 
	#XOR
 29

	)

33 
	#TEXT
 30

	)

34 
	#DATA
 31

	)

35 
	#BSS
 32

	)

36 
	#EVEN
 33

	)

37 
	#MOVF
 34

	)

38 
	#MOVOF
 35

	)

39 
	#MOVFO
 36

	)

40 
	#ADDF
 37

	)

41 
	#SUBF
 38

	)

42 
	#DIVF
 39

	)

43 
	#MULF
 40

	)

44 
	#CLRF
 41

	)

45 
	#CMPF
 42

	)

46 
	#NEGF
 43

	)

47 
	#TSTF
 44

	)

48 
	#CFCC
 45

	)

49 
	#SOB
 46

	)

50 
	#JSR
 47

	)

51 
	#END
 48

	)

53 
	#JEQ
 0

	)

54 
	#JNE
 1

	)

55 
	#JLE
 2

	)

56 
	#JGE
 3

	)

57 
	#JLT
 4

	)

58 
	#JGT
 5

	)

59 
	#JLO
 6

	)

60 
	#JHI
 7

	)

61 
	#JLOS
 8

	)

62 
	#JHIS
 9

	)

64 
	#BYTE
 100

	)

66 
	snode
 {

67 
	m›
;

68 
	msub›
;

69 
node
 *
	mf‹w
;

70 
node
 *
	mback
;

71 
node
 *
	mªf
;

72 
	mœbno
;

73 *
	mcode
;

74 
	mªfc
;

78 
	mcomb›
;

81 
	s›èb
 {

82 *
	m›°rög
;

83 
	m›code
;

84 } 
	g›èb
[];

86 
	glöe
[512];

87 
node
 
	gfú°
;

88 *
	gcuæp
;

89 
	gnbrbr
;

90 
	gnßddr
;

91 
	gªdunm
;

92 
	gü·br
;

93 
	gnjp1
;

94 
	gƒœb
;

95 
	gnxjump
;

96 
	gncmŸ
;

97 
	gƒevbr
;

98 
	glo›iv
;

99 
	gƒedunj
;

100 
	gnskù
;

101 
	gncomj
;

102 
	gnsob
;

103 
	gƒt°
;

105 
	gnch™ge
;

106 
	gi¢
;

107 
	gdebug
;

108 *
	gœ°a
;

109 *
	gœ°r
;

110 *
	gfú°r
;

111 
	gªvbr
[];

112 
	gªgs
[12][20];

113 
	gc⁄loc
[20];

114 
	gc⁄vÆ
[20];

115 
	gc˛oc
[20];

117 
	#RT1
 10

	)

118 
	#RT2
 11

	)

119 
	#FREG
 5

	)

120 
	#NREG
 5

	)

121 
	#LABHS
 127

	)

122 
	#OPHS
 57

	)

124 
›èb
 *
	g›hash
[
OPHS
];

126 °ru˘ { 
	mlbyã
; };

	@usr/c/cvopt.c

1 
	gnoÊﬂt
;

2 
	g≥ekc
;

3 
	gobuf
[259];

4 
	gèbÊg
;

5 
	gœbno
 1;

7 
	$maö
(
¨gc
, 
¨gv
)

8 **
¨gv
;

41 autÿ
c
,
¢lÊg
,
∆Êg
,
t
,
smode
,
m
,
ssmode
;

42 
fö
;

44 
smode
 = 
∆Êg
 = 
¢lÊg
 = 
ssmode
 = 0;

45 i‡(
¨gc
>1)

46 i‡((
fö
 = 
	`›í
(
¨gv
[1], 0)) < 0) {

47 
	`putch¨
('?\n');

50 
obuf
[0] = 1;

51 i‡(
¨gc
>2)

52 i‡((
obuf
[0] = 
	`¸ót
(
¨gv
[2], 0666)) < 0) {

53 
	`putch¨
('?\n');

56 
lo›
:

57 
c
 = 
	`gëc
();

58 i‡(
c
!='\n' && c!='\t'Ë
∆Êg
 = 0;

59 i‡(
ssmode
!=0 && 
c
!='%') {

60 
ssmode
 = 0;

61 
	`¥ötf
(".d©a\nL%d:<", 
œbno
++);

63 
c
) {

66 
	`¥ötf
(".text; 0\n");

67 
	`fÊush
(
obuf
);

71 i‡(!
smode
)

72 
	`¥ötf
("=.+2; 0"); 

73 
	`putch¨
(':');

74 
lo›
;

77 i‡((
c
=
	`gëc
())=='1' || c=='2') {

78 
	`putch¨
(
c
+'A'-'1');

79 
lo›
;

81 
	`putch¨
('O');

82 
≥ekc
 = 
c
;

83 
lo›
;

86 
	`gëc
()) {

89 
	`putch¨
('C');

90 
lo›
;

93 
	`putch¨
('D');

94 
lo›
;

97 
	`putch¨
('L');

98 
lo›
;

101 
	`putch¨
('P');

102 
lo›
;

104 
	`putch¨
('?');

105 
lo›
;

108 
	`putch¨
(
	`gëc
()+'E'-'1');

109 
lo›
;

112 
	`putch¨
('G');

113 
subåe
;

116 i‡((
c
=
	`gëc
()) == '1')

117 
	`putch¨
('J'); {

118 
	`putch¨
('I');

119 
≥ekc
 = 
c
;

121 
lo›
;

124 
	`putch¨
('H');

125 
subåe
;

128 
	`putch¨
('M');

129 
lo›
;

132 
	`putch¨
('V');

133 
¢lÊg
++;

134 
lo›
;

137 
	`putch¨
('K');

138 
subåe
:

139 
¢lÊg
 = 1;

140 
t
 = 'A';

141 
l1
:

142 
c
=
	`gëc
()) {

145 
t
++;

146 
l1
;

149 
t
 =+ 2;

150 
l1
;

153 
t
 =+ 4;

154 
l1
;

157 
t
 =+ 8;

158 
l1
;

161 
t
 =+ 16;

162 
l1
;

164 
≥ekc
 = 
c
;

165 
	`putch¨
(
t
);

166 
lo›
;

169 if(
	`gëc
()=='1')

170 
	`putch¨
('#'); 

171 
	`putch¨
('"');

172 
lo›
;

175 i‡(
smode
)

176 
	`¥ötf
(".text;");

177 
lo›1
:

178 
c
=
	`gëc
()) {

181 
m
 = 16;

182 
t
 = 
	`Êag
();

183 
pf
;

186 
	`putch¨
(';');

187 
lo›1
;

190 
m
 = 12;

191 
t
 = 
	`Êag
();

192 
pf
;

194 
m
 = 4;

195 
t
 = 
	`Êag
();

196 
pf
;

199 
m
 = 9;

200 
t
 = 
	`Êag
();

201 
pf
;

204 
m
 = 5;

205 
t
 = 
	`Êag
();

206 
pf
;

209 
t
 = 0;

210 
m
 = 8;

211 
pf
;

214 
t
 = 
	`Êag
();

215 
m
 = 20;

216 
pf
;

219 
t
 = 
	`Êag
();

220 
m
 = 63;

221 
pf
:

222 i‡((
c
=
	`gëc
())=='*')

223 
m
 =+ 0100; 

224 
≥ekc
 = 
c
;

225 
	`¥ötf
(".byã %o,%o", 
m
, 
t
);

226 
lo›1
;

229 
	`¥ötf
("\nL%d\n", 
œbno
);

230 
ssmode
 = 1;

231 
∆Êg
 = 1;

232 
smode
 = 1;

233 
lo›
;

235 
	`putch¨
(
c
);

236 
lo›1
;

239 i‡(
∆Êg
) {

240 
∆Êg
 = 0;

241 
lo›
;

243 i‡(
smode
) {

244 
èbÊg
++;

245 
lo›
;

247 
	`putch¨
('\t');

248 
lo›
;

251 i‡(!
smode
) {

252 
	`putch¨
('\n');

253 
lo›
;

255 i‡(
∆Êg
) {

256 
∆Êg
 = 0;

257 
	`¥ötf
("\\0>\n.text\n");

258 
smode
 = 0;

259 
lo›
;

261 i‡(!
¢lÊg
)

262 
	`¥ötf
("\\n");

263 
¢lÊg
 = 0;

264 
	`¥ötf
(">\n<");

265 
∆Êg
 = 1;

266 
lo›
;

271 
¢lÊg
++;

273 
	`putch¨
(
c
);

274 
lo›
;

275 
	}
}

277 
	$gëc
() {

278 autÿ
t
, 
if˙t
;

280 
if˙t
 = 0;

281 
gc
:

282 i‡(
≥ekc
) {

283 
t
 = 
≥ekc
;

284 
≥ekc
 = 0;

286 
t
 = 
	`gëch¨
();

287 i‡(
t
==0)

289 i‡(
t
=='{') {

290 
if˙t
++;

291 
t
 = 
	`gëch¨
();

293 i‡(
t
=='}') {

294 
t
 = 
	`gëc
();

295 i‡(--
if˙t
==0)

296 i‡(
t
=='\n')

297 
t
 = 
	`gëc
();

299 i‡(
if˙t
 && 
noÊﬂt
)

300 
gc
;

301 (
t
);

302 
	}
}

304 
	$Êag
() {

305 
c
, 
f
;

307 
f
 = 0;

308 
l1
:

309 
c
=
	`gëc
()) {

312 
f
 = 1;

313 
l1
;

316 
f
 = 2;

317 
l1
;

320 
f
 = 3;

321 
l1
;

324 
f
 = 4;

325 
l1
;

328 
f
 = 5;

329 
l1
;

332 
f
 = 6;

333 
l1
;

336 
f
 =+ 16;

337 
l1
;

339 
≥ekc
 = 
c
;

340 (
f
);

341 
	}
}

343 
	$putch¨
(
c
)

345 i‡(
èbÊg
) {

346 
èbÊg
 = 0;

347 
	`¥ötf
(">;.byã %o;<", 
c
+0200);

349 
	`putc
(
c
, 
obuf
);

350 
	}
}

	@usr/source/s1/ac.c

5 
	#TSIZE
 30

	)

6 
	#USIZE
 200

	)

9 
	m«me
[8];

10 
	mây
;

11 
	mfûl1
;

12 
	mtime
;

13 
	mfûl2
;

14 } 
	gibuf
;

16 
	subuf
 {

17 
	m«me
[8];

18 
	mutime
;

19 } 
	gubuf
[
USIZE
];

21 
	stbuf
 {

22 
ubuf
 *
	mu£Ω
;

23 
	mâime
;

24 } 
	gtbuf
[
TSIZE
];

26 *
	gwtmp
;

27 
	gpÊag
, 
	gbyday
;

28 
	gdtime
;

29 
	gmidnight
;

30 
	gœ°ime
;

31 
	gday
 1440.;

32 
	gpcou¡
;

33 **
	gµå
;

35 
	gm⁄èb
[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,

38 *
	gm⁄asc
[] {

53 
	$maö
(
¨gc
, 
¨gv
)

54 **
¨gv
;

56 
c
, 
Ê
;

57 
i
;

58 *
ù
;

59 
fö
;

60 
f
;

62 
wtmp
 = "/usr/adm/wtmp";

63 --
¨gc
 > 0 && **++
¨gv
 == '-')

64 *++*
¨gv
) {

66 
byday
++;

70 i‡(--
¨gc
>0)

71 
wtmp
 = *++
¨gv
;

75 
pÊag
++;

78 
pcou¡
 = 
¨gc
;

79 
µå
 = 
¨gv
;

80 i‡(
	`f›í
(
wtmp
, &
fö
) < 0) {

81 
	`¥ötf
("Nÿ%s\n", 
wtmp
);

85 
ù
 = &
ibuf
;

86 
i
=0; i<16; i++) {

87 i‡((
c
=
	`gëc
(&
fö
)) < 0)

88 
brk
;

89 *
ù
++ = 
c
;

91 
Ê
 = 0;

92 
i
=0; i<8; i++) {

93 
c
 = 
ibuf
.
«me
[
i
];

94 i‡('0'<=
c
&&c<='9'||'a'<=c&&c<='z'||'A'<=c&&c<='Z') {

95 i‡(
Ê
)

96 
skù
;

99 i‡(
c
==' ' || c=='\0') {

100 
Ê
++;

101 
ibuf
.
«me
[
i
] = '\0';

103 
skù
;

105 
	`lo›
();

106 
skù
:;

108 
brk
:

109 
ibuf
.
«me
[0] = '\0';

110 
ibuf
.
ây
 = '~';

111 
	`time
(&
ibuf
.
time
);

112 
	`lo›
();

113 
	`¥öt
();

114 
	}
}

116 
	$lo›
()

118 
	`…od
();

119 
i
;

120 
tbuf
 *
ç
;

121 
ubuf
 *
up
;

123 i‡(
ibuf
.
fûl1
||ibuf.
fûl2
)

125 
ibuf
.
time
 = 
	`…od
(&ibuf.time)/60.;

126 if(
ibuf
.
ây
 == '|') {

127 
dtime
 = 
ibuf
.
time
;

130 if(
ibuf
.
ây
 == '}') {

131 if(
dtime
 == 0.)

133 
ç
 = 
tbuf
;Å∞< &tbuf[
TSIZE
];Åp++)

134 
ç
->
âime
 =+ 
ibuf
.
time
-
dtime
;

135 
dtime
 = 0.;

138 i‡(
œ°ime
>
ibuf
.
time
 ||Üa°ime+(1.5*
day
)<ibuf.time)

139 
midnight
 = 0.0;

140 i‡(
midnight
==0.0)

141 
	`√wday
();

142 
œ°ime
 = 
ibuf
.
time
;

143 i‡(
byday
 && 
ibuf
.
time
 > 
midnight
) {

144 
	`u∑Œ
(1);

145 
	`¥öt
();

146 
	`√wday
();

147 
up
=
ubuf
; u∞< &ubuf[
USIZE
]; up++)

148 
up
->
utime
 = 0.0;

150 i‡(
ibuf
.
ây
 == '~') {

151 
ibuf
.
«me
[0] = '\0';

152 
	`u∑Œ
(0);

155 i‡((
i
 = 
ibuf
.
ây
) >= 'a')

156 
i
 =- 'a' - '9';

157 
i
 =- '0';

158 i‡(
i
<0 || i>=
TSIZE
)

159 
i
 = 
TSIZE
-1;

160 
ç
 = &
tbuf
[
i
];

161 
	`upd©e
(
ç
, 0);

162 
	}
}

164 
	$¥öt
()

166 
i
;

167 
âime
, 
t
;

169 
âime
 = 0.0;

170 
i
=0; i<
USIZE
; i++) {

171 if(!
	`am⁄g
(
i
))

173 
t
 = 
ubuf
[
i
].
utime
;

174 i‡(
t
>0.0)

175 
âime
 =+ 
t
;

176 i‡(
pÊag
 && 
ubuf
[
i
].
utime
 > 0.0) {

177 
	`¥ötf
("\t%-8.8s%6.2f\n",

178 
ubuf
[
i
].
«me
, ubuf[i].
utime
/60.);

181 i‡(
âime
 > 0.0) {

182 
	`pd©e
();

183 
	`¥ötf
("\âŸÆ%9.2f\n", 
âime
/60.);

185 
	}
}

187 
	$u∑Œ
(
f
)

189 
tbuf
 *
ç
;

191 
ç
=
tbuf
;Å∞< &tbuf[
TSIZE
];Åp++)

192 
	`upd©e
(
ç
, 
f
);

193 
	}
}

195 
	$upd©e
(
ç
, 
f
)

196 
tbuf
 *
ç
;

198 
i
, 
j
;

199 
ubuf
 *
up
;

200 
t
, 
t1
;

202 i‡(
f
)

203 
t
 = 
midnight
;

205 
t
 = 
ibuf
.
time
;

206 i‡(
ç
->
u£Ω
) {

207 
t1
 = 
t
 - 
ç
->
âime
;

208 i‡(
t1
>0.0 &&Å1 < 1.5*
day
)

209 
ç
->
u£Ω
->
utime
 =+ 
t1
;

211 
ç
->
âime
 = 
t
;

212 i‡(
f
)

214 i‡(
ibuf
.
«me
[0]=='\0') {

215 
ç
->
u£Ω
 = 0;

218 
up
=
ubuf
; u∞< &ubuf[
USIZE
]; up++) {

219 i‡(
up
->
«me
[0] == '\0')

221 
j
=0; j<8 && 
up
->
«me
[j]==
ibuf
.name[j]; j++);

222 i‡(
j
>=8)

225 
j
=0; j<8; j++)

226 
up
->
«me
[
j
] = 
ibuf
.name[j];

227 
ç
->
u£Ω
 = 
up
;

228 
	}
}

230 
	$am⁄g
(
i
)

232 
j
, 
k
;

233 *
p
;

235 i‡(
pcou¡
==0)

237 
j
=0; j<
pcou¡
; j++) {

238 
p
 = 
µå
[
j
];

239 
k
=0; k<8; k++) {

240 i‡(*
p
 =
ubuf
[
i
].
«me
[
k
]) {

241 i‡(*
p
++ == '\0')

248 
	}
}

250 
	$√wday
()

252 if(
midnight
 == 0.)

253 
midnight
 = 240.;

254 
midnight
 <
ibuf
.
time
)

255 
midnight
 =+ 
day
;

256 
	}
}

258 
	$pd©e
()

260 
days
, 
m⁄s
, 
yrs
;

261 
yór
, 
tim
;

263 i‡(
byday
==0)

265 
yrs
 = 2;

266 
tim
 = 0.0;

268 
yór
 = 365. * 
day
;

269 if(
yrs
%4 == 0)

270 
yór
 =+ 
day
;

271 if(
tim
+
yór
 > 
midnight
)

273 
yrs
++;

274 
tim
 =+ 
yór
;

276 
days
 = (
midnight
-
tim
-720.)/
day
;

277 
m⁄èb
[1] = 28;

278 if(
yrs
%4 == 0)

279 
m⁄èb
[1]++;

280 
m⁄s
=0; 
m⁄èb
[m⁄s]<=
days
; mons++)

281 
days
 =- 
m⁄èb
[
m⁄s
];

282 
m⁄s
 =% 12;

283 
	`¥ötf
("%†%2d", 
m⁄asc
[
m⁄s
], 
days
+1);

284 
	}
}

	@usr/source/s1/cal.c

1 
	gdayw
[]

5 *
	gsm⁄
[]

11 
	g°rög
[432];

12 
	$maö
(
¨gc
, 
¨gv
)

13 *
¨gv
[];

15 
y
, 
i
, 
j
;

16 
m
;

18 if(
¨gc
 < 2) {

19 
	`¥ötf
("usage: cal [month] year\n");

20 
	`exô
();

22 if(
¨gc
 == 2)

29 
m
 = 
	`numbî
(
¨gv
[1]);

30 if(
m
<1 || m>12)

31 
bad¨g
;

32 
y
 = 
	`numbî
(
¨gv
[2]);

33 if(
y
<1 || y>9999)

34 
bad¨g
;

35 
	`¥ötf
(" %†%l\n", 
sm⁄
[
m
-1], 
y
);

36 
	`¥ötf
("%s\n", 
dayw
);

37 
	`ˇl
(
m
, 
y
, 
°rög
, 24);

38 
i
=0; i<6*24; i=+24)

39 
	`p°r
(
°rög
+
i
, 24);

40 
	`exô
();

47 
y
 = 
	`numbî
(
¨gv
[1]);

48 if(
y
<1 || y>9999)

49 
bad¨g
;

50 
	`¥ötf
("\n\n\n");

51 
	`¥ötf
(" %l\n", 
y
);

52 
	`¥ötf
("\n");

53 
i
=0; i<12; i=+3) {

54 
j
=0; j<6*72; j++)

55 
°rög
[
j
] = '\0';

56 
	`¥ötf
(" %s", 
sm⁄
[
i
]);

57 
	`¥ötf
(" %s", 
sm⁄
[
i
+1]);

58 
	`¥ötf
(" %s\n", 
sm⁄
[
i
+2]);

59 
	`¥ötf
("%† %† %s\n", 
dayw
, dayw, dayw);

60 
	`ˇl
(
i
+1, 
y
, 
°rög
, 72);

61 
	`ˇl
(
i
+2, 
y
, 
°rög
+23, 72);

62 
	`ˇl
(
i
+3, 
y
, 
°rög
+46, 72);

63 
j
=0; j<6*72; j=+72)

64 
	`p°r
(
°rög
+
j
, 72);

66 
	`¥ötf
("\n\n\n");

67 
	`exô
();

69 
bad¨g
:

70 
	`¥ötf
("Badárgument\n");

71 
	}
}

73 
	$numbî
(
°r
)

74 *
°r
;

76 
n
, 
c
;

77 *
s
;

79 
n
 = 0;

80 
s
 = 
°r
;

81 
c
 = *
s
++) {

82 if(
c
<'0' || c>'9')

84 
n
 =Ç*10 + 
c
-'0';

86 (
n
);

87 
	}
}

89 
	$p°r
(
°r
, 
n
)

90 *
°r
;

92 
i
;

93 *
s
;

95 
s
 = 
°r
;

96 
i
 = 
n
;

97 
i
--)

98 if(*
s
++ == '\0')

99 
s
[-1] = ' ';

100 
i
 = 
n
+1;

101 
i
--)

102 if(*--
s
 != ' ')

104 
s
[1] = '\0';

105 
	`¥ötf
("%s\n", 
°r
);

106 
	}
}

108 
	gm⁄
[]

116 
	$ˇl
(
m
, 
y
, 
p
, 
w
)

117 *
p
;

119 
d
, 
i
;

120 *
s
;

122 
s
 = 
p
;

123 
d
 = 
	`j™1
(
y
);

124 
m⁄
[2] = 29;

125 
m⁄
[9] = 30;

127 (
	`j™1
(
y
+1)+7-
d
)%7) {

133 
m⁄
[2] = 28;

140 
m⁄
[9] = 19;

149 
i
=1; i<
m
; i++)

150 
d
 =+ 
m⁄
[
i
];

151 
d
 =% 7;

152 
s
 =+ 3*
d
;

153 
i
=1; i<=
m⁄
[
m
]; i++) {

154 if(
i
==3 & 
m⁄
[
m
]==19) {

155 
i
 =+ 11;

156 
m⁄
[
m
] =+ 11;

158 if(
i
 > 9)

159 *
s
 = 
i
/10+'0';

160 
s
++;

161 *
s
++ = 
i
%10+'0';

162 
s
++;

163 if(++
d
 == 7) {

164 
d
 = 0;

165 
s
 = 
p
+
w
;

166 
p
 = 
s
;

169 
	}
}

176 
	$j™1
(
yr
)

178 
y
, 
d
;

185 
y
 = 
yr
;

186 
d
 = 4+
y
+(y+3)/4;

194 if(
y
 > 1800) {

195 
d
 =- (
y
-1701)/100;

196 
d
 =+ (
y
-1601)/400;

203 if(
y
 > 1752)

204 
d
 =+ 3;

206 (
d
%7);

207 
	}
}

	@usr/source/s1/cc.c

3 *
	gtmp0
;

4 *
	gtmp1
;

5 *
	gtmp2
;

6 *
	gtmp3
;

7 *
	gtmp4
;

8 *
	gtmp5
;

9 
	gts
[1000];

10 *
t•
 
	gts
;

11 *
	gav
[50];

12 *
	g˛i°
[50];

13 *
	gŒi°
[50];

14 
	gö°rög
;

15 
	gpÊag
;

16 
	gsÊag
;

17 
	gcÊag
;

18 
	goÊag
;

19 
	g¥oÊag
;

20 *
	gibuf
;

21 *
	gibuf1
;

22 *
	gibuf2
;

23 *
	gobuf
;

24 *
	gÕ
;

25 *
	glöe
;

26 
	glöío
;

27 
	gexÁû
;

28 
	ssymèb
 {

29 
	m«me
[8];

30 *
	mvÆue
;

31 } *
	gsymèb
;

32 
	gsymsiz
 200;

33 
symèb
 *
	gdeÊoc
;

34 
symèb
 *
	gö˛oc
;

35 *
	g°rögbuf
;

36 *
	g∑ss0
 "/lib/c0";

37 *
	g∑ss1
 "/lib/c1";

38 *
	g∑ss2
 "/lib/c2";

39 *
	g¥ef
 "/lib/crt0.o";

41 
	$maö
(
¨gc
, 
¨gv
)

42 *
¨gv
[]; {

43 *
t
;

44 
nc
, 
∆
, 
i
, 
j
, 
c
, 
f20
, 
nxo
;

45 
	`dexô
();

47 
i
 = 
nc
 = 
∆
 = 
f20
 = 
nxo
 = 0;

48 ++
i
 < 
¨gc
) {

49 if(*
¨gv
[
i
] == '-')

50 
¨gv
[
i
][1]) {

52 
∑sß
;

54 
sÊag
++;

55 
cÊag
++;

58 
oÊag
++;

61 
¥oÊag
++;

62 
¥ef
 = "/lib/mcrt0.o";

65 
pÊag
++;

67 
cÊag
++;

71 
¥ef
 = "/lib/fcrt0.o";

72 
∑ss0
 = "/lib/fc0";

76 if(
¨gv
[
i
][2] == '\0')

77 
¥ef
 = "/lib/crt2.o";

79 
¥ef
 = "/lib/crt20.o";

80 
f20
 = 1;

84 i‡(
¨gv
[
i
][2]=='0')

85 
∑ss0
 = "/usr/c/c0";

86 i‡(
¨gv
[
i
][2]=='1')

87 
∑ss1
 = "/usr/c/c1";

88 i‡(
¨gv
[
i
][2]=='2')

89 
∑ss2
 = "/usr/c/c2";

93 
∑sß
:

94 
t
 = 
¨gv
[
i
];

95 if(
	`gësuf
(
t
)=='c') {

96 
˛i°
[
nc
++] = 
t
;

97 
t
 = 
	`£tsuf
(t, 'o');

99 i‡(
	`nodup
(
Œi°
, 
t
)) {

100 
Œi°
[
∆
++] = 
t
;

101 i‡(
	`gësuf
(
t
)=='o')

102 
nxo
++;

106 if(
nc
==0)

107 
nocom
;

108 i‡(
pÊag
==0) {

109 
tmp0
 = 
	`c›y
("/tmp/ctm0a");

110 (
c
=
	`›í
(
tmp0
, 0))>=0) {

111 
	`˛o£
(
c
);

112 
tmp0
[9]++;

114 (
	`¸ót
(
tmp0
, 0400))<0)

115 
tmp0
[9]++;

117 i‡((
	`sig«l
(2, 1) & 01) == 0)

118 
	`sig«l
(2, &
dexô
);

119 (
tmp1
 = 
	`c›y
(
tmp0
))[8] = '1';

120 (
tmp2
 = 
	`c›y
(
tmp0
))[8] = '2';

121 (
tmp3
 = 
	`c›y
(
tmp0
))[8] = '3';

122 i‡(
oÊag
)

123 (
tmp5
 = 
	`c›y
(
tmp0
))[8] = '5';

124 i‡(
pÊag
==0)

125 (
tmp4
 = 
	`c›y
(
tmp0
))[8] = '4';

126 
i
=0; i<
nc
; i++) {

127 i‡(
nc
>1)

128 
	`¥ötf
("%s:\n", 
˛i°
[
i
]);

129 
av
[0] = "c0";

130 i‡(
pÊag
)

131 
tmp4
 = 
	`£tsuf
(
˛i°
[
i
], 'i');

132 
av
[1] = 
	`ex∑nd
(
˛i°
[
i
]);

133 i‡(
pÊag
 || 
exÁû
)

135 i‡(
av
[1] == 0) {

136 
cÊag
++;

139 
av
[2] = 
tmp1
;

140 
av
[3] = 
tmp2
;

141 i‡(
¥oÊag
) {

142 
av
[4] = "-P";

143 
av
[5] = 0;

145 
av
[4] = 0;

146 i‡(
	`ˇŒsys
(
∑ss0
, 
av
)) {

147 
cÊag
++;

150 
av
[0] = "c1";

151 
av
[1] = 
tmp1
;

152 
av
[2] = 
tmp2
;

153 i‡(
sÊag
)

154 
tmp3
 = 
	`£tsuf
(
˛i°
[
i
], 's');

155 
av
[3] = 
tmp3
;

156 i‡(
oÊag
)

157 
av
[3] = 
tmp5
;

158 
av
[4] = 0;

159 if(
	`ˇŒsys
(
∑ss1
, 
av
)) {

160 
cÊag
++;

163 i‡(
oÊag
) {

164 
av
[0] = "c2";

165 
av
[1] = 
tmp5
;

166 
av
[2] = 
tmp3
;

167 
av
[3] = 0;

168 
	`ˇŒsys
(
∑ss2
, 
av
);

169 
	`u∆ök
(
tmp5
);

171 i‡(
sÊag
)

173 
av
[0] = "as";

174 
av
[1] = "-";

175 
av
[2] = 
tmp3
;

176 
av
[3] = 0;

177 
	`cu∆ök
(
tmp1
);

178 
	`cu∆ök
(
tmp2
);

179 
	`cu∆ök
(
tmp4
);

180 
	`ˇŒsys
("/bö/as", 
av
);

181 
t
 = 
	`£tsuf
(
˛i°
[
i
], 'o');

182 
	`cu∆ök
(
t
);

183 if(
	`lök
("a.out", 
t
Ë|| 
	`cu∆ök
("a.out")) {

184 
	`¥ötf
("movêÁûed: %s\n", 
t
);

185 
cÊag
++;

188 
nocom
:

189 i‡(
cÊag
==0 && 
∆
!=0) {

190 
i
 = 0;

191 
av
[0] = "ld";

192 
av
[1] = "-x";

193 
av
[2] = 
¥ef
;

194 
j
 = 3;

195 
i
<
∆
)

196 
av
[
j
++] = 
Œi°
[
i
++];

197 if(
f20
)

198 
av
[
j
++] = "-l2";

200 
av
[
j
++] = "-lc";

201 
av
[
j
++] = "-l";

203 
av
[
j
++] = 0;

204 
	`ˇŒsys
("/bö/ld", 
av
);

205 i‡(
nc
==1 && 
nxo
==1)

206 
	`cu∆ök
(
	`£tsuf
(
˛i°
[0], 'o'));

208 
	`dexô
();

209 
	}
}

211 
	$dexô
()

213 i‡(!
pÊag
) {

214 
	`cu∆ök
(
tmp1
);

215 
	`cu∆ök
(
tmp2
);

216 i‡(
sÊag
==0)

217 
	`cu∆ök
(
tmp3
);

218 
	`cu∆ök
(
tmp4
);

219 
	`cu∆ök
(
tmp5
);

220 
	`cu∆ök
(
tmp0
);

222 
	`exô
();

223 
	}
}

225 
	$ex∑nd
(
fûe
)

226 *
fûe
;

228 
ib1
[259], 
ib2
[259], 
ob
[259];

229 
symèb
 
°ab
[200];

230 
 
[196], 
sbf
[1024];

231 
c
;

232 *
æp
;

234 
exÁû
 = 0;

235 
ibuf
 = 
ibuf1
 = 
ib1
;

236 
ibuf2
 = 
ib2
;

237 i‡(
	`f›í
(
fûe
, 
ibuf1
)<0)

238 (
fûe
);

239 i‡(
	`gëc
(
ibuf1
) != '#') {

240 
	`˛o£
(
ibuf1
[0]);

241 (
fûe
);

243 
ibuf1
[1]++;

244 
ibuf1
[2]--;

245 
obuf
 = 
ob
;

246 
symèb
 = 
°ab
;

247 
c
=0; c<200; c++) {

248 
°ab
[
c
].
«me
[0] = '\0';

249 
°ab
[
c
].
vÆue
 = 0;

251 
deÊoc
 = 
	`lookup
("define", 1);

252 
deÊoc
->
vÆue
 = deÊoc->
«me
;

253 
ö˛oc
 = 
	`lookup
("include", 1);

254 
ö˛oc
->
vÆue
 = in˛oc->
«me
;

255 
°rögbuf
 = 
sbf
;

256 
löe
 = 
 
;

257 
löío
 = 0;

258 i‡(
	`f¸ót
(
tmp4
, 
obuf
) < 0) {

259 
	`¥ötf
("C™'à¸óà%s\n", 
tmp4
);

260 
	`dexô
();

262 
	`gëlöe
()) {

263 i‡(
ibuf
==
ibuf2
 && 
pÊag
==0)

264 
	`putc
(001, 
obuf
);

265 i‡(
 
[0] != '#')

266 
æp
 = 
löe
; 
c
 = *rlp++;)

267 
	`putc
(
c
, 
obuf
);

268 
	`putc
('\n', 
obuf
);

270 
	`fÊush
(
obuf
);

271 
	`˛o£
(
obuf
[0]);

272 
	`˛o£
(
ibuf1
[0]);

273 (
tmp4
);

274 
	}
}

276 
	$gëlöe
()

278 
c
, 
sc
, 
°©e
;

279 
symèb
 *
≈
;

280 *
«mï
, *
fû«me
;

282 i‡(
ibuf
==
ibuf1
)

283 
löío
++;

284 
Õ
 = 
löe
;

285 *
Õ
 = '\0';

286 
°©e
 = 0;

287 i‡((
c
=
	`gëch
()) == '#')

288 
°©e
 = 1;

289 
c
!='\n' && c!='\0') {

290 i‡('a'<=
c
 && c<='z' || 'A'<=c && c<='Z' || c=='_') {

291 
«mï
 = 
Õ
;

292 
	`sch
(
c
);

293 'a'<=(
c
=
	`gëch
()) && c<='z'

294 ||'A'<=
c
 && c<='Z'

295 ||'0'<=
c
 && c<='9'

296 ||
c
=='_')

297 
	`sch
(
c
);

298 
	`sch
('\0');

299 
Õ
--;

300 
≈
 = 
	`lookup
(
«mï
, 
°©e
);

301 i‡(
°©e
==1) {

302 i‡(
≈
==
deÊoc
)

303 
°©e
 = 2;

304 i‡(
≈
==
ö˛oc
)

305 
°©e
 = 3;

307 
	`îr‹
("Undefined control");

308 
c
!='\n' && c!='\0')

309 
c
 = 
	`gëch
();

310 (
c
);

312 } i‡(
°©e
==2) {

313 
≈
->
vÆue
 = 
°rögbuf
;

314 (
c
=
	`gëch
())!='\n' && c!='\0')

315 
	`ßvch
(
c
);

316 
	`ßvch
('\0');

320 } i‡((
sc
=
c
)=='\'' || sc=='"') {

321 
	`sch
(
sc
);

322 
fû«me
 = 
Õ
;

323 
ö°rög
++;

324 (
c
=
	`gëch
())!=
sc
 && c!='\n' && c!='\0') {

325 
	`sch
(
c
);

326 i‡(
c
=='\\')

327 
	`sch
(
	`gëch
());

329 
ö°rög
 = 0;

330 i‡(
°©e
==3) {

331 *
Õ
 = '\0';

332 (
c
=
	`gëch
())!='\n' && c!='\0');

333 i‡(
ibuf
==
ibuf2
)

334 
	`îr‹
("Nested 'include'");

335 i‡(
	`f›í
(
fû«me
, 
ibuf2
)<0)

336 
	`îr‹
("Missög fûê%s", 
fû«me
);

338 
ibuf
 = 
ibuf2
;

339 (
c
);

342 
	`sch
(
c
);

343 
c
 = 
	`gëch
();

345 
	`sch
('\0');

346 i‡(
°©e
>1)

347 
	`îr‹
("Control syntax");

348 (
c
);

349 
	}
}

351 
	$îr‹
(
s
, 
x
)

353 
	`¥ötf
("%d: ", 
löío
);

354 
	`¥ötf
(
s
, 
x
);

355 
	`putch¨
('\n');

356 
exÁû
++;

357 
cÊag
++;

358 
	}
}

360 
	$sch
(
c
)

362 *
æp
;

364 
æp
 = 
Õ
;

365 i‡(
æp
==
löe
+194)

366 
	`îr‹
("Line overflow");

367 *
æp
++ = 
c
;

368 i‡(
æp
>
löe
+195)

369 
æp
 = 
löe
+195;

370 
Õ
 = 
æp
;

371 
	}
}

373 
	$ßvch
(
c
)

375 *
°rögbuf
++ = 
c
;

376 
	}
}

378 
	$gëch
()

380 
≥ekc
;

381 
c
;

383 i‡(
≥ekc
) {

384 
c
 = 
≥ekc
;

385 
≥ekc
 = 0;

386 (
c
);

388 
lo›
:

389 i‡((
c
=
	`gëc1
())=='/' && !
ö°rög
) {

390 i‡((
≥ekc
=
	`gëc1
())!='*')

392 
≥ekc
 = 0;

394 
c
 = 
	`gëc1
();

395 
˛o›
:

396 
c
) {

402 i‡((
c
=
	`gëc1
())=='/')

403 
lo›
;

404 
˛o›
;

407 i‡(
ibuf
==
ibuf1
) {

408 
	`putc
('\n', 
obuf
);

409 
löío
++;

415 (
c
);

416 
	}
}

418 
	$gëc1
()

420 
c
;

422 i‡((
c
 = 
	`gëc
(
ibuf
)Ë< 0 && ibuf==
ibuf2
) {

423 
	`˛o£
(
ibuf2
[0]);

424 
ibuf
 = 
ibuf1
;

425 
	`putc
('\n', 
obuf
);

426 
c
 = 
	`gëc1
();

428 i‡(
c
<0)

430 (
c
);

431 
	}
}

433 
	$lookup
(
«mï
, 
íãrf
)

434 *
«mï
;

436 *
≈
, *
¢p
;

437 
symèb
 *
•
;

438 
i
, 
c
;

440 
≈
 = 
«mï
;

441 
i
 = 0;

442 
c
 = *
≈
++)

443 
i
 =+ 
c
;

444 
i
 =% 
symsiz
;

445 
•
 = &
symèb
[
i
];

446 
•
->
«me
[0]) {

447 
¢p
 = 
•
;

448 
≈
 = 
«mï
;

449 *
¢p
++ =*
≈
)

450 i‡(*
≈
++ ='\0' ||Çp==
«mï
+8) {

451 i‡(!
íãrf
)

452 
	`sub°
(
«mï
, 
•
);

453 (
•
);

455 i‡(++
•
 >&
symèb
[
symsiz
])

456 
•
 = 
symèb
;

458 i‡(
íãrf
) {

459 
¢p
 = 
«mï
;

460 
≈
 = &
•
->
«me
[0];Çp < &sp->name[8];)

461 i‡(*
≈
++ = *
¢p
)

462 
¢p
++;

464 (
•
);

465 
	}
}

467 
	$sub°
(
≈
, 
•
)

468 *
≈
;

469 
symèb
 *
•
;

471 *
vp
;

473 
Õ
 = 
≈
;

474 i‡((
vp
 = 
•
->
vÆue
) == 0)

476 
	`sch
(' ');

477 *
vp
)

478 
	`sch
(*
vp
++);

479 
	`sch
(' ');

480 
	}
}

482 
	$gësuf
(
as
)

483 
as
[];

485 
c
;

486 *
s
;

487 
t
;

489 
s
 = 
as
;

490 
c
 = 0;

491 
t
 = *
s
++)

492 i‡(
t
=='/')

493 
c
 = 0;

495 
c
++;

496 
s
 =- 3;

497 i‡(
c
<=14 && c>2 && *
s
++=='.')

498 (*
s
);

500 
	}
}

502 
	$£tsuf
(
as
, 
ch
)

503 
as
[];

505 *
s
, *
s1
;

507 
s
 = 
s1
 = 
	`c›y
(
as
);

508 *
s
)

509 i‡(*
s
++ == '/')

510 
s1
 = 
s
;

511 
s
[-1] = 
ch
;

512 (
s1
);

513 
	}
}

515 
	$ˇŒsys
(
f
, 
v
)

516 
f
[], *
v
[]; {

517 
t
, 
°©us
;

519 i‡((
t
=
	`f‹k
())==0) {

520 
	`execv
(
f
, 
v
);

521 
	`¥ötf
("C™'àföd %s\n", 
f
);

522 
	`exô
(1);

524 i‡(
t
 == -1) {

525 
	`¥ötf
("Tryágain\n");

528 
t
!=
	`waô
(&
°©us
));

529 i‡((
t
=(
°©us
&0377)) != 0 &&Å!=14) {

530 i‡(
t
!=2)

531 
	`¥ötf
("F©ÆÉº‹ i¿%s\n", 
f
);

532 
	`dexô
();

534 ((
°©us
>>8) & 0377);

535 
	}
}

537 
	$c›y
(
as
)

538 
as
[];

540 *
Ÿ•
, *
s
;

542 
Ÿ•
 = 
t•
;

543 
s
 = 
as
;

544 *
t•
++ = *
s
++);

545 (
Ÿ•
);

546 
	}
}

548 
	$nodup
(
l
, 
os
)

549 **
l
, *
os
;

551 *
t
, *
s
;

552 
c
;

554 
s
 = 
os
;

555 i‡(
	`gësuf
(
s
) != 'o')

557 
t
 = *
l
++) {

558 
c
 = *
s
++)

559 i‡(
c
 !*
t
++)

561 i‡(*
t
++ == '\0')

563 
s
 = 
os
;

566 
	}
}

568 
	$cu∆ök
(
f
)

569 *
f
;

571 i‡(
f
==0)

573 (
	`u∆ök
(
f
));

574 
	}
}

	@usr/source/s1/cdb.c

7 
	~"/u§/sys/∑øm.h
"

8 
	~"/u§/sys/u£r.h
"

10 
	gfc‹e
;

11 
	gfsym
;

12 
	gsymoff
;

13 *
	gÕ
;

14 
	gîrÊg
;

15 
	gsymÀn
;

16 
	gsym˘
;

17 
	gsymbﬁ
[8];

18 
	gsymÊg
;

19 
	gsymvÆ
;

20 
	gssymbﬁ
[8];

21 
	gssymÊg
;

22 
	gssymvÆ
;

23 
	glöe
[128];

24 
	gªgbuf
[512];

25 **
	guªgs
 &
	gªgbuf
[512];

26 *
	gπsize
;

27 
	gpc
 -2;

28 
	gr5
 -9;

29 
	gdŸ
;

30 
	gtdŸ
;

31 
	gdŸöc
 2;

32 
	gœ°com
 '/';

33 
	gœ°y≥
 'o';

34 *
	gsymfû
 "a.out";

35 *
	gc‹fû
 "core";

36 
	gˇŒi°
[50];

37 *
	gˇŒp
 &
	gˇŒi°
[0];

39 
	$maö
(
¨gc
, 
¨gv
)

40 **
¨gv
;

42 
	`⁄öå
();

44 i‡(
¨gc
==2)

45 
symfû
 = 
¨gv
[1];

46 i‡(
¨gc
>2) {

47 
c‹fû
 = 
¨gv
[1];

48 
symfû
 = 
¨gv
[2];

50 i‡((
fc‹e
 = 
	`›í
(
c‹fû
, 0)) < 0) {

51 
	`¥ötf
("%†nŸ found\n", 
c‹fû
);

54 i‡((
fsym
 = 
	`›í
(
symfû
, 0)) < 0) {

55 
	`¥ötf
("%†nŸ found\n", 
symfû
);

58 
	`ªad
(
fsym
, 
ªgbuf
, 020);

59 i‡(
ªgbuf
[0]!=0410 &&Ñegbuf[0]!=0407) {

60 
	`¥ötf
("Bad f‹m©: %s\n", 
symfû
);

63 
symoff
 = 
ªgbuf
[1] +Ñegbuf[2];

64 
symÀn
 = 
ªgbuf
[4];

65 i‡(
ªgbuf
[7] != 1)

66 
symoff
 =<< 1;

67 
symoff
 =+ 020;

68 
	`ªad
(
fc‹e
, 
ªgbuf
, 1024);

69 
ªgbuf
->
u_tsize
 =<< 6;

70 
ªgbuf
->
u_dsize
 =<< 6;

71 
ªgbuf
->
u_ssize
 =<< 6;

72 
πsize
 = (
ªgbuf
->
u_tsize
+017777) & ~017777;

73 
	`£ãxô
();

74 
	`sig«l
(2, 
⁄öå
);

75 
lo›
:

76 i‡(
îrÊg
) {

77 
	`¥ötf
("?\n");

78 
îrÊg
 = 0;

80 
Õ
 = 
löe
;

81 (*
Õ
 = 
	`gëch¨
()) != '\n')

82 i‡(*
Õ
++ == '\0')

84 
Õ
 = 
löe
;

85 
	`comm™d
();

86 
lo›
;

87 
	}
}

89 
	$comm™d
()

91 
adrÊg
, 
n
;

93 
adrÊg
 = 
	`ex¥
();

94 i‡(
îrÊg
)

96 
n
 = 
	`gë˙t
();

97 i‡(
œ°com
=='$')

98 
œ°com
 = '/';

99 i‡(*
Õ
 == '\n') {

100 i‡(!
adrÊg
)

101 
dŸ
 =+ 
dŸöc
;

103 
œ°com
 = *
Õ
++;

104 i‡(*
Õ
 != '\n')

105 
œ°y≥
 = *
Õ
++;

106 i‡(*
Õ
 != '\n') {

107 
îrÊg
++;

110 i‡(
adrÊg
)

111 
dŸ
 = 
tdŸ
;

112 
n
) {

113 
	`scomm™d
(
n
);

114 i‡(
îrÊg
)

116 i‡(--
n
)

117 
dŸ
 =+ 
dŸöc
;

119 
	}
}

121 
	$scomm™d
(
n
)

123 
w
, 
c
;

124 
fw
;

125 °ru˘ { 
i
[4]; };

127 
œ°com
) {

130 
w
 = 
	`cgë
(
dŸ
);

131 
œ°y≥
) {

134 
	`¥ötf
("%.1o\n", 
w
);

135 
dŸöc
 = 2;

139 
	`¥ötf
("%d\n", 
w
);

140 
dŸöc
 = 2;

144 
fw
 = 0.0;

145 
fw
.
i
[0] = 
w
;

146 
fw
.
i
[1] = 
	`cgë
(
dŸ
+2);

147 
	`¥ötf
("%e\n", 
fw
);

148 
dŸöc
 = 4;

152 
fw
.
i
[0] = 
w
;

153 
fw
.
i
[1] = 
	`cgë
(
dŸ
+2);

154 
fw
.
i
[2] = 
	`cgë
(
dŸ
+4);

155 
fw
.
i
[3] = 
	`cgë
(
dŸ
+6);

156 
	`¥ötf
("%e\n", 
fw
);

157 
dŸöc
 = 8;

160 
îrÊg
++;

164 
	`¥ötf
("%.1o\n", 
	`cgë
(
dŸ
) & 0377);

165 
dŸöc
 = 1;

169 
	`¥ötf
("%.1o\n", 
dŸ
);

173 
	`¥ötc
(
	`cgë
(
dŸ
) & 0377);

174 i‡(
n
<=1)

175 
	`putch¨
('\n');

176 
dŸöc
 = 1;

180 
w
 = 
	`cgë
(
dŸ
);

181 
c
 = 
	`cgë
(
w
++)&0377)

182 
	`¥ötc
(
c
);

183 
	`putch¨
('\n');

187 
	`vÆlook
(
	`cgë
(
dŸ
));

188 i‡(
îrÊg
)

189 
	`ª£t
();

190 
	`¥ötf
("%.8s\n", 
ssymbﬁ
);

194 
	`¥öâø˚
();

197 
îrÊg
++;

198 
	}
}

200 
	$gë˙t
()

202 
t1
, 
t2
;

204 i‡(*
Õ
 != ',')

206 
Õ
++;

207 
t1
 = 
tdŸ
;

208 i‡(
	`ex¥
() == 0) {

209 
tdŸ
 = 
t1
;

212 
t2
 = 
tdŸ
;

213 
tdŸ
 = 
t1
;

214 (
t2
);

215 
	}
}

217 
	$cgë
(
n
)

219 
w
;

221 
w
 = 
	`gë
(
n
);

222 i‡(
îrÊg
)

223 
	`ª£t
();

224 (
w
);

225 
	}
}

227 
	$¥ötc
(
c
)

229 i‡(
c
<' ' || c>'}')

230 
	`¥ötf
("\\%o", 
c
);

232 
	`¥ötf
("%c", 
c
);

233 
	}
}

235 
	$ex¥
()

237 
tsym
[10];

238 
i
, 
t1
, 
t2
, 
d⁄ef
, 
adrÊg
, 
œ°›
, 
b
;

240 
tdŸ
 = 0;

241 
adrÊg
 = 0;

242 
œ°›
 = '+';

243 
ssymvÆ
 = 0;

244 
d⁄ef
 = 0;

245 
lo›
:

246 i‡(*
Õ
 >= 'a' && *lp <= 'z' || *lp=='_') {

247 
i
 = 0;

248 
tsym
[
i
++] = '_';

249 
adrÊg
++;

250 *
Õ
>='a'&&*lp<='z' || *lp>='0'&&*lp<='9' || *lp=='_') {

251 i‡(
i
 < 8)

252 
tsym
[
i
++] = *
Õ
;

253 
Õ
++;

255 
i
<8)

256 
tsym
[
i
++] = '\0';

257 i‡(
	`symlook
(
tsym
) == 0) {

258 
îrÊg
++;

259 
	`ª£t
();

261 
lo›
;

263 i‡(*
Õ
>='0' && *lp<='9') {

264 
adrÊg
++;

265 
ssymvÆ
 = 0;

266 i‡(*
Õ
 == '0')

267 
b
 = 8;

269 
b
 = 10;

270 *
Õ
>='0' && *lp<='9') {

271 
ssymvÆ
 =* 
b
;

272 
ssymvÆ
 =+ *
Õ
++ -'0';

274 
lo›
;

276 *
Õ
) {

279 
d⁄ef
++;

283 
œ°›
) {

286 
tdŸ
 =+ 
ssymvÆ
;

287 
›
;

290 
tdŸ
 =- 
ssymvÆ
;

292 
›
:

293 i‡(
d⁄ef
)

294 (
adrÊg
);

296 
œ°›
 = *
Õ
++;

298 
lo›
;

302 
Õ
++;

303 
lo›
;

306 
Õ
++;

307 
adrÊg
++;

308 
t1
 = 
tdŸ
;

309 
ssymvÆ
 = 
	`gë¨g
();

310 
tdŸ
 = 
t1
;

311 
lo›
;

314 
Õ
++;

315 
t1
 = 
ssymvÆ
;

316 
t2
 = 
tdŸ
;

317 i‡(
	`ex¥
() == 0)

318 
tdŸ
 = 0;

319 
ssymvÆ
 = 
	`gë
(
t1
 + (
tdŸ
<<1));

320 i‡(
îrÊg
)

321 
	`ª£t
();

322 
tdŸ
 = 
t2
;

323 i‡(*
Õ
 == ']')

324 
Õ
++;

325 
lo›
;

327 
	}
}

329 
	$gë¨g
()

331 
Àvñ
, 
¨g
, 
t1
;

333 
t1
 = 
tdŸ
;

334 
	`ex¥
();

335 
Àvñ
 = 
tdŸ
;

336 i‡(*
Õ
++ != ',')

337 
	`îr‹
();

338 
	`ex¥
();

339 
¨g
 = 
tdŸ
;

340 i‡(*
Õ
++ != ')')

341 
	`îr‹
();

342 i‡(
Àvñ
 >
ˇŒp
-
ˇŒi°
)

343 
	`îr‹
();

344 
ssymvÆ
 = 
ˇŒi°
[
Àvñ
] - 8 - 2*
¨g
;

345 
tdŸ
 = 
t1
;

346 
	}
}

347 
	$îr‹
()

349 
îrÊg
++;

350 
	`ª£t
();

351 
	}
}

353 
	$¥öâø˚
()

355 
çc
, 
å5
, 
«rg
, 
¨gp
, 
i
;

357 
çc
 = 
uªgs
[
pc
];

358 
å5
 = 
uªgs
[
r5
];

359 i‡(
	`symlook
("savr5"))

360 i‡(
«rg
 = 
	`gë
(
ssymvÆ
))

361 
å5
 = 
«rg
;

362 
ˇŒp
 = &
ˇŒi°
[0];

363 
îrÊg
 == 0) {

364 
«rg
 = 
	`födroutöe
(
çc
, 
å5
);

365 
	`¥ötf
("%2d: %.8s(", 
ˇŒp
-
ˇŒi°
, 
ssymbﬁ
);

366 i‡(--
«rg
 >= 0)

367 
	`¥ötf
("%.1o", 
	`gë
(
å5
+4));

368 
¨gp
 = 
å5
+4;

369 --
«rg
 >= 0)

370 
	`¥ötf
(",%.1o", 
	`gë
(
¨gp
 =+ 2));

371 
	`¥ötf
(")\n");

372 
çc
 = 
	`gë
(
å5
+2);

373 i‡(
ˇŒp
 < &
ˇŒi°
[50])

374 *
ˇŒp
++ = 
å5
;

375 i‡((
å5
 = 
	`gë
(tr5)) == 0)

378 
	}
}

380 
	$födroutöe
(
Ωc
, 
º5
)

382 
ˇŒ±
, 
ö°
, 
«rg
;

384 
ˇŒ±
 = 
	`gë
(
º5
+2);

385 i‡((
ö°
=
	`gë
(
ˇŒ±
-4)) == 04737)

386 
«rg
 = 1;

387 i‡((
ö°
&~077)==04700)

388 
«rg
 = 0;

390 
îrÊg
++;

393 
	`vÆlook
((
ö°
==04767?
ˇŒ±
:0Ë+ 
	`gë
(callpt-2));

394 
ö°
 = 
	`gë
(
ˇŒ±
);

395 i‡(
ö°
 == 05726)

396 (
«rg
+1);

397 i‡(
ö°
 == 022626)

398 (
«rg
+2);

399 i‡(
ö°
 == 062706)

400 (
«rg
+
	`gë
(
ˇŒ±
+2)/2);

401 (
«rg
);

402 
	}
}

404 
	$symlook
(
sym°r
)

405 *
sym°r
;

407 
	`sym£t
();

408 
	`symgë
()) {

409 i‡(
	`eq°r
(
symbﬁ
, 
sym°r
)) {

410 
	`ßvsym
();

415 
	}
}

417 
	$eq°r
(
as1
, 
as2
)

418 *
as1
, *
as2
;

420 *
s1
, *
s2
, *
es1
;

422 
s1
 = 
as1
;

423 
s2
 = 
as2
;

424 
es1
 = 
s1
+4; s1 <És1; )

425 i‡(*
s1
++ !*
s2
++)

428 
	}
}

430 
	$vÆlook
(
vÆue
)

432 
	`sym£t
();

433 
	`symgë
())

434 i‡(
symvÆ
 =
vÆue
 && (
symÊg
&037) == 2) {

435 
	`ßvsym
('_');

438 
îrÊg
++;

439 
	}
}

441 
	$gë
(
Øddr
)

442 *
Øddr
;

444 
w
;

445 *
addr
;

447 
addr
 = 
Øddr
;

448 
w
 = 0;

449 i‡(
addr
 < 
ªgbuf
->
u_tsize
) {

450 
	`£ek
(
fsym
, 
addr
+020, 0);

451 i‡(
	`ªad
(
fsym
, &
w
, 2) != 2)

452 
îrÊg
++;

453 (
w
);

455 i‡(
addr
 < 
πsize
+
ªgbuf
->
u_dsize
)

456 
addr
 =- 
πsize
;

457 i‡(-
addr
 < 
ªgbuf
->
u_ssize
)

458 
addr
 =+ 
ªgbuf
->
u_dsize
 +Ñegbuf->
u_ssize
;

460 
îrÊg
++;

461 
	`£ek
(
fc‹e
, 
addr
+1024, 0);

462 i‡(
	`ªad
(
fc‹e
, &
w
, 2) < 2)

463 
îrÊg
++;

464 (
w
);

465 
	}
}

467 
	$sym£t
()

469 
sym˘
 = 
symÀn
;

470 
	`£ek
(
fsym
, 
symoff
, 0);

471 
	}
}

473 
	$symgë
()

475 i‡((
sym˘
 =- 12) < 0)

477 (
	`ªad
(
fsym
, 
symbﬁ
, 12) == 12);

478 
	}
}

480 
	$ßvsym
(
skù
)

482 
ch
;

483 *
p
, *
q
;

485 
p
 = 
symbﬁ
;

486 
q
 = 
ssymbﬁ
;

487 
p
<
symbﬁ
+8 && (
ch
 = *p++)) {

488 i‡(
ch
 =
skù
)

490 *
q
++ = 
ch
;

492 
q
 < 
ssymbﬁ
+8)

493 *
q
++ = '\0';

494 
ssymÊg
 = 
symÊg
;

495 
ssymvÆ
 = 
symvÆ
;

496 
	}
}

498 
	$⁄öå
()

500 
	`putch¨
('\n');

501 
îrÊg
++;

502 
	`ª£t
();

503 
	}
}

	@usr/source/s1/check.c

2 *
	gd¨gv
[]

9 
	gbuÁ
;

10 
	gsÊg
;

11 
	glfûe
[] "/tmp/ktmp";

12 
	glÊg
;

13 
	guÊg
;

14 
	glfdes
;

15 
	glÂå
;

17 
	söode


19 
	mi_mode
;

20 
	mi_∆ök
;

21 
	mi_uid
;

22 
	mi_gid
;

23 
	mi_size0
;

24 *
	mi_size1
;

25 
	mi_addr
[8];

26 
	mi_©ime
[2];

27 
	mi_mtime
[2];

31 
	#IALLOC
 0100000

	)

32 
	#IFMT
 060000

	)

33 
	#IFDIR
 040000

	)

34 
	#IFCHR
 020000

	)

35 
	#IFBLK
 060000

	)

36 
	#ILARG
 010000

	)

40 *
	ms_isize
;

41 *
	ms_fsize
;

42 
	ms_n‰ì
;

43 
	ms_‰ì
[100];

44 
	ms_nöode
;

45 
	ms_öode
[100];

46 
	ms_Êock
;

47 
	ms_ûock
;

48 
	ms_fmod
;

49 
	mtime
[2];

50 
	m∑d
[50];

51 } 
	gsblock
;

53 
	gbô˙t
[]

58 
	gndli°
;

59 
	gdli°
[100];

60 *
	ggª©
;

61 
	gnbli°
;

62 
	gbli°
[100];

63 *
	gbm≠
 -1;

64 
	gfi
;

65 
	gnfûe
;

66 
	gn•˛
;

67 
	g∆¨g
;

68 
	gnödú
;

69 
	gndú
;

70 
	gnu£d
;

71 
	ghiw©
;

72 
	gn‰ì
;

73 
	göo
;

74 
	gndup
;

75 
	g¬f
 100;

79 
	mi˙t
[2];

80 } *
	gi˙t
;

81 *
	gu˙t
;

83 
	s‚ame


85 
	möum
;

86 
	m≈å
;

87 
	m≤um
;

88 } *
	gdn
, *
	gedn
;

90 
	gldivr
;

91 
	gfout
;

93 
	$maö
(
¨gc
, 
¨gv
)

94 **
¨gv
;

96 *
¨g
;

97 *
p
;

99 
¨gv
[
¨gc
] = 0;

100 if(
¨gc
 == 1) {

101 
¨gv
 = 
d¨gv
;

102 
¨gc
 = 1; 
d¨gv
[argc];árgc++);

105 if(
¨gc
>1 && *
¨gv
[1] == '-') {

106 
¨gc
--;

107 
¨gv
++;

108 
¨g
 = *
¨gv
;

109 *
¨g
)

110 *
¨g
++) {

113 
uÊg
++;

116 
lÊg
++;

120 
sÊg
++;

124 
dli°
[
ndli°
++] = 
	`numbî
(
¨gv
[1]);

125 
¨gc
--;

126 
¨gv
++;

130 
bli°
[
nbli°
++] = 
	`numbî
(
¨gv
[1]);

131 
¨gc
--;

132 
¨gv
++;

136 
gª©
 = 
	`numbî
(
¨gv
[1]);

137 
¨gc
--;

138 
¨gv
++;

143 i‡(
lÊg
)

144 
sÊg
 = 0;

145 
fout
 = 
	`dup
(1);

146 
¨gc
--;

147 
¨gv
++;

148 
	`Ârötf
("%s:\n", 
¨gv
[0]);

149 
	`check
(
¨gv
[0]);

150 
	`Êush
();

151 
	`˛o£
(
fout
);

152 
fout
 = 1;

153 if(
¨gc
 > 1)

154 
	`execv
("/bö/check", 
¨gv
);

155 
	}
}

157 
	$check
(
fûe
)

158 *
fûe
;

160 
öode
 
buf
[16];

161 
i
, 
j
;

162 
	`com∑r
(), 
	`cöå
();

163 
‚ame
 *
d≈
;

165 
fi
 = 
	`›í
(
fûe
, 0);

166 if(
fi
 < 0) {

167 
	`Ârötf
("ˇ¬Ÿ o≥¿%s\n", 
fûe
);

170 
	`sync
();

171 
	`bªad
(1, &
sblock
);

172 i‡(
lÊg
) {

173 if(
uÊg
) {

174 
u˙t
 = 
	`sbrk
(
sblock
.
s_isize
*2);

175 if(
	`bad
(
u˙t
))

178 
lfdes
 = 
	`¸ót
(
lfûe
, 0666);

179 i‡((
	`sig«l
(2, 1) & 01) == 0)

180 
	`sig«l
(2, 
cöå
);

182 
dn
 = 
edn
 = 
	`sbrk
(101*6);

183 if(
	`bad
(
dn
))

186 
bm≠
 = 
	`sbrk
(8192);

187 
i˙t
 = 
	`sbrk
(
sblock
.
s_isize
*16);

188 if(
	`bad
(
bm≠
Ë|| bad(
i˙t
))

191 
i
=0; i<
sblock
.
s_isize
; i++) {

192 
	`bªad
(
i
+2, 
buf
);

193 
j
=0; j<16; j++) {

194 
öo
++;

195 
	`∑ss1
(&
buf
[
j
]);

198 if(
uÊg
) {

199 
öo
=2; ino<
sblock
.
s_isize
*16; ino++) {

200 
i
 = 
	`ldiv
(0, 
öo
, 8);

201 if(
u˙t
[
i
] & (1<<
ldivr
))

202 if(
	`åa˚
(
öo
, 0) == 0)

203 
	`Ârötf
("%l\n", 
öo
);

207 
öo
 = 0;

208 i‡(
lÊg
) {

209 
	`˛o£
(
lfdes
);

210 
lfdes
 = 
	`›í
(
lfûe
, 0);

211 
	`qs‹t
(
dn
, 
edn
-dn, 6, 
com∑r
);

212 
i
 = -1;

213 
j
 = 0;

214 
d≈
=
dn
; d≈<
edn
; dnp++) {

215 if(
d≈
->
≤um
 == 0) {

216 if(
d≈
->
öum
 != 1)

217 
j
 = 1;

220 
	`¥ötf
("%4l", 
d≈
->
öum
);

221 i‡(
d≈
->
öum
 =
i
)

222 
	`putch¨
('l'); 

223 
	`putch¨
(' ');

224 
i
 = 
d≈
->
öum
;

225 
	`putch¨
(' ');

226 if(
lÊg
 > 1)

227 
	`p°©
(
i
, 
buf
);

228 
	`pfûíame
(
d≈
, 0);

229 if(
j
) {

230 
j
 = 0;

231 
	`¥ötf
("/.");

233 
	`putch¨
('\n');

235 
	`˛o£
(
lfdes
);

236 
	`u∆ök
(
lfûe
);

239 
	`sync
();

240 
	`bªad
(1, &
sblock
);

241 if(
sÊg
) {

242 
	`˛o£
(
fi
);

243 
fi
 = 
	`›í
(
fûe
, 1);

244 if(
fi
 < 0) {

245 
	`Ârötf
("ˇ¬Ÿ wrôê%s\n", 
fûe
);

248 
sblock
.
s_n‰ì
 = 0;

249 
sblock
.
s_nöode
 = 0;

250 
sblock
.
s_Êock
 = 0;

251 
sblock
.
s_ûock
 = 0;

252 
sblock
.
s_fmod
 = 0;

253 
	`‰ì
(0);

254 
i
=
sblock
.
s_fsize
-1; i>=sblock.
s_isize
+2; i--) {

255 
ndup
 = 0;

256 
	`chk
(
i
, "URK", 0);

257 if(
ndup
 == 0)

258 
	`‰ì
(
i
);

260 
	`bwrôe
(1, &
sblock
);

261 
	`˛o£
(
fi
);

262 
	`sync
();

265 
i
 = 
	`Æloc
()) {

266 if(
	`chk
(
i
, "free", 0))

268 
n‰ì
++;

270 if(
ndup
)

271 
	`¥ötf
("%»dup†ö fªe\n", 
ndup
);

272 
ndup
 = 
sblock
.
s_fsize
 - sblock.
s_isize
 - 2;

273 
i
=0; i<8192; i++) {

274 
j
 = 
bm≠
[
i
];

275 
ndup
 =+ 
bô˙t
[
j
&017];

276 
ndup
 =+ 
bô˙t
[(
j
>>4)&017];

278 if(
ndup
)

279 
	`¥ötf
("%»missög\n", 
ndup
);

280 
i
=0; i<
sblock
.
s_isize
*16; i++) {

281 
j
 = 
i˙t
->i˙t[
i
] & 0377;

282 if(
j
!=0 && j!=0200)

283 
	`¥ötf
("%6»%3o\n", 
i
+1, 
j
);

285 
	`¥ötf
("•˛ %6l\n", 
n•˛
);

286 
	`¥ötf
("fûe†%6l\n", 
nfûe
);

287 
	`¥ötf
("œrgê%6l\n", 
∆¨g
);

288 
	`¥ötf
("dúe¯%6l\n", 
ndú
);

289 
	`¥ötf
("ödú %6l\n", 
nödú
);

290 
	`¥ötf
("u£d %6l\n", 
nu£d
);

291 
	`¥ötf
("œ° %6l\n", 
hiw©
);

292 
	`¥ötf
("‰ì %6l\n", 
n‰ì
);

293 
	`˛o£
(
fi
);

294 
	}
}

296 
	$cöå
()

299 
	`u∆ök
(
lfûe
);

300 
	`exô
();

301 
	}
}

303 
	$com∑r
(
p1
, 
p2
)

304 
‚ame
 *
p1
, *
p2
;

306 
i
;

308 
i
 = 
p1
->
öum
 - 
p2
->inum;

309 if(
i
)

310 (
i
);

311 (
p1
->
≤um
 - 
p2
->pnum);

312 
	}
}

314 
	$∑ss1
(
ù
)

315 
öode
 *
ù
;

317 
buf
[256];

318 
i
, 
j
, 
df
;

320 if((
ù
->
i_mode
&
IALLOC
) == 0)

322 if(
uÊg
) {

323 
i
 = 
	`ldiv
(0, 
öo
, 8);

324 
u˙t
[
i
] =| 1<<
ldivr
;

326 i‡(!
lÊg
) {

327 
i˙t
->i˙t[
öo
-1] =+ 0100;

328 if(
ù
->
i_∆ök
)

329 
i˙t
->i˙t[
öo
-1] =+ 0100 + 
ù
->
i_∆ök
;

331 if((
ù
->
i_mode
&
IFCHR
&
IFBLK
) != 0) {

332 
n•˛
++;

335 
df
 = 0;

336 if((
ù
->
i_mode
&
IFMT
Ë=
IFDIR
) {

337 
df
 = 
	`ldiv
(
ù
->
i_size0
, ip->
i_size1
, 16);

338 if(
lÊg
 && !
uÊg
) {

339 if(--
¬f
<0) {

340 
¬f
 = 100;

341 
edn
 = 
	`sbrk
(6*101);

342 if(
	`bad
(
edn
))

343 
lÊg
 = 0;

345 
edn
->
≤um
 = 0;

346 
edn
->
öum
 = 
öo
;

347 
edn
++;

349 
ndú
++;

350 } i‡(
lÊg
)

352 
nfûe
++;

353 if((
ù
->
i_mode
&
ILARG
) != 0) {

354 
∆¨g
++;

355 
i
=0; i<8; i++)

356 if(
ù
->
i_addr
[
i
] != 0) {

357 
nödú
++;

358 if(
	`chk
(
ù
->
i_addr
[
i
], "idir", 0))

360 
	`bªad
(
ù
->
i_addr
[
i
], 
buf
);

361 
j
=0; j<256; j++)

362 if(
buf
[
j
] != 0)

363 
	`chk
(
buf
[
j
], "ldú", 
df
);

364 
df
 =- 32;

368 
i
=0; i<8; i++) {

369 if(
ù
->
i_addr
[
i
] != 0)

370 
	`chk
(
ù
->
i_addr
[
i
], "sdú", 
df
);

371 
df
 =- 32;

373 
	}
}

375 
	$chk
(
ii
, 
s
, 
df
)

376 *
ii
;

378 *
i
;

379 
n
, 
j
;

380 
b
;

381 
buf
[256];

383 
öo
;

384 
«me
[14];

387 
i
 = 
ii
;

388 
j
=0; j<
nbli°
; j++)

389 if(
i
 =
bli°
[
j
])

390 
	`Ârötf
("%»blk; i=%l(%s)\n", 
i
, 
öo
, 
s
);

391 if(
gª©
 && 
i
 >= great && i)

392 
	`Ârötf
("%»geq; i=%l(%s)\n", 
i
, 
öo
, 
s
);

393 if(
öo
) {

394 
nu£d
++;

395 if(
i
 > 
hiw©
)

396 
hiw©
 = 
i
;

398 if(
i
<
sblock
.
s_isize
+2 || i>=sblock.
s_fsize
) {

399 
	`Ârötf
("%»bad; i=%l(%s)\n", 
i
, 
öo
, 
s
);

402 
n
 = 
	`ldiv
(0, 
i
, 8);

403 i‡(
lÊg
==0) {

404 
j
 = (1<<
ldivr
);

405 if(
bm≠
[
n
] & 
j
) {

406 if(
öo
 == 0) {

407 
ndup
++;

410 
	`Ârötf
("%»dup; i=%l(%s)\n", 
i
, 
öo
, 
s
);

413 
bm≠
[
n
] =| 
j
;

415 if(
df
>0) {

416 
	`bªad
(
i
, 
buf
);

417 
n
=0;Ç<256;Ç=+8) {

418 if(
df
 <= 0)

420 
df
--;

421 if((
b
=
buf
[
n
]) == 0)

423 i‡(
lÊg
)

424 if(!(
buf
[
n
].
«me
[0]=='.' &&

425 (
buf
[
n
].
«me
[1]=='\0' ||

426 (
buf
[
n
].
«me
[1]=='.' && buf[n].name[2]=='\0')))) {

427 i‡(--
¬f
<0) {

428 
¬f
 = 100;

429 
edn
 = 
	`sbrk
(6*101);

430 if(
	`bad
(
edn
))

431 
lÊg
 = 0;

433 
edn
->
≤um
 = 
öo
;

434 
edn
->
öum
 = 
buf
[
n
];

435 
edn
->
≈å
 = 
lÂå
;

436 
j
=0; j<14; j++)

437 if(
buf
[
n
].
«me
[
j
] == '\0')

439 
j
++;

440 if(!
uÊg
)

441 
	`wrôe
(
lfdes
, 
buf
[
n
].
«me
, 
j
);

442 
lÂå
 =+ 
j
;

443 
edn
++;

445 
j
=0; j<
ndli°
; j++)

446 if(
b
 =
dli°
[
j
])

447 
	`Ârötf
("%l ino; i=%l(%s) \"%.16s\"\n",

448 
b
, 
öo
, 
s
, 
buf
+
n
+1);

449 if(
b
<1 || b>16*
sblock
.
s_isize
) {

450 
	`Ârötf
("%»dö; i=%l(%s)\n", 
i
, 
öo
, 
s
);

453 i‡(!
lÊg
)

454 
i˙t
->i˙t[
b
-1]--;

458 
	}
}

460 
	$pfûíame
(
dp
, 
ªcur
)

461 
‚ame
 *
dp
;

463 
‚ame
 *
p
;

464 
«me
[14];

466 i‡(++
ªcur
 > 10) {

467 
	`putch¨
('.');

468 
	`putch¨
('.');

469 
	`putch¨
('.');

471 i‡(
dp
->
≤um
 != 1) {

472 
p
 = 
dn
;Ö<
edn
;Ö++) {

473 i‡(
p
->
öum
==
dp
->
≤um
 &&Ö->pnum!=0) {

474 
	`pfûíame
(
p
, 
ªcur
);

475 
yes
;

478 
	`putch¨
('?');

479 
	`putch¨
('?');

480 
	`putch¨
('?');

481 
yes
:

482 
	`putch¨
('/');

484 
	`£ek
(
lfdes
, 
dp
->
≈å
, 0);

485 
	`ªad
(
lfdes
, 
«me
, 14);

486 
	`¥ötf
("%.14s", 
«me
);

487 
	}
}

489 
	$p°©
(
i
, 
buf
)

491 
n
, *
p
;

493 
n
 = 
	`ldiv
(0, 
i
+31, 16);

494 if(
n
 !
buÁ
) {

495 
buÁ
 = 
n
;

496 
	`bªad
(
n
, 
buf
);

498 
p
 = 
buf
 + 
ldivr
*32;

499 
	`¥ötf
("%4ÿ", 
p
->
i_mode
&07777);

500 
	`pd©e
(
p
->
i_©ime
);

501 
	`pd©e
(
p
->
i_mtime
);

502 
	}
}

504 
	$pd©e
(
t
)

505 *
t
;

507 *
p
;

509 
p
 = 
	`loˇ…ime
(
t
);

510 
	`p2dig
(
p
[5], '/');

511 
	`p2dig
(
p
[4]+1, '/');

512 
	`p2dig
(
p
[3], ' ');

513 
	`p2dig
(
p
[2], ':');

514 
	`p2dig
(
p
[1], ' ');

515 
	}
}

517 
	$p2dig
(
n
, 
c
)

519 
	`putch¨
(
n
/10 + '0');

520 
	`putch¨
(
n
%10 + '0');

521 
	`putch¨
(
c
);

522 
	}
}

524 
	$Æloc
()

526 
b
, 
i
;

527 
buf
[256];

529 
i
 = --
sblock
.
s_n‰ì
;

530 if(
i
<0 || i>=100) {

531 
	`Ârötf
("bad freeblock\n");

534 
b
 = 
sblock
.
s_‰ì
[
i
];

535 if(
b
 == 0)

537 if(
sblock
.
s_n‰ì
 <= 0) {

538 
	`bªad
(
b
, 
buf
);

539 
sblock
.
s_n‰ì
 = 
buf
[0];

540 
i
=0; i<100; i++)

541 
sblock
.
s_‰ì
[
i
] = 
buf
[i+1];

543 (
b
);

544 
	}
}

546 
	$bªad
(
bno
, 
buf
)

549 
	`£ek
(
fi
, 
bno
, 3);

550 if(
	`ªad
(
fi
, 
buf
, 512) != 512) {

551 
	`Ârötf
("ªadÉº‹ %d\n", 
bno
);

552 
	`exô
();

554 
	}
}

556 
	$‰ì
(
ö
)

558 
i
;

559 
buf
[256];

561 if(
sblock
.
s_n‰ì
 >= 100) {

562 
buf
[0] = 
sblock
.
s_n‰ì
;

563 
i
=0; i<100; i++)

564 
buf
[
i
+1] = 
sblock
.
s_‰ì
[i];

565 
sblock
.
s_n‰ì
 = 0;

566 
	`bwrôe
(
ö
, 
buf
);

568 
sblock
.
s_‰ì
[sblock.
s_n‰ì
++] = 
ö
;

569 
	}
}

571 
	$bwrôe
(
bno
, 
buf
)

574 
	`£ek
(
fi
, 
bno
, 3);

575 if(
	`wrôe
(
fi
, 
buf
, 512) != 512) {

576 
	`Ârötf
("wrôêîr‹ %d\n", 
bno
);

577 
	`exô
();

579 
	}
}

581 
	$numbî
(
s
)

582 *
s
;

584 
n
, 
c
;

586 
n
 = 0;

587 
c
 = *
s
++) {

588 if(
c
<'0' || c>'9')

590 
n
 =Ç*10+
c
-'0';

592 (
n
);

593 
	}
}

595 
	$Ârötf
(
a
, 
b
, 
c
, 
d
, 
e
)

597 
	`¥ötf
(
a
, 
b
, 
c
, 
d
, 
e
);

598 
	`Êush
();

599 
	}
}

601 
	$bad
(
f
)

604 if(
f
 == -1) {

605 
	`Ârötf
("out of memory\n");

609 
	}
}

611 
	$åa˚
(
ii
, 
r
)

613 
‚ame
 *
p
;

614 
i
, 
j
;

616 
i
 = 
ii
;

617 
r
++;

618 if(
r
 > 10)

620 
p
=
dn
;Ö<
edn
;Ö++)

621 if(
p
->
öum
 =
i
) {

622 
j
 = 
p
->
≤um
;

623 if(
j
 == 0 || j == 1)

624 (
j
);

625 if(
	`åa˚
(
j
, 
r
) == 1) {

626 
	`£çn
(
j
, 1);

630 
	`£çn
(
i
, 0);

632 
	}
}

634 
	$£çn
(
≤
, 
n
)

636 
‚ame
 *
p
;

637 
i
, 
j
;

639 
i
 = 
≤
;

640 
j
 = 
n
;

641 
p
=
dn
;Ö<
edn
;Ö++)

642 if(
p
->
≤um
 =
i
)

643 
p
->
≤um
 = 
j
;

644 
	}
}

	@usr/source/s1/chmod.c

1 
	$maö
(
¨gc
, 
¨gv
)

2 **
¨gv
;

4 
i
, 
m
;

5 *
c
;

6 
cou¡
;

8 if(
¨gc
 < 3) {

9 
	`¥ötf
("arg count\n");

10 
	`exô
(1);

12 
c
 = 
¨gv
[1];

13 
m
 = 0;

14 
m
=0; *
c
; c++) {

15 if(*
c
 < '0' || *c > '7') {

16 
	`¥ötf
("bad mode\n");

17 
	`exô
(1);

19 
m
 = (m<<3Ë| *
c
 - '0';

21 
i
=2; i<
¨gc
; i++)

22 if(
	`chmod
(
¨gv
[
i
], 
m
) < 0) {

23 
cou¡
++;

24 
	`≥º‹
(
¨gv
[
i
]);

26 
	`exô
(
cou¡
);

27 
	}
}

	@usr/source/s1/cmp.c

1 
	gibuf1
[259];

2 
	gibuf2
[259];

3 
	geÊg
;

4 
	glÊg
 1;

5 
	glöe
[2] {0, 1};

6 
	gchr
[2] { -1, -1};

8 
	$maö
(
¨gc
, 
¨gv
)

9 **
¨gv
;

11 
c1
, 
c2
;

12 *
¨g
;

14 if(
¨gc
 < 3)

15 
«rg
;

16 
¨g
 = 
¨gv
[1];

17 if(
¨g
[0] == '-' &&árg[1] == 's') {

18 
lÊg
--;

19 
¨gv
++;

20 
¨gc
--;

22 
¨g
 = 
¨gv
[1];

23 if(
¨g
[0] == '-' &&árg[1] == 'l') {

24 
lÊg
++;

25 
¨gv
++;

26 
¨gc
--;

28 if(
¨gc
 < 3)

29 
«rg
;

30 
¨g
 = 
¨gv
[1];

31 if(
	`f›í
(
¨g
, 
ibuf1
) < 0)

32 
b¨g
;

33 
¨g
 = 
¨gv
[2];

34 if(
	`f›í
(
¨g
, 
ibuf2
) < 0)

35 
b¨g
;

37 
lo›
:

38 i‡(++
chr
[1]==0)

39 
chr
[0]++;

40 
c1
 = 
	`gëc
(
ibuf1
);

41 
c2
 = 
	`gëc
(
ibuf2
);

42 if(
c1
 =
c2
) {

43 i‡(
c1
 == '\n')

44 i‡(++
löe
[1]==0)

45 
löe
[0]++;

46 if(
c1
 == -1) {

47 if(
eÊg
)

48 
	`exô
(1);

49 
	`exô
(0);

51 
lo›
;

53 if(
lÊg
 == 0)

54 
	`exô
(1);

55 if(
c1
 == -1) {

56 
¨g
 = 
¨gv
[1];

57 
órg
;

59 if(
c2
 == -1)

60 
órg
;

61 if(
lÊg
 == 1) {

62 
	`¥ötf
("%†%†dif„r: ch¨ %s,Üöê", 
¨gv
[1], 
¨g
,

63 
	`locv
(
chr
[0], chr[1]));

64 
	`¥ötf
("%s\n", 
	`locv
(
löe
[0],Üine[1]));

65 
	`exô
(1);

67 
eÊg
 = 1;

68 
	`¥ötf
("%5†%3ÿ%3o\n", 
	`locv
(
chr
[0], chr[1]), 
c1
, 
c2
);

69 
lo›
;

71 
«rg
:

72 
	`¥ötf
("arg count\n");

73 
	`exô
(2);

75 
b¨g
:

76 
	`¥ötf
("ˇ¬Ÿ o≥¿%s\n", 
¨g
);

77 
	`exô
(2);

79 
órg
:

80 
	`¥ötf
("EOF o¿%s\n", 
¨g
);

81 
	`exô
(1);

82 
	}
}

84 
	$putch¨
(
c
)

87 
	`wrôe
(1, &
c
, 1);

88 
	}
}

	@usr/source/s1/comm.c

1 
	#LB
 250

	)

2 
	g⁄e
;

3 
	gtwo
;

4 
	gthªe
;

6 *
	gldr
[3];

8 
	gib1
[518];

9 
	gib2
[518];

10 
	$maö
(
¨gc
,
¨gv
)

11 *
¨gv
[];

13 
fout
;

14 
l
;

15 
lb1
[
LB
],
lb2
[80];

17 
ldr
[0] = "";

18 
ldr
[1] = "\t";

19 
ldr
[2] = "\t\t";

20 if(
¨gc
 > 1) {

21 if(*
¨gv
[1] == '-' &&árgv[1][1] != 0) {

22 
l
 = 1;

23 *++
¨gv
[1]) {

24 *
¨gv
[1]) {

26 if(!
⁄e
) {

27 
⁄e
 = 1;

28 
ldr
[1][0] =

29 
ldr
[2][
l
--] = '\0';

33 if(!
two
) {

34 
two
 = 1;

35 
ldr
[2][
l
--] = '\0';

39 
thªe
 = 1;

42 
	`¥ötf
("IŒegÆ fœg: %c\n",*
¨gv
[1]);

43 
	`exô
();

46 
¨gv
++;

47 
¨gc
--;

51 if(
¨gc
 < 3) {

52 
	`¥ötf
("Arg¯%d\n",
¨gc
);

53 
	`exô
();

56 
	`›ífû
(
¨gv
[1],
ib1
);

57 
	`›ífû
(
¨gv
[2],
ib2
);

58 
fout
 = 
	`dup
(1);

61 if(
	`rd
(
ib1
,
lb1
) < 0) {

62 if(
	`rd
(
ib2
,
lb2
Ë< 0Ë
	`exô
();

63 
	`c›y
(
ib2
,
lb2
,2);

65 if(
	`rd
(
ib2
,
lb2
Ë< 0Ë
	`c›y
(
ib1
,
lb1
,1);

69 
	`com∑ª
(
lb1
,
lb2
)) {

72 
	`wr
(
lb1
,3);

73 if(
	`rd
(
ib1
,
lb1
) < 0) {

74 if(
	`rd
(
ib2
,
lb2
Ë< 0Ë
	`„xô
();

75 
	`c›y
(
ib2
,
lb2
,2);

77 if(
	`rd
(
ib2
,
lb2
Ë< 0Ë
	`c›y
(
ib1
,
lb1
,1);

81 
	`wr
(
lb1
,1);

82 if(
	`rd
(
ib1
,
lb1
Ë< 0Ë
	`c›y
(
ib2
,
lb2
,2);

86 
	`wr
(
lb2
,2);

87 if(
	`rd
(
ib2
,
lb2
Ë< 0Ë
	`c›y
(
ib1
,
lb1
,1);

91 
	}
}

93 
	$rd
(
fûe
,
buf
)

94 *
buf
;

97 
i
;

98 
i
 = 0;

99 (*
buf
 = 
	`gëc
(
fûe
)) >=0) {

100 if(*
buf
 ='\n' || 
i
 > 
LB
-2) {

101 *
buf
 = '\0';

104 
i
++;

105 
buf
++;

108 
	}
}

110 
	$wr
(
°r
,
n
)

111 *
°r
;

114 
n
) {

117 if(
⁄e
) ;

121 if(
two
) ;

125 if(
thªe
) ;

127 
	`¥ötf
("%s%s\n",
ldr
[
n
-1],
°r
);

128 
	}
}

130 
	$c›y
(
ibuf
,
lbuf
,
n
)

133 
	`wr
(
lbuf
,
n
);

134 } 
	`rd
(
ibuf
,
lbuf
) >= 0);

136 
	`Êush
();

137 
	`exô
();

138 
	}
}

140 
	$com∑ª
(
a
,
b
)

141 *
a
,*
b
;

143 *
ø
,*
rb
;

145 
ø
 = --
a
;

146 
rb
 = --
b
;

147 *++
ø
 =*++
rb
)

148 if(*
ø
 == '\0') (0);

149 if(*
ø
 < *
rb
) (1);

151 
	}
}

152 
	$„xô
()

154 
	`Êush
();

155 
	`exô
();

156 
	}
}

158 
	$›ífû
(
s
,
b
)

159 *
s
;

160 *
b
;

162 if(
s
[0]=='-' && s[1]==0)

163 
b
[0] = 0;

164 if(
	`f›í
(
s
, 
b
) == -1) {

165 
	`¥ötf
("C™'à›í %s\n", 
s
);

166 
	`exô
(1);

168 
	}
}

	@usr/source/s1/cp.c

5 
	$maö
(
¨gc
,
¨gv
)

6 **
¨gv
;

8 
buf
[256];

9 
fﬁd
, 
‚ew
, 
n
, 
˘
, 
ãŒ
;

10 *
p1
, *
p2
, *
bp
;

11 
mode
;

13 
ãŒ
 = 0;

14 if(
¨gc
 =4 && 
¨gv
[1][0] == '-' &&árgv[1][1] == 't') {

15 
¨gc
--;

16 
¨gv
++;

17 
ãŒ
 = 1;

19 if(
¨gc
 != 3) {

20 
	`wrôe
(1, "Usage: cp oldfileÇewfile\n", 26);

21 
	`exô
(1);

23 if((
fﬁd
 = 
	`›í
(
¨gv
[1], 0)) < 0) {

24 
	`wrôe
(1, "Cannot open old file.\n", 22);

25 
	`exô
(1);

27 
	`f°©
(
fﬁd
, 
buf
);

28 
mode
 = 
buf
[2];

29 if((
‚ew
 = 
	`¸ót
(
¨gv
[2], 
mode
)) < 0){

30 
	`°©
(
¨gv
[2], 
buf
);

31 if((
buf
[2] & 060000) == 040000) {

32 
p1
 = 
¨gv
[1];

33 
p2
 = 
¨gv
[2];

34 
bp
 = 
buf
;

35 *
bp
++ = *
p2
++);

36 
bp
[-1] = '/';

37 
p2
 = 
bp
;

38 *
bp
 = *
p1
++)

39 if(*
bp
++ == '/')

40 
bp
 = 
p2
;

41 if((
‚ew
 = 
	`¸ót
(
buf
, 
mode
)) < 0) {

42 
	`wrôe
(1, "Cannot creatÇew file.\n", 23);

43 
	`exô
(1);

46 
	`wrôe
(1, "Cannot creatÇew file.\n", 23);

47 
	`exô
(1);

50 
n
 = 
	`ªad
(
fﬁd
, 
buf
, 512)) {

51 if(
n
 < 0) {

52 
	`wrôe
(1, "ReadÉrror\n", 11);

53 
	`exô
(1);

55 if(
	`wrôe
(
‚ew
, 
buf
, 
n
) !=Ç){

56 
	`wrôe
(1, "WriteÉrror.\n", 13);

57 
	`exô
(1);

59 
˘
++;

61 if(
ãŒ
) {

62 
	`c⁄f
(
˘
, 6, 
buf
);

63 
buf
[3] = '\n';

64 
	`wrôe
(1, 
buf
, 7);

66 
	`exô
(0);

67 
	}
}

69 
	$c⁄f
(
n
,
width
,
buf
)

70 *
buf
;

72 autÿ
i
,
a
;

74 
i
 = 
width
;

75 
i
--Ë
buf
[i] = ' ';

77 
buf
[(
a
 = 
n
/10)?
	`c⁄f
◊,--
width
,buf):--width] =Ç%10 + '0';

79 (++
width
);

80 
	}
}

	@usr/source/s1/date.c

1 
	gtimbuf
[2];

2 *
	gcbp
;

4 *
	gtz«me
[2];

5 
	gdmsize
[];

6 
	gcbuf
[];

7 *
	gcbp
;

10 
	m«me
[8];

11 
	mây
;

12 
	mfûl1
;

13 
	mwtime
[2];

14 
	mfûl2
;

15 } 
	gwtmp
[2];

17 
	$maö
(
¨gc
, 
¨gv
)

18 
¨gc
, **
¨gv
;

20 *
tzn
;

21 
timez⁄e
, *
	`loˇ…ime
();

22 
wf
;

24 if(
¨gc
 > 1) {

25 
cbp
 = 
¨gv
[1];

26 if(
	`gtime
()) {

27 
	`wrôe
(1, "bad conversion\n", 15);

28 
	`exô
();

30 i‡(*
cbp
 != 's') {

32 
	`d∑dd
(
timbuf
, 
timez⁄e
);

34 i‡(
	`loˇ…ime
(
timbuf
)[8])

35 
	`d∑dd
(
timbuf
, -1*60*60);

37 
	`time
(
wtmp
[0].
wtime
);

38 
wtmp
[0].
ây
 = '|';

39 if(
	`°ime
(
timbuf
) < 0)

40 
	`wrôe
(1, "noÖermission\n", 14);

41 i‡((
wf
 = 
	`›í
("/usr/adm/wtmp", 1)) >= 0) {

42 
	`time
(
wtmp
[1].
wtime
);

43 
wtmp
[1].
ây
 = '}';

44 
	`£ek
(
wf
, 0, 2);

45 
	`wrôe
(
wf
, 
wtmp
, 32);

48 
	`time
(
timbuf
);

49 
cbp
 = 
cbuf
;

50 
	`˘ime
(
timbuf
);

51 
	`wrôe
(1, 
cbuf
, 20);

52 
tzn
 = 
tz«me
[
	`loˇ…ime
(
timbuf
)[8]];

53 i‡(
tzn
)

54 
	`wrôe
(1, 
tzn
, 3);

55 
	`wrôe
(1, 
cbuf
+19, 6);

56 
	}
}

58 
	$gtime
()

60 
i
;

61 
y
, 
t
;

62 
d
, 
h
, 
m
;

63 *
	`loˇ…ime
();

64 
¡
[2];

66 i‡(*
cbp
 == 's')

67 (
	`•idîtime
());

68 
t
 = 
	`g∑ú
();

69 if(
t
<1 ||Å>12)

70 
bad
;

71 
d
 = 
	`g∑ú
();

72 if(
d
<1 || d>31)

73 
bad
;

74 
h
 = 
	`g∑ú
();

75 if(
h
 == 24) {

76 
h
 = 0;

77 
d
++;

79 
m
 = 
	`g∑ú
();

80 if(
m
<0 || m>59)

81 
bad
;

82 
y
 = 
	`g∑ú
();

83 i‡(
y
<0) {

84 
	`time
(
¡
);

85 
y
 = 
	`loˇ…ime
(
¡
)[5];

87 i‡(*
cbp
 == 'p')

88 
h
 =+ 12;

89 i‡(
h
<0 || h>23)

90 
bad
;

91 
timbuf
[0] = 0;

92 
timbuf
[1] = 0;

93 
y
 =+ 1900;

94 
i
=1970; i<
y
; i++)

95 
	`gdadd
(
	`dysize
(
i
));

96 --
t
)

97 
	`gdadd
(
dmsize
[
t
-1]);

98 
	`gdadd
(
d
-1);

99 
	`gmdadd
(24, 
h
);

100 
	`gmdadd
(60, 
m
);

101 
	`gmdadd
(60, 0);

104 
bad
:

106 
	}
}

108 
	$gdadd
(
n
)

110 *
t
;

112 
t
 = 
timbuf
[1]+
n
;

113 if(
t
 < 
timbuf
[1])

114 
timbuf
[0]++;

115 
timbuf
[1] = 
t
;

116 
	}
}

118 
	$gmdadd
(
m
, 
n
)

120 
t1
;

122 
timbuf
[0] =* 
m
;

123 
t1
 = 
timbuf
[1];

124 --
m
)

125 
	`gdadd
(
t1
);

126 
	`gdadd
(
n
);

127 
	}
}

129 
	$g∑ú
()

131 
c
, 
d
;

132 *
˝
;

134 
˝
 = 
cbp
;

135 if(*
˝
 == 0)

137 
c
 = (*
˝
++ - '0') * 10;

138 i‡(
c
<0 || c>100)

140 if(*
˝
 == 0)

142 i‡((
d
 = *
˝
++ - '0') < 0 || d > 9)

144 
cbp
 = 
˝
;

145  (
c
+
d
);

146 
	}
}

151 
	gasktime
[] {0226, 0207, 0205};

153 
	$•idîtime
()

155 
tiuf
, 
n
;

156 
buf
[10];

157 °ru˘ { 
ch
[4]; };

158 
c
;

160 i‡((
tiuf
 = 
	`›í
("/dev/tiu/d0", 2)) < 0)

163 
	`¢°©
(
tiuf
, &
c
, 3);

165 
c
 = 3;

166 
	`¢°©
(
tiuf
, &
c
, 0);

167 
	`wrôe
(
tiuf
, 
asktime
, 3);

168 
	`¢°©
(
tiuf
, &
c
, 3);

169 
n
 = 
	`ªad
(
tiuf
, 
buf
, 10);

171 
	`¢°©
(
tiuf
, &
c
, 1);

172 i‡(
c
!=3 || 
buf
[0]!=012 || buf[5]!=0177600)

174 
timbuf
[0].
ch
[0] = 
buf
[2];

175 
timbuf
[0].
ch
[1] = 
buf
[1];

176 
timbuf
[0].
ch
[2] = 
buf
[4];

177 
timbuf
[0].
ch
[3] = 
buf
[3];

179 
	}
}

	@usr/source/s1/dd.c

1 
	#LCASE
 01

	)

2 
	#UCASE
 02

	)

3 
	#SWAB
 04

	)

4 
	#NERR
 010

	)

5 
	#SYNC
 020

	)

6 
	gcÊag
;

7 
	gfÊag
;

8 
	gskù
;

9 
	gcou¡
;

10 *
	g°rög
;

11 *
	gifûe
;

12 *
	gofûe
;

13 *
	gibuf
;

14 *
	gobuf
;

15 *
	gibs
 512;

16 *
	gobs
 512;

17 *
	gbs
;

18 *
	gcbs
;

19 *
	gibc
;

20 *
	gobc
;

21 *
	gcbc
;

22 
	gni‰
;

23 
	gnùr
;

24 
	gno‰
;

25 
	gn›r
;

26 
	g¡runc
;

27 
	gibf
;

28 
	gobf
;

29 *
	g›
;

30 
	gn•a˚
;

31 
	gëﬂ
[]

66 
	g©€
[]

103 
	$maö
(
¨gc
, 
¨gv
)

104 
¨gc
;

105 **
¨gv
;

107 (*
c⁄v
)();

108 *
ù
;

109 
c
;

110 
	`ebcdic
(), 
	`ascii
(), 
	`nuŒ
(), 
	`˙uŒ
(), 
	`ãrm
();

111 
a
;

113 
c⁄v
 = 
nuŒ
;

114 
c
=1; c<
¨gc
; c++) {

115 
°rög
 = 
¨gv
[
c
];

116 if(
	`m©ch
("ibs=")) {

117 
ibs
 = 
	`numbî
();

120 if(
	`m©ch
("obs=")) {

121 
obs
 = 
	`numbî
();

124 if(
	`m©ch
("cbs=")) {

125 
cbs
 = 
	`numbî
();

128 i‡(
	`m©ch
("bs=")) {

129 
bs
 = 
	`numbî
();

132 if(
	`m©ch
("if=")) {

133 
ifûe
 = 
°rög
;

136 if(
	`m©ch
("of=")) {

137 
ofûe
 = 
°rög
;

140 if(
	`m©ch
("skip=")) {

141 
skù
 = 
	`numbî
();

144 if(
	`m©ch
("count=")) {

145 
cou¡
 = 
	`numbî
();

148 if(
	`m©ch
("conv=")) {

149 
˛o›
:

150 if(
	`m©ch
(","))

151 
˛o›
;

152 if(*
°rög
 == '\0')

154 if(
	`m©ch
("ebcdic")) {

155 
c⁄v
 = 
ebcdic
;

156 
˛o›
;

158 if(
	`m©ch
("ascii")) {

159 
c⁄v
 = 
ascii
;

160 
˛o›
;

162 if(
	`m©ch
("lcase")) {

163 
cÊag
 =| 
LCASE
;

164 
˛o›
;

166 if(
	`m©ch
("ucase")) {

167 
cÊag
 =| 
UCASE
;

168 
˛o›
;

170 if(
	`m©ch
("swab")) {

171 
cÊag
 =| 
SWAB
;

172 
˛o›
;

174 if(
	`m©ch
("noerror")) {

175 
cÊag
 =| 
NERR
;

176 
˛o›
;

178 if(
	`m©ch
("sync")) {

179 
cÊag
 =| 
SYNC
;

180 
˛o›
;

183 
	`¥ötf
("badárg: %s\n", 
°rög
);

184 
	`exô
();

186 if(
c⁄v
 =
nuŒ
 && 
cÊag
&(
LCASE
|
UCASE
))

187 
c⁄v
 = 
˙uŒ
;

188 i‡(
ifûe
)

189 
ibf
 = 
	`›í
(
ifûe
, 0);

191 
ibf
 = 
	`dup
(0);

192 if(
ibf
 < 0) {

193 
	`¥ötf
("ˇ¬Ÿ o≥n: %s\n", 
ifûe
);

194 
	`exô
();

196 i‡(
ofûe
)

197 
obf
 = 
	`¸ót
(
ofûe
, 0666);

199 
obf
 = 
	`dup
(1);

200 if(
obf
 < 0) {

201 
	`¥ötf
("ˇ¬Ÿ cª©e: %s\n", 
ofûe
);

202 
	`exô
();

204 i‡(
bs
) {

205 
ibs
 = 
obs
 = 
bs
;

206 i‡(
c⁄v
 =
nuŒ
)

207 
fÊag
++;

209 if(
ibs
 =0 || 
obs
 == 0) {

210 
	`¥ötf
("counts: cannot be zero\n");

211 
	`exô
();

213 
ibuf
 = 
	`sbrk
(
ibs
);

214 i‡(
fÊag
)

215 
obuf
 = 
ibuf
;

217 
obuf
 = 
	`sbrk
(
obs
);

218 if(
ibuf
 =-1 || 
obuf
 == -1) {

219 
	`¥ötf
("notÉnough memory\n");

220 
	`exô
();

222 
ibc
 = 0;

223 
obc
 = 0;

224 
cbc
 = 0;

225 
›
 = 
obuf
;

227 i‡((
	`sig«l
(2, 1) & 01) == 0)

228 
	`sig«l
(2, 
ãrm
);

229 
skù
) {

230 
	`ªad
(
ibf
, 
ibuf
, 
ibs
);

231 
skù
--;

234 
lo›
:

235 if(
ibc
-- == 0) {

236 
ibc
 = 0;

237 if(
cou¡
==0 || 
ni‰
+
nùr
!=count) {

238 if(
cÊag
&(
NERR
|
SYNC
))

239 
ù
=
ibuf
+
ibs
; ip>ibuf;)

240 *--
ù
 = 0;

241 
ibc
 = 
	`ªad
(
ibf
, 
ibuf
, 
ibs
);

243 if(
ibc
 == -1) {

244 
	`≥º‹
("read");

245 if((
cÊag
&
NERR
) == 0) {

246 
	`Êsh
();

247 
	`ãrm
();

249 
ibc
 = 0;

250 
c
=0; c<
ibs
; c++)

251 if(
ibuf
[
c
] != 0)

252 
ibc
 = 
c
;

253 
	`°©s
();

255 if(
ibc
 == 0) {

256 
	`Êsh
();

257 
	`ãrm
();

259 if(
ibc
 !
ibs
) {

260 
nùr
++;

261 if(
cÊag
&
SYNC
)

262 
ibc
 = 
ibs
;

264 
ni‰
++;

265 
ù
 = 
ibuf
;

266 
c
 = (
ibc
>>1) & ~1;

267 if(
cÊag
&
SWAB
 && 
c
)

269 
a
 = *
ù
++;

270 
ù
[-1] = *ip;

271 *
ù
++ = 
a
;

272 } --
c
);

273 
ù
 = 
ibuf
;

274 i‡(
fÊag
) {

275 
obc
 = 
ibc
;

276 
	`Êsh
();

277 
ibc
 = 0;

279 
lo›
;

281 
c
 = 0;

282 
c
 =| *
ù
++;

283 (*
c⁄v
)(
c
);

284 
lo›
;

285 
	}
}

287 
	$Êsh
()

289 
c
;

291 if(
obc
) {

292 if(
obc
 =
obs
)

293 
no‰
++; 

294 
n›r
++;

295 
c
 = 
	`wrôe
(
obf
, 
obuf
, 
obc
);

296 if(
c
 !
obc
) {

297 
	`≥º‹
("write");

298 
	`ãrm
();

300 
obc
 = 0;

302 
	}
}

304 
	$m©ch
(
s
)

305 *
s
;

307 *
cs
;

309 
cs
 = 
°rög
;

310 *
cs
++ =*
s
)

311 if(*
s
++ == '\0')

312 
åue
;

313 if(*
s
 != '\0')

316 
åue
:

317 
cs
--;

318 
°rög
 = 
cs
;

320 
	}
}

322 
	$numbî
()

324 *
cs
;

325 
n
;

327 
cs
 = 
°rög
;

328 
n
 = 0;

329 *
cs
 >= '0' && *cs <= '9')

330 
n
 =Ç*10 + *
cs
++ - '0';

332 *
cs
++) {

335 
n
 =* 1024;

339 
n
 =* 2;

343 
n
 =* 512;

348 
°rög
 = 
cs
;

349 
n
 =* 
	`numbî
();

352 (
n
);

354 
	`¥ötf
("nŸáÇumbî: %s\n", 
°rög
);

355 
	`exô
();

356 
	}
}

358 
	$˙uŒ
(
cc
)

360 
c
;

362 
c
 = 
cc
;

363 if(
cÊag
&
UCASE
 && 
c
>='a' && c<='z')

364 
c
 =+ 'A'-'a';

365 if(
cÊag
&
LCASE
 && 
c
>='A' && c<='Z')

366 
c
 =+ 'a'-'A';

367 
	`nuŒ
(
c
);

368 
	}
}

370 
	$nuŒ
(
c
)

373 *
›
 = 
c
;

374 
›
++;

375 if(++
obc
 >
obs
) {

376 
	`Êsh
();

377 
›
 = 
obuf
;

379 
	}
}

381 
	$ascii
(
cc
)

383 
c
;

385 
c
 = 0;

386 
c
 =| 
ëﬂ
[
cc
];

387 if(
cbs
 == 0) {

388 
	`˙uŒ
(
c
);

391 if(
c
 == ' ') {

392 
n•a˚
++;

393 
out
;

395 
n•a˚
 > 0) {

396 
	`nuŒ
(' ');

397 
n•a˚
--;

399 
	`˙uŒ
(
c
);

401 
out
:

402 if(++
cbc
 >
cbs
) {

403 
	`nuŒ
('\n');

404 
cbc
 = 0;

405 
n•a˚
 = 0;

407 
	}
}

409 
	$ebcdic
(
cc
)

411 
c
;

413 
c
 = 
cc
;

414 if(
cÊag
&
UCASE
 && 
c
>='a' && c<='z')

415 
c
 =+ 'A'-'a';

416 if(
cÊag
&
LCASE
 && 
c
>='A' && c<='Z')

417 
c
 =+ 'a'-'A';

418 
c
 = 
©€
[c] & 0377;

419 if(
cbs
 == 0) {

420 
	`nuŒ
(
c
);

423 if(
cc
 == '\n') {

424 
cbc
 < 
cbs
) {

425 
	`nuŒ
(
©€
[' ']);

426 
cbc
++;

428 
cbc
 = 0;

431 if(
cbc
 =
cbs
)

432 
¡runc
++;

433 
cbc
++;

434 if(
cbc
 <
cbs
)

435 
	`nuŒ
(
c
);

436 
	}
}

438 
	$ãrm
()

441 
	`°©s
();

442 
	`exô
();

443 
	}
}

445 
	$°©s
()

448 
	`¥ötf
("%l+%»ªc‹d†ö\n", 
ni‰
, 
nùr
);

449 
	`¥ötf
("%l+%»ªc‹d†out\n", 
no‰
, 
n›r
);

450 if(
¡runc
)

451 
	`¥ötf
("%»åunˇãdÑec‹ds\n", 
¡runc
);

452 
	}
}

454 
	$putch¨
(
c
)

457 
	`wrôe
(2, &
c
, 1);

458 
	}
}

	@usr/source/s1/df.c

1 *
	gd¨gv
[]

10 *
	ms_isize
;

11 *
	ms_fsize
;

12 
	ms_n‰ì
;

13 
	ms_‰ì
[100];

14 
	ms_nöode
;

15 
	ms_öode
[100];

16 
	ms_Êock
;

17 
	ms_ûock
;

18 
	ms_fmod
;

19 
	mtime
[2];

20 
	m∑d
[50];

21 } 
	gsblock
;

23 
	gfi
;

25 
	$maö
(
¨gc
, 
¨gv
)

26 **
¨gv
;

28 
i
;

30 if(
¨gc
 <= 1) {

31 
¨gc
 = 1; 
d¨gv
[argc];árgc++);

32 
¨gv
 = 
d¨gv
;

35 
i
=1; i<
¨gc
; i++) {

36 if(
¨gc
 > 1)

37 
	`¥ötf
("%†", 
¨gv
[
i
]);

38 
	`d‰ì
(
¨gv
[
i
]);

40 
	}
}

42 
	$d‰ì
(
fûe
)

43 *
fûe
;

45 
i
;

47 
fi
 = 
	`›í
(
fûe
, 0);

48 if(
fi
 < 0) {

49 
	`¥ötf
("ˇ¬Ÿ o≥¿%s\n", 
fûe
);

52 
	`sync
();

53 
	`bªad
(1, &
sblock
);

54 
i
 = 0;

55 
	`Æloc
())

56 
i
++;

57 
	`¥ötf
("%l\n", 
i
);

58 
	`˛o£
(
fi
);

59 
	}
}

61 
	$Æloc
()

63 
b
, 
i
, 
buf
[256];

65 
i
 = --
sblock
.
s_n‰ì
;

66 if(
i
<0 || i>=100) {

67 
	`¥ötf
("bad free count\n");

70 
b
 = 
sblock
.
s_‰ì
[
i
];

71 if(
b
 == 0)

73 if(
b
<
sblock
.
s_isize
+2 || b>=sblock.
s_fsize
) {

74 
	`¥ötf
("bad fªêblock (%l)\n", 
b
);

77 if(
sblock
.
s_n‰ì
 <= 0) {

78 
	`bªad
(
b
, 
buf
);

79 
sblock
.
s_n‰ì
 = 
buf
[0];

80 
i
=0; i<100; i++)

81 
sblock
.
s_‰ì
[
i
] = 
buf
[i+1];

83 (
b
);

84 
	}
}

86 
	$bªad
(
bno
, 
buf
)

88 
n
;

89 
î∫o
;

91 
	`£ek
(
fi
, 
bno
, 3);

92 if((
n
=
	`ªad
(
fi
, 
buf
, 512)) != 512) {

93 
	`¥ötf
("ªadÉº‹ %d\n", 
bno
);

94 
	`¥ötf
("cou¡ = %d;Éºnÿ%d\n", 
n
, 
î∫o
);

95 
	`exô
();

97 
	}
}

	@usr/source/s1/diff1.c

66 
	sbuf
 {

67 
	mfdes
;

68 
	md©a
[516];

69 } *
	gbuf1
, *
	gbuf2
;

71 
	sˇnd
 {

72 
	mx
;

73 
	my
;

74 
ˇnd
 *
	m¥ed
;

75 } 
	gˇnd
;

76 
	slöe
 {

77 
	m£rül
;

78 
	mvÆue
;

79 } *
	gfûe
[2], 
	glöe
;

80 
	gÀn
[2];

81 *
	g˛ass
;

82 *
	gmembî
;

83 
ˇnd
 **
	gkli°
;

84 *
	gJ
;

85 *
	gixﬁd
;

86 *
	gix√w
;

88 *
	g¨ó
;

89 *
	gt›
;

90 
	$Æloc
(
n
)

92 *
p
;

93 
p
 = 
¨ó
;

94 
n
 = (n+1) & ~1;

95 
¨ó
 =+ 
n
;

96 
¨ó
 > 
t›
) {

97 if(
	`sbrk
(1024) == -1) {

98 
	`mesg
("Out of space\n");

99 
	`exô
(1);

101 
t›
 =+ 1024;

103 (
p
);

104 
	}
}

106 
	$mesg
(
s
)

107 *
s
;

109 *
s
)

110 
	`wrôe
(2,
s
++,1);

111 
	}
}

113 
	$s‹t
(
a
,
n
)

114 
löe
 *
a
;

116 
löe
 
w
;

117 
j
,
m
;

118 
löe
 *
ai
;

119 
löe
 *
aim
;

120 
k
;

121 
j
=1;j<=
n
;j=* 2)

122 
m
 = 2*
j
 - 1;

123 
m
=/2;m!=0;m=/2) {

124 
k
 = 
n
-
m
;

125 
j
=1;j<=
k
;j++) {

126 
ai
 = &
a
[
j
];áò>á;áò=- 
m
) {

127 
aim
 = &
ai
[
m
];

128 if(
aim
->
vÆue
 > 
ai
[0].value ||

129 
aim
->
vÆue
 =
ai
[0].value &&

130 
aim
->
£rül
 > 
ai
[0].serial)

132 
w
.
vÆue
 = 
ai
[0].value;

133 
ai
[0].
vÆue
 = 
aim
->value;

134 
aim
->
vÆue
 = 
w
.value;

135 
w
.
£rül
 = 
ai
[0].serial;

136 
ai
[0].
£rül
 = 
aim
->serial;

137 
aim
->
£rül
 = 
w
.serial;

141 
	}
}

143 
	$uns‹t
(
f
, 
l
, 
b
)

144 
löe
 *
f
;

145 *
b
;

147 *
a
;

148 
i
;

149 
a
 = 
	`Æloc
((
l
+1)*(a[0]));

150 
i
=1;i<=
l
;i++)

151 
a
[
f
[
i
].
£rül
] = f[i].
vÆue
;

152 
i
=1;i<=
l
;i++)

153 
b
[
i
] = 
a
[i];

154 
¨ó
 = 
a
;

155 
	}
}

157 
	$¥ï¨e
(
i
, 
¨g
)

158 *
¨g
;

160 *
ãmp
;

161 
ãmp
 = 
fûe
[
i
] = 
¨ó
;

162 
	`Æloc
((
löe
));

163 
	`öput
(
¨g
);

164 
Àn
[
i
] = (
¨ó
 - 
ãmp
)/(
löe
) - 1;

165 
	`Æloc
((
löe
));

166 
	`s‹t
(
fûe
[
i
], 
Àn
[i]);

167 
	}
}

169 
	$öput
(
¨g
)

171 
h
, 
i
;

172 
löe
 *
p
;

173 if(
	`f›í
(
¨g
,
buf1
) == -1) {

174 
	`mesg
("Cannot open ");

175 
	`mesg
(
¨g
);

176 
	`mesg
("\n");

177 
	`exô
(1);

179 
i
=0; 
h
=
	`ªadhash
(
buf1
);) {

180 
p
 = 
	`Æloc
((
löe
));

181 
p
->
£rül
 = ++
i
;

182 
p
->
vÆue
 = 
h
;

184 
	`˛o£
(
buf1
->
fdes
);

185 
	}
}

187 
	$equiv
(
a
,
n
,
b
,
m
,
c
)

188 
löe
 *
a
, *
b
;

189 *
c
;

191 
i
, 
j
;

192 
i
 = 
j
 = 1;

193 
i
<=
n
 && 
j
<=
m
) {

194 if(
a
[
i
].
vÆue
 <
b
[
j
].value)

195 
a
[
i
++].
vÆue
 = 0;

196 if(
a
[
i
].
vÆue
 =
b
[
j
].value)

197 
a
[
i
++].
vÆue
 = 
j
;

199 
j
++;

201 
i
 <
n
)

202 
a
[
i
++].
vÆue
 = 0;

203 
b
[
m
+1].
vÆue
 = 0;

204 
j
 = 0;

205 ++
j
 <
m
) {

206 
c
[
j
] = -
b
[j].
£rül
;

207 
b
[
j
+1].
vÆue
 == b[j].value) {

208 
j
++;

209 
c
[
j
] = 
b
[j].
£rül
;

212 
c
[
j
] = -1;

213 
	}
}

215 
	$maö
(
¨gc
, 
¨gv
)

216 **
¨gv
;

218 
k
;

220 if(
¨gc
>1 && *
¨gv
[1]=='-') {

221 
¨gc
--;

222 
¨gv
++;

224 if(
¨gc
!=3) {

225 
	`mesg
("Arg count\n");

226 
	`exô
(1);

229 
¨ó
 = 
t›
 = 
	`sbrk
(0);

230 
buf1
 = 
	`Æloc
((*buf1));

231 
	`¥ï¨e
(0, 
¨gv
[1]);

232 
	`¥ï¨e
(1, 
¨gv
[2]);

234 
membî
 = 
fûe
[1];

235 
	`equiv
(
fûe
[0], 
Àn
[0], fûe[1],Üí[1], 
membî
);

237 
˛ass
 = 
fûe
[0];

238 
	`uns‹t
(
fûe
[0], 
Àn
[0], 
˛ass
);

240 
kli°
 = &
˛ass
[
Àn
[0]+2];

241 
¨ó
 = &
membî
[
Àn
[1]+2];

242 
k
 = 
	`°⁄e
(
˛ass
, 
Àn
[0], 
membî
, 
kli°
);

243 
J
 = 
˛ass
;

244 
	`uƒavñ
(
kli°
[
k
]);

246 
ixﬁd
 = 
kli°
;

247 
ix√w
 = 
fûe
[1];

248 
¨ó
 = &
ix√w
[
Àn
[1]+2];

249 
buf2
 = 
	`Æloc
((*buf2));

250 if(
	`check
(
¨gv
))

251 
	`mesg
("Jackpot\n");

252 
	`ouçut
(
¨gv
);

253 
	}
}

255 
	$°⁄e
(
a
,
n
,
b
,
c
)

256 *
a
;

257 *
b
;

258 
ˇnd
 **
c
;

260 
i
, 
k
,
y
;

261 
j
, 
l
;

262 
skù
;

263 
k
 = 0;

264 
c
[0] = 0;

265 
i
=1; i<=
n
; i++) {

266 
j
 = 
a
[
i
];

267 if(
j
==0)

269 
skù
 = 0;

271 
y
 = 
b
[
j
];

272 if(
y
<0) y = -y;

273 if(
skù
)

275 
l
 = 
	`£¨ch
(
c
, 
k
, 
y
);

276 if(
l
 > 
k
) {

277 
c
[
k
+1] = 
	`√wˇnd
(
i
,
y
,c[k]);

278 
skù
 = 1;

279 
k
++;

281 if(
c
[
l
]->
y
 > y && c[l]->
x
 < 
i
)

282 
c
[
l
] = 
	`√wˇnd
(
i
,
y
,c[l-1]);

283 } 
b
[++
j
] > 0);

285 (
k
);

286 
	}
}

288 
ˇnd
 *

289 
	$√wˇnd
(
x
,
y
,
¥ed
)

290 
ˇnd
 *
¥ed
;

292 
ˇnd
 *
p
;

293 
p
 = 
	`Æloc
((
ˇnd
));

294 
p
->
x
 = x;

295 
p
->
y
 = y;

296 
p
->
¥ed
 =Öred;

297 (
p
);

298 
	}
}

300 
	$£¨ch
(
c
, 
k
, 
y
)

301 
ˇnd
 **
c
;

303 
i
, 
j
, 
l
;

304 
t
;

305 
i
 = 0;

306 
j
 = 
k
+1;

307 (
l
=(
i
+
j
)/2) > i) {

308 
t
 = 
c
[
l
]->
y
;

309 if(
t
 > 
y
)

310 
j
 = 
l
;

311 if(
t
 < 
y
)

312 
i
 = 
l
;

314 (
l
);

316 (
l
+1);

317 
	}
}

319 
	$uƒavñ
(
p
)

320 
ˇnd
 *
p
;

322 
i
;

323 
i
=0; i<=
Àn
[0]; i++)

324 
J
[
i
] = 0;

325 
p
) {

326 
J
[
p
->
x
] =Ö->
y
;

327 
p
 =Ö->
¥ed
;

329 
	}
}

336 
	$check
(
¨gv
)

337 **
¨gv
;

339 
i
, 
j
;

340 
˘ﬁd
, 
˘√w
;

341 
jackpŸ
;

342 
c
,
d
;

343 
	`f›í
(
¨gv
[1],
buf1
);

344 
	`f›í
(
¨gv
[2],
buf2
);

345 
j
 = 1;

346 
˘ﬁd
 = 
˘√w
 = 0;

347 
ixﬁd
[0] = 
ix√w
[0] = 0;

348 
jackpŸ
 = 0;

349 
i
=1;i<=
Àn
[0];i++) {

350 if(
J
[
i
]==0) {

351 
	`gëc
(
buf1
)!='\n'Ë
˘ﬁd
++;

352 
ixﬁd
[
i
] = ++
˘ﬁd
;

355 
j
<
J
[
i
]) {

356 
	`gëc
(
buf2
)!='\n'Ë
˘√w
++;

357 
ix√w
[
j
] = ++
˘√w
;

358 
j
++;

360 (
c
=
	`gëc
(
buf1
))==(
d
=gëc(
buf2
))) {

361 if(
c
=='\n') ;

362 
˘ﬁd
++;

363 
˘√w
++;

365 
c
!='\n') {

366 
jackpŸ
++;

367 
J
[
i
] = 0;

368 
c
 = 
	`gëc
(
buf1
);

369 
˘ﬁd
++;

371 
ixﬁd
[
i
] = ++
˘ﬁd
;

372 
d
!='\n') {

373 
jackpŸ
++;

374 
J
[
i
] = 0;

375 
d
 = 
	`gëc
(
buf2
);

376 
˘√w
++;

378 
ix√w
[
j
] = ++
˘√w
;

379 
j
++;

381 ;
j
<=
Àn
[1];j++) {

382 
	`gëc
(
buf2
)!='\n'Ë
˘√w
++;

383 
ix√w
[
j
] = ++
˘√w
;

385 
	`˛o£
(
buf1
->
fdes
);

386 
	`˛o£
(
buf2
->
fdes
);

387 (
jackpŸ
);

388 
	}
}

390 
	$ouçut
(
¨gv
)

391 **
¨gv
;

393 
dú
;

394 
m
;

395 
i0
,
i1
,
j0
,
j1
;

396 
fout
;

397 
dú
 = **
¨gv
=='-';

398 
fout
 = 
	`dup
(1);

399 
buf1
->
fdes
 = 
	`›í
(
¨gv
[1],0);

400 
buf2
->
fdes
 = 
	`›í
(
¨gv
[2],0);

401 
m
 = 
Àn
[0];

402 
J
[0] = 0;

403 
J
[
m
+1] = 
Àn
[1]+1;

404 if(
dú
==0Ë
i0
=1;i0<=
m
;i0=
i1
+1) {

405 
i0
<=
m
&&
J
[i0]==J[i0-1]+1) i0++;

406 
j0
 = 
J
[
i0
-1]+1;

407 
i1
 = 
i0
-1;

408 
i1
<
m
&&
J
[i1+1]==0) i1++;

409 
j1
 = 
J
[
i1
+1]-1;

410 
J
[
i1
] = 
j1
;

411 
	`ch™ge
(
i0
,
i1
,
j0
,
j1
,
dú
);

412 } 
i0
=
m
;i0>=1;i0=
i1
-1) {

413 
i0
>=1&&
J
[i0]==J[i0+1]-1&&J[i0]!=0) i0--;

414 
j0
 = 
J
[
i0
+1]-1;

415 
i1
 = 
i0
+1;

416 
i1
>1&&
J
[i1-1]==0) i1--;

417 
j1
 = 
J
[
i1
-1]+1;

418 
J
[
i1
] = 
j1
;

419 
	`ch™ge
(
i1
,
i0
,
j1
,
j0
,
dú
);

421 if(
m
==0)

422 
	`ch™ge
(1,0,1,
Àn
[1],
dú
);

423 
	`Êush
();

424 
	}
}

426 
	$ch™ge
(
a
,
b
,
c
,
d
,
dú
)

428 if(
a
>
b
&&
c
>
d
) ;

429 
	`ønge
(
a
,
b
);

430 
	`putch¨
(
a
>
b
?'a':
c
>
d
?'d':'c');

431 if(
dú
==0Ë
	`ønge
(
c
,
d
);

432 
	`putch¨
('\n');

433 if(
dú
==0) {

434 
	`„tch
(
ixﬁd
,
a
,
b
,
buf1
,"* ");

435 if(
a
<=
b
&&
c
<=
d
Ë
	`¥ötf
("---\n");

437 
	`„tch
(
ix√w
,
c
,
d
,
buf2
,
dú
==0?". ":"");

438 if(
dú
!=0&&
c
<=
d
Ë
	`¥ötf
(".\n");

439 
	}
}

441 
	$ønge
(
a
,
b
)

443 if(
a
>
b
Ë
	`¥ötf
("%d",b);

444 if(
a
<=
b
Ë
	`¥ötf
("%d",a);

445 if(
a
<
b
Ë
	`¥ötf
(",%d",b);

446 
	}
}

448 
	$„tch
(
f
,
a
,
b
,
lb
,
¥ef
)

449 *
f
;

450 
buf
 *
lb
;

451 *
¥ef
;

453 
i
, 
j
;

454 
nc
;

455 
i
=
a
;i<=
b
;i++) {

456 
	`£ek
(
lb
->
fdes
,
f
[
i
-1],0);

457 
nc
 = 
	`ªad
(
lb
->
fdes
,lb->
d©a
,
f
[
i
]-f[i-1]);

458 
	`¥ötf
(
¥ef
);

459 
j
=0;j<
nc
;j++)

460 
	`putch¨
(
lb
->
d©a
[
j
]);

462 
	}
}

	@usr/source/s1/dump.c

13 *
	gd¨gv
[]

20 *
	gdfûe
 "/etc/ddate";

21 *
	gofûe
 "/dev/mt0";

22 
	söode


24 
	mi_mode
;

25 
	mi_∆ök
;

26 
	mi_uid
;

27 
	mi_gid
;

28 
	mi_size0
;

29 *
	mi_size1
;

30 
	mi_addr
[8];

31 
	mi_©ime
[2];

32 
	mi_mtime
[2];

36 
	#IALLOC
 0100000

	)

37 
	#IFMT
 060000

	)

38 
	#IFDIR
 040000

	)

39 
	#IFCHR
 020000

	)

40 
	#IFBLK
 060000

	)

41 
	#ILARG
 010000

	)

45 *
	ms_isize
;

46 *
	ms_fsize
;

47 
	ms_n‰ì
;

48 
	ms_‰ì
[100];

49 
	ms_nöode
;

50 
	ms_öode
[100];

51 
	ms_Êock
;

52 
	ms_ûock
;

53 
	ms_fmod
;

54 
	mtime
[2];

55 
	m∑d
[50];

56 } 
	gsblock
;

58 *
	gèli°
;

59 
	gfi
;

60 
	gbuf
[256];

61 
	gdbuf
[256];

62 
	gibuf
[256];

63 *
	gd©e
[2];

64 *
	gdd©e
[2];

65 
	gfo
;

66 
	gphî
;

67 
	gdÊg
;

68 *
	gtsize
 19000;

70 
	$maö
(
¨gc
, 
¨gv
)

71 **
¨gv
;

73 *
key
;

74 
s
, 
i
, 
nfû
, 
nblk
;

75 *
èp
;

76 
öode
 *
ù
;

78 
	`time
(
d©e
);

79 if(
¨gc
 == 1) {

80 
¨gv
 = 
d¨gv
;

81 
¨gc
 = 1; 
d¨gv
[argc];árgc++);

84 
¨gc
--;

85 
¨gv
++;

86 
key
 = *
¨gv
;

87 *
key
)

88 *
key
++) {

91 
	`¥ötf
("bad character in key\n");

92 
	`exô
();

95 
i
 = 
	`›í
(
dfûe
, 0);

96 if(
i
 >= 0) {

97 
	`ªad
(
i
, 
dd©e
, 4);

98 
	`˛o£
(
i
);

103 
tsize
 = 
	`numbî
(
¨gv
[1]) * 9;

104 
¨gv
++;

105 
¨gc
--;

109 
dÊg
++;

113 
dd©e
[0] = ddate[1] = 0;

117 
i
 = 21600;

118 
sd
;

121 
i
 = 900;

122 
sd
;

124 
sd
:

125 
dd©e
[0] = 
d©e
[0];

126 
dd©e
[1] = 
d©e
[1];

127 
s
 = 
	`numbî
(
¨gv
[1])*4;

128 
¨gv
++;

129 
¨gc
--;

130 
s
) {

131 if(
i
 > 
dd©e
[1])

132 
dd©e
[0]--;

133 
dd©e
[1] =- 
i
;

134 
s
--;

138 if(
¨gc
 <= 1) {

139 
	`¥ötf
("no file system specified\n");

140 
	`exô
();

142 
	`¥ötf
("%s:\n", 
¨gv
[1]);

143 
fi
 = 
	`›í
(
¨gv
[1], 0);

144 if(
fi
 < 0) {

145 
	`¥ötf
("ˇ¬Ÿ o≥¿%s\n", 
¨gv
[1]);

146 
	`exô
();

148 
	`¥ötf
("incremental dump from\n");

149 
	`pd©e
(
dd©e
);

150 
	`sync
();

151 
	`bªad
(1, &
sblock
);

152 
èli°
 = 
	`sbrk
(
	`size
(0, 
sblock
.
s_isize
*32)*512);

153 
èp
 = 
èli°
;

154 
nfû
 = 0;

155 
nblk
 = 0;

156 
i
=0; i<
sblock
.
s_isize
; i++) {

157 
	`bªad
(
i
+2, 
buf
);

158 
ù
 = &
buf
[0]; ip < &buf[256]; ip++) {

159 if(
ù
->
i_mode
 =0 || ip->
i_∆ök
 == 0) {

160 *
èp
++ = -1;

163 if(
ù
->
i_mtime
[0] < 
dd©e
[0])

164 
no
;

165 if(
ù
->
i_mtime
[0] =
dd©e
[0] &&

166 
ù
->
i_mtime
[1] < 
dd©e
[1])

167 
no
;

168 
s
 = 
	`size
(
ù
->
i_size0
, ip->
i_size1
);

169 
nfû
++;

170 
nblk
 =+ 
s
;

171 *
èp
 = 
s
+1;

172 
no
:

173 
èp
++;

176 
	`¥ötf
("%»fûes\n%»blocks\n", 
nfû
, 
nblk
);

177 
	`Ÿ≠e
();

178 
èp
 = 
buf
;

179 
	`˛rbuf
(
èp
);

180 *
èp
++ = 
sblock
.
s_isize
;

181 *
èp
++ = 
sblock
.
s_fsize
;

182 *
èp
++ = 
d©e
[0];

183 *
èp
++ = 
d©e
[1];

184 *
èp
++ = 
dd©e
[0];

185 *
èp
++ = 
dd©e
[1];

186 *
èp
++ = 
tsize
;

187 
	`swrôe
(
buf
);

188 
i
 = 
	`size
(0, 
sblock
.
s_isize
*32);

189 
èp
 = 
èli°
;

190 
i
--) {

191 
	`bwrôe
(
èp
);

192 
èp
 =+ 256;

194 
èp
 = 
èli°
;

195 
i
=0; i<
sblock
.
s_isize
; i++) {

196 
	`bªad
(
i
+2, 
buf
);

197 
ù
 = &
buf
[0]; ip < &buf[256]; ip++) {

198 if(*
èp
)

199 
	`dump
(
ù
, *
èp
-1);

200 
èp
++;

203 
	`¥ötf
("%»pha£Éº‹s\n", 
phî
);

204 if(
dÊg
) {

205 
i
 = 
	`›í
(
dfûe
, 1);

206 if(
i
 >= 0) {

207 
	`wrôe
(
i
, 
d©e
, 4);

208 
	`¥ötf
("date updated\n");

209 
	`pd©e
(
d©e
);

212 
	}
}

214 
	$pd©e
(
d
)

215 *
d
;

218 if(
d
[0] == 0 && d[1] == 0)

219 
	`¥ötf
("theÉpoch\n"); 

220 
	`¥ötf
(
	`˘ime
(
d
));

221 
	}
}

223 
	$dump
(
ù
, 
sz
)

224 
öode
 *
ù
;

226 *
p
, *
q
;

228 
p
 = 
dbuf
;

229 
q
 = 
ù
;

230 
	`˛rbuf
(
p
);

231 
q
 < &
ù
->
i_mtime
[2])

232 *
p
++ = *
q
++;

233 
	`swrôe
(
dbuf
);

234 if(
ù
->
i_mode
 & (
IFBLK
&
IFCHR
)) {

235 if(
sz
 != 0)

236 
	`¥ötf
("special\n");

239 
p
 = &
ù
->
i_addr
[0];Ö < &ip->i_addr[8];Ö++) {

240 if(*
p
 == 0)

242 if(
ù
->
i_mode
&
ILARG
) {

243 
	`bªad
(*
p
, 
ibuf
);

244 
q
 = &
ibuf
[0]; q < &ibuf[256]; q++) {

245 if(*
q
 == 0)

247 if(--
sz
 < 0)

248 
≥
;

249 
	`bªad
(*
q
, 
dbuf
);

250 
	`bwrôe
(
dbuf
);

253 if(--
sz
 < 0)

254 
≥
;

255 
	`bªad
(*
p
, 
dbuf
);

256 
	`bwrôe
(
dbuf
);

259 if(
sz
)

260 
≥
;

263 
≥
:

264 
	`˛rbuf
(
dbuf
);

265 --
sz
 >= 0)

266 
	`bwrôe
(
dbuf
);

267 
phî
++;

268 
	}
}

270 
	$bªad
(
bno
, 
b
)

273 
	`£ek
(
fi
, 
bno
, 3);

274 if(
	`ªad
(
fi
, 
b
, 512) != 512) {

275 
	`¥ötf
("ªadÉº‹ %l\n", 
bno
);

277 
	}
}

279 
	$˛rbuf
(
b
)

280 *
b
;

282 
i
, *
p
;

284 
p
 = 
b
;

285 
i
 = 256;

286 
i
--)

287 *
p
++ = 0;

288 
	}
}

290 
	$swrôe
(
b
)

291 *
b
;

293 
i
, 
s
, *
p
;

295 
i
 = 255;

296 
s
 = 0;

297 
p
 = 
b
;

298 
i
--)

299 
s
 =+ *
p
++;

300 *
p
 = 031415 - 
s
;

301 
	`bwrôe
(
b
);

302 
	}
}

304 
	$bwrôe
(
b
)

306 *
è
;

308 if(
è
++ > 
tsize
) {

309 
	`¥ötf
("changeÅapes\n");

310 
	`˛o£
(
fo
);

311 
	`rdlöe
();

312 
è
 = 0;

313 
	`Ÿ≠e
();

315 
wlo›
:

316 if(
	`wrôe
(
fo
, 
b
, 512) != 512) {

317 
	`¥ötf
("writeÉrror\n");

318 
	`rdlöe
();

319 
wlo›
;

321 
	}
}

323 
	$rdlöe
()

325 
è
;

327 (
è
 = 
	`gëch¨
()) != '\n')

328 if(
è
 == 0)

329 
	`exô
();

330 
	}
}

332 
	$numbî
(
s
)

333 *
s
;

335 
n
, 
c
;

337 
n
 = 0;

338 
c
 = *
s
++) {

339 if(
c
<'0' || c>'9')

341 
n
 =Ç*10+
c
-'0';

343 (
n
);

344 
	}
}

346 
	$size
(
s0
, 
s1
)

348 
s
;

349 
ldivr
;

351 
s
 = 
	`ldiv
(
s0
&0377, 
s1
, 512);

352 if(
ldivr
)

353 
s
++;

354 (
s
);

355 
	}
}

357 
	$Ÿ≠e
()

359 
fo
 = 
	`›í
(
ofûe
, 1);

360 if(
fo
 < 0) {

361 
	`¥ötf
("ˇ¿nŸ o≥¿%s\n", 
ofûe
);

362 
	`exô
();

364 
	}
}

	@usr/source/s1/echo.c

1 
	$maö
(
¨gc
, 
¨gv
)

2 
¨gc
;

3 *
¨gv
[];

5 
i
;

7 
¨gc
--;

8 
i
=1; i<=
¨gc
; i++)

9 
	`¥ötf
("%s%c", 
¨gv
[
i
], i==
¨gc
? '\n': ' ');

10 
	}
}

	@usr/source/s1/exit.c

3 
	$maö
() {

4 
	`£ek
(0, 0, 2);

5 
	}
}

	@usr/source/s1/fc.c

3 *
	gtmp
;

4 
	gts
[1000];

5 *
t•
 
	gts
;

6 *
	gav
[50];

7 *
	g˛i°
[50];

8 *
	gŒi°
[50];

9 
	gö°rög
;

10 
	gpÊag
;

11 
	gcÊag
;

12 *
	gcom∂r
;

13 *
	gibuf
;

14 *
	gibuf1
;

15 *
	gibuf2
;

16 *
	gobuf
;

17 *
	gÕ
;

18 *
	glöe
;

19 
	glöío
;

20 
	gexÁû
;

21 
	ssymèb
 {

22 
	m«me
[8];

23 *
	mvÆue
;

24 } *
	gsymèb
;

25 
	gsymsiz
 200;

26 
symèb
 *
	gdeÊoc
;

27 
symèb
 *
	gö˛oc
;

28 *
	g°rögbuf
;

30 
	$maö
(
¨gc
, 
¨gv
)

31 *
¨gv
[]; {

32 *
t
;

33 
nc
, 
∆
, 
i
, 
j
, 
c
, 
nxo
;

34 
	`dexô
();

36 
com∂r
 = "/usr/fort/fc1";

37 
i
 = 
nc
 = 
∆
 = 
nxo
 = 0;

38 ++
i
 < 
¨gc
) {

39 if(*
¨gv
[
i
] == '-')

40 
¨gv
[
i
][1]) {

42 
∑sß
;

44 
pÊag
++;

46 
cÊag
++;

49 
com∂r
 = "/usr/fort/fc2";

53 
∑sß
:

54 
t
 = 
¨gv
[
i
];

55 if(
	`gësuf
(
t
)=='f') {

56 
˛i°
[
nc
++] = 
t
;

57 
t
 = 
	`£tsuf
(
	`c›y
(t), 'o');

59 i‡(
	`nodup
(
Œi°
, 
t
)) {

60 
Œi°
[
∆
++] = 
t
;

61 i‡(
	`gësuf
(
t
)=='o')

62 
nxo
++;

66 if(
nc
==0)

67 
nocom
;

68 i‡((
	`sig«l
(2, 1) & 01) == 0)

69 
	`sig«l
(2, &
dexô
);

70 
i
=0; i<
nc
; i++) {

71 i‡(
nc
>1)

72 
	`¥ötf
("%s:\n", 
˛i°
[
i
]);

73 
tmp
 = 0;

74 
av
[0] = 
com∂r
;

75 
av
[1] = 
	`ex∑nd
(
˛i°
[
i
]);

76 i‡(
pÊag
 || 
exÁû
)

78 i‡(
av
[1] == 0) {

79 
cÊag
++;

82 
av
[2] = 0;

83 
t
 = 
	`ˇŒsys
(
com∂r
, 
av
);

84 if(
tmp
)

85 
	`cu∆ök
(
tmp
);

86 if(
t
) {

87 
cÊag
++;

90 
av
[0] = "as";

91 
av
[1] = "-";

92 
av
[2] = "f.tmp1";

93 
av
[3] = 0;

94 
	`ˇŒsys
("/bö/as", 
av
);

95 
t
 = 
	`£tsuf
(
˛i°
[
i
], 'o');

96 
	`cu∆ök
(
t
);

97 if(
	`lök
("a.out", 
t
Ë|| 
	`cu∆ök
("a.out")) {

98 
	`¥ötf
("movêÁûed: %s\n", 
t
);

99 
cÊag
++;

102 
nocom
:

103 i‡(
cÊag
==0 && 
∆
!=0) {

104 
i
 = 0;

105 
av
[0] = "ld";

106 
av
[1] = "-x";

107 
av
[2] = "/lib/fr0.o";

108 
j
 = 3;

109 
i
<
∆
)

110 
av
[
j
++] = 
Œi°
[
i
++];

111 
av
[
j
++] = "-lf";

112 
av
[
j
++] = "/lib/filib.a";

113 
av
[
j
++] = "-l";

114 
av
[
j
++] = 0;

115 
	`ˇŒsys
("/bö/ld", 
av
);

116 i‡(
nc
==1 && 
nxo
==1)

117 
	`cu∆ök
(
	`£tsuf
(
˛i°
[0], 'o'));

119 
	`dexô
();

120 
	}
}

122 
	$dexô
()

124 
	`u∆ök
("f.tmp1");

125 
	`exô
();

126 
	}
}

128 
	$ex∑nd
(
fûe
)

129 *
fûe
;

131 
ib1
[259], 
ib2
[259], 
ob
[259];

132 
symèb
 
°ab
[200];

133 
 
[196], 
sbf
[1024];

134 
c
;

136 
exÁû
 = 0;

137 
ibuf
 = 
ibuf1
 = 
ib1
;

138 
ibuf2
 = 
ib2
;

139 i‡(
	`f›í
(
fûe
, 
ibuf1
)<0)

140 (
fûe
);

141 i‡(
	`gëc
(
ibuf1
) != '#') {

142 
	`˛o£
(
ibuf1
[0]);

143 (
fûe
);

145 
ibuf1
[1]++;

146 
ibuf1
[2]--;

147 
obuf
 = 
ob
;

148 
symèb
 = 
°ab
;

149 
c
=0; c<200; c++) {

150 
°ab
[
c
].
«me
[0] = '\0';

151 
°ab
[
c
].
vÆue
 = 0;

153 
deÊoc
 = 
	`lookup
("define", 1);

154 
deÊoc
->
vÆue
 = deÊoc->
«me
;

155 
ö˛oc
 = 
	`lookup
("include", 1);

156 
ö˛oc
->
vÆue
 = in˛oc->
«me
;

157 
°rögbuf
 = 
sbf
;

158 
löe
 = 
 
;

159 
löío
 = 0;

160 
tmp
 = 
	`£tsuf
(
	`c›y
(
fûe
), 'i');

161 i‡(
	`f¸ót
(
tmp
, 
obuf
) < 0) {

162 
	`¥ötf
("C™'à¸óà%s\n", 
tmp
);

163 
	`dexô
();

165 
	`gëlöe
()) {

169 i‡(
 
[0] != '#')

170 
Õ
=
löe
; *lp!='\0';Üp++)

171 
	`putc
(*
Õ
, 
obuf
);

172 
	`putc
('\n', 
obuf
);

174 
	`fÊush
(
obuf
);

175 
	`˛o£
(
obuf
[0]);

176 
	`˛o£
(
ibuf1
[0]);

177 (
tmp
);

178 
	}
}

180 
	$gëlöe
()

182 
c
, 
sc
, 
°©e
;

183 
symèb
 *
≈
;

184 *
«mï
, *
fû«me
;

186 i‡(
ibuf
==
ibuf1
)

187 
löío
++;

188 
Õ
 = 
löe
;

189 *
Õ
 = '\0';

190 
°©e
 = 0;

191 i‡((
c
=
	`gëch
()) == '#')

192 
°©e
 = 1;

193 
c
!='\n' && c!='\0') {

194 i‡('a'<=
c
 && c<='z' || 'A'<=c && c<='Z' || c=='_') {

195 
«mï
 = 
Õ
;

196 
	`sch
(
c
);

197 'a'<=(
c
=
	`gëch
()) && c<='z'

198 ||'A'<=
c
 && c<='Z'

199 ||'0'<=
c
 && c<='9'

200 ||
c
=='_')

201 
	`sch
(
c
);

202 
	`sch
('\0');

203 
Õ
--;

204 
≈
 = 
	`lookup
(
«mï
, 
°©e
);

205 i‡(
°©e
==1) {

206 i‡(
≈
==
deÊoc
)

207 
°©e
 = 2;

208 i‡(
≈
==
ö˛oc
)

209 
°©e
 = 3;

211 
	`îr‹
("Undefined control");

212 
c
!='\n' && c!='\0')

213 
c
 = 
	`gëch
();

214 (
c
);

216 } i‡(
°©e
==2) {

217 
≈
->
vÆue
 = 
°rögbuf
;

218 (
c
=
	`gëch
())!='\n' && c!='\0')

219 
	`ßvch
(
c
);

220 
	`ßvch
('\0');

224 } i‡((
sc
=
c
)=='\'' || sc=='"') {

225 
	`sch
(
sc
);

226 
fû«me
 = 
Õ
;

227 
ö°rög
++;

228 (
c
=
	`gëch
())!=
sc
 && c!='\n' && c!='\0') {

229 
	`sch
(
c
);

230 i‡(
c
=='\\')

231 
	`sch
(
	`gëch
());

233 
ö°rög
 = 0;

234 i‡(
°©e
==3) {

235 *
Õ
 = '\0';

236 (
c
=
	`gëch
())!='\n' && c!='\0');

237 i‡(
ibuf
==
ibuf2
)

238 
	`îr‹
("Nested 'include'");

239 i‡(
	`f›í
(
fû«me
, 
ibuf2
)<0)

240 
	`îr‹
("Missög fûê%s", 
fû«me
);

242 
ibuf
 = 
ibuf2
;

243 (
c
);

246 
	`sch
(
c
);

247 
c
 = 
	`gëch
();

249 
	`sch
('\0');

250 i‡(
°©e
>1)

251 
	`îr‹
("Control syntax");

252 (
c
);

253 
	}
}

255 
	$îr‹
(
s
, 
x
)

257 
	`¥ötf
("%d: ", 
löío
);

258 
	`¥ötf
(
s
, 
x
);

259 
	`putch¨
('\n');

260 
exÁû
++;

261 
cÊag
++;

262 
	}
}

264 
	$sch
(
c
)

266 i‡(
Õ
==
löe
+194)

267 
	`îr‹
("Line overflow");

268 *
Õ
++ = 
c
;

269 i‡(
Õ
>
löe
+195)

270 
Õ
 = 
löe
+195;

271 
	}
}

273 
	$ßvch
(
c
)

275 *
°rögbuf
++ = 
c
;

276 
	}
}

278 
	$gëch
()

280 
≥ekc
;

281 
c
;

283 i‡(
≥ekc
) {

284 
c
 = 
≥ekc
;

285 
≥ekc
 = 0;

286 (
c
);

288 
lo›
:

289 i‡((
c
=
	`gëc1
())=='/' && !
ö°rög
) {

290 i‡((
≥ekc
=
	`gëc1
())!='*')

292 
≥ekc
 = 0;

294 
c
 = 
	`gëc1
();

295 
˛o›
:

296 
c
) {

302 i‡((
c
=
	`gëc1
())=='/')

303 
lo›
;

304 
˛o›
;

307 i‡(
ibuf
==
ibuf1
) {

308 
	`putc
('\n', 
obuf
);

309 
löío
++;

315 (
c
);

316 
	}
}

318 
	$gëc1
()

320 
c
;

322 i‡((
c
 = 
	`gëc
(
ibuf
)Ë< 0 && ibuf==
ibuf2
) {

323 
	`˛o£
(
ibuf2
[0]);

324 
ibuf
 = 
ibuf1
;

325 
	`putc
('\n', 
obuf
);

326 
c
 = 
	`gëc1
();

328 i‡(
c
<0)

330 (
c
);

331 
	}
}

333 
	$lookup
(
«mï
, 
íãrf
)

334 *
«mï
;

336 *
≈
, *
¢p
;

337 
symèb
 *
•
;

338 
i
, 
c
;

340 
≈
 = 
«mï
;

341 
i
 = 0;

342 
c
 = *
≈
++)

343 
i
 =+ 
c
;

344 
i
 =% 
symsiz
;

345 
•
 = &
symèb
[
i
];

346 
•
->
«me
[0]) {

347 
¢p
 = 
•
;

348 
≈
 = 
«mï
;

349 *
¢p
++ =*
≈
)

350 i‡(*
≈
++ ='\0' ||Çp==
«mï
+8) {

351 i‡(!
íãrf
)

352 
	`sub°
(
«mï
, 
•
);

353 (
•
);

355 i‡(
•
++ > &
symèb
[
symsiz
])

356 
•
 = 
symèb
;

358 i‡(
íãrf
) {

359 
i
=0; i<8; i++)

360 i‡(
•
->
«me
[
i
] = *
«mï
)

361 
«mï
++;

362 *
«mï
)

363 
«mï
++;

365 (
•
);

366 
	}
}

368 
	$sub°
(
≈
, 
•
)

369 *
≈
;

370 
symèb
 *
•
;

372 *
vp
;

374 
Õ
 = 
≈
;

375 i‡((
vp
 = 
•
->
vÆue
) == 0)

377 
	`sch
(' ');

378 *
vp
)

379 
	`sch
(*
vp
++);

380 
	`sch
(' ');

381 
	}
}

383 
	$gësuf
(
s
)

384 
s
[];

386 
c
;

387 
t
, *
os
;

389 
c
 = 0;

390 
os
 = 
s
;

391 
t
 = *
s
++)

392 i‡(
t
=='/')

393 
c
 = 0;

395 
c
++;

396 
s
 =- 3;

397 i‡(
c
<=14 && c>2 && *
s
++=='.')

398 (*
s
);

400 
	}
}

402 
	$£tsuf
(
s
, 
ch
)

403 
s
[];

405 *
os
;

407 
os
 = 
s
;

408 *
s
++);

409 
s
[-2] = 
ch
;

410 (
os
);

411 
	}
}

413 
	$ˇŒsys
(
f
, 
v
)

414 
f
[], *
v
[]; {

415 
t
, 
°©us
;

417 i‡((
t
=
	`f‹k
())==0) {

418 
	`execv
(
f
, 
v
);

419 
	`¥ötf
("C™'àföd %s\n", 
f
);

420 
	`exô
(1);

422 i‡(
t
 == -1) {

423 
	`¥ötf
("Tryágain\n");

426 
t
!=
	`waô
(&
°©us
));

427 i‡((
t
=(
°©us
&0377)) != 0 &&Å!=14) {

428 i‡(
t
!=2)

429 
	`¥ötf
("F©ÆÉº‹ i¿%s\n", 
f
);

430 
	`dexô
();

432 ((
°©us
>>8) & 0377);

433 
	}
}

435 
	$c›y
(
s
)

436 
s
[]; {

437 *
Ÿ•
;

439 
Ÿ•
 = 
t•
;

440 *
t•
++ = *
s
++);

441 (
Ÿ•
);

442 
	}
}

444 
	$nodup
(
l
, 
s
)

445 **
l
, 
s
[]; {

446 *
t
, *
os
, 
c
;

448 i‡(
	`gësuf
(
s
) != 'o')

450 
os
 = 
s
;

451 
t
 = *
l
++) {

452 
s
 = 
os
;

453 
c
 = *
s
++)

454 i‡(
c
 !*
t
++)

456 i‡(*
t
++ == '\0')

460 
	}
}

462 
	$cu∆ök
(
f
)

463 *
f
;

465 i‡(
f
==0)

467 (
	`u∆ök
(
f
));

468 
	}
}

	@usr/source/s1/find.c

8 
	gøndœ°
;

9 *
	g∑th«me
;

10 
	gvîbo£
;

11 
	s™ode
 {

12 (*
	mF
)();

13 
™ode
 *
	mL
, *
	mR
;

14 } 
	gnode
[100];

15 
	g¬
;

16 *
	g‚ame
, *
	g∑th
;

17 
	gnow
[2];

18 
	g≠
, 
	gac
;

19 **
	gav
;

21 
	sibuf
 {

22 
	midev
;

23 
	möum
;

24 
	miÊags
;

25 
	möl
;

26 
	miuid
;

27 
	migid
;

28 
	misize0
;

29 *
	misize
;

30 
	müddr
[8];

31 
	mütime
[2];

32 
	mimtime
[2];

33 } 
	g°©b
;

35 
	$maö
(
¨gc
,
¨gv
) *argv[]; {

37 
™ode
 *
exli°
;

38 
	`föd
();

40 
	`time
(&
now
);

41 
ac
 = 
¨gc
; 
av
 = 
¨gv
; 
≠
 = 2;

42 
∑th«me
 = 
¨gv
[1];

43 if(
	`comp°r
(
¨gv
[1],"+")==0) {

44 
vîbo£
++;

45 
≠
++;

46 
∑th«me
 = 
¨gv
[2];

47 } 
vîbo£
 = 0;

48 
¨gv
[
¨gc
] = 0;

49 if(
¨gc
<3) {

50 
	`¥ötf
("Insufficientárgs\n");

51 
	`exô
(9);

53 if(!(
exli°
 = 
	`exp
())) {

54 
	`¥ötf
("Odd usage\n");

55 
	`exô
(9);

57 if(
≠
<
¨gc
) {

58 
	`¥ötf
("Missing conjunction\n");

59 
	`exô
(9);

61 
	`des˚nd
(
∑th«me
,'f',
föd
,
exli°
);

62 
	}
}

66 
™ode
 *
	$exp
() {

67 
	`‹
();

68 
p1
;

69 *
«
;

70 
p1
 = 
	`e1
() ;

71 if(
	`comp°r
(
«
=
	`nxèrg
(),"-o")==0) {

72 
øndœ°
--;

73 (
	`mk
(&
‹
,
p1
,
	`exp
()));

75 if(*
«
!=0Ë--
≠
;

76 (
p1
);

77 
	}
}

78 
™ode
 *
	$e1
() {

79 
	`™d
();

80 
p1
;

81 *
«
;

82 
p1
 = 
	`e2
();

83 if(
	`comp°r
(
«
=
	`nxèrg
(),"-a")==0) {

84 
øndœ°
--;

85 (
	`mk
(&
™d
,
p1
,
	`e1
()));

87 if(*
«
!=0Ë--
≠
;

88 (
p1
);

89 
	}
}

90 
™ode
 *
	$e2
() {

91 
	`nŸ
();

92 *
«
;

93 if(
øndœ°
) {

94 
	`¥ötf
("operand follows operand.\n");

95 
	`exô
(9);

97 
øndœ°
++;

98 if(
	`comp°r
(
«
=
	`nxèrg
(),"!")==0)

99 (
	`mk
(&
nŸ
,
	`e3
(),0));

100 if(*
«
!=0Ë--
≠
;

101 (
	`e3
());

102 
	}
}

103 
™ode
 
	$e3
() {

104 
	`exeq
(), 
	`ok
(), 
	`glob
(), 
	`mtime
(), 
	`©ime
(), 
	`u£r
(),

105 
	`group
(), 
	`size
(), 
	`≥rm
(), 
	`löks
(), 
	`¥öt
(),

106 
	`ty≥
();

107 
p1
, 
i
;

108 *
a
, *
b
, 
s
;

109 
	`©of
();

110 
a
 = 
	`nxèrg
();

111 if(
	`comp°r
(
a
,"(")==0) {

112 
øndœ°
--;

113 
p1
 = 
	`exp
();

114 
a
 = 
	`nxèrg
();

115 if(
	`comp°r
(
a
,")")!=0Ë
îr
;

116 (
p1
);

118 if(
	`comp°r
(
a
,"-print")==0) {

119 (
	`mk
(&
¥öt
,0,0));

121 
b
 = 
	`nxèrg
();

122 
s
 = *
b
;

123 if(
s
=='+'Ë
b
++;

124 if(
	`comp°r
(
a
,"-name")==0)

125 (
	`mk
(&
glob
,
b
,0));

126 if(
	`comp°r
(
a
,"-mtime")==0)

127 (
	`mk
(&
mtime
,(
i
=
	`©of
(
b
)),
s
));

128 if(
	`comp°r
(
a
,"-atime")==0)

129 (
	`mk
(&
©ime
,(
i
=
	`©of
(
b
)),
s
));

130 if(
	`comp°r
(
a
,"-user")==0) {

131 if((
i
=
	`gëunum
(
b
)) == -1) {

132 
	`¥ötf
("C™nŸ föd u£∏\"%s\"\n",
b
);

133 
	`exô
(9);

135 (
	`mk
(&
u£r
,
i
,
s
));

137 if(
	`comp°r
(
a
,"-group")==0)

138 (
	`mk
(&
group
,(
i
=
	`©of
(
b
)),
s
));

139 if(
	`comp°r
(
a
,"-size")==0)

140 (
	`mk
(&
size
,(
i
 = 
	`©of
(
b
)),
s
));

141 if(
	`comp°r
(
a
,"-links")==0)

142 (
	`mk
(&
löks
,(
i
=
	`©of
(
b
)),
s
));

143 if(
	`comp°r
(
a
,"-perm")==0) {

144 
i
=0; *
b
 ; ++b) {

145 if(*
b
=='-') ;

146 
i
 =<< 3;

147 
i
 = i + (*
b
 - '0');

149 (
	`mk
(&
≥rm
,
i
,
s
));

151 if(
	`comp°r
(
a
,"-type")==0) {

152 
i
 = 
s
=='d' ? 040000 :

153 
s
=='b' ? 060000 :

154 
s
=='c' ? 020000 :

156 (
	`mk
(&
ty≥
,
i
,0));

158 i‡(
	`comp°r
(
a
,"-exec")==0) {

159 
i
 = 
≠
 - 1;

160 
	`comp°r
(
	`nxèrg
(),";")!=0);

161 (
	`mk
(&
exeq
,
i
,0));

163 i‡(
	`comp°r
(
a
,"-ok")==0) {

164 
i
 = 
≠
 - 1;

165 
	`comp°r
(
	`nxèrg
(),";")!=0);

166 (
	`mk
(&
ok
,
i
,0));

168 
îr
: 
	`¥ötf
("Bad o±i⁄: \"%s\" \"%s\"\n",
a
,
b
);

169 
	`exô
(9);

170 
	}
}

171 
™ode
 *
	$mk
(
f
,
l
,
r
Ë
™ode
 *l,*r; {

172 
node
[
¬
].
F
 = 
f
;

173 
node
[
¬
].
L
 = 
l
;

174 
node
[
¬
].
R
 = 
r
;

175 (&(
node
[
¬
++]));

176 
	}
}

178 
	$nxèrg
() {

179 if(
≠
>=
ac
) ("");

180 (
av
[
≠
++]);

181 
	}
}

183 
	$föd
(
exli°
,
fuŒ«me
)

184 
™ode
 *
exli°
;

185 *
fuŒ«me
;

187 
i
;

188 
∑th
 = 
fuŒ«me
;

189 if(
vîbo£
Ë
	`¥ötf
("%s",
∑th
);

190 
i
=0;
fuŒ«me
[i];++i)

191 if(
fuŒ«me
[
i
]=='/'Ë
‚ame
 = &fullname[i+1];

192 
i
 = (*
exli°
->
F
)(exlist);

193 if(
vîbo£
)

194 if(
i
Ë
	`¥ötf
(".\n");

195 
	`¥ötf
("\n");

196 
	}
}

199 
	$™d
(
p
Ë
™ode
 *p; {

200 (((*
p
->
L
->
F
)’->L)Ë&& ((*p->
R
->F)(p->R))?1:0);

201 
	}
}

202 
	$‹
(
p
Ë
™ode
 *p; {

203 (((*
p
->
L
->
F
)’->L)Ë|| ((*p->
R
->F)(p->R))?1:0);

204 
	}
}

205 
	$nŸ
(
p
Ë
™ode
 *p; {

206 –!((*
p
->
L
->
F
)(p->L)));

207 
	}
}

208 
	$glob
(
p
Ë°ru˘ { 
f
; *
∑t
; } *p; {

209 (
	`gm©ch
(
‚ame
,
p
->
∑t
));

210 
	}
}

211 
	$¥öt
() {

212 
	`¥ötf
("%s\n",
∑th
);

214 
	}
}

215 
	$mtime
(
p
Ë°ru˘ { 
f
, 
t
, 
s
; } *p; {

216 (
	`scomp
((
now
[0]-
°©b
.
imtime
[0])*3/4,
p
->
t
,p->
s
));

217 
	}
}

218 
	$©ime
(
p
Ë°ru˘ { 
f
, 
t
, 
s
; } *p; {

219 (
	`scomp
((
now
[0]-
°©b
.
ütime
[0])*3/4,
p
->
t
,p->
s
));

220 
	}
}

221 
	$u£r
(
p
Ë°ru˘ { 
f
, 
u
, 
s
; } *p; {

222 (
	`scomp
(
°©b
.
iuid
,
p
->
u
,p->
s
));

223 
	}
}

224 
	$group
(
p
Ë°ru˘ { 
f
, 
u
; } *p; {

225 (
p
->
u
 =
°©b
.
igid
);

226 
	}
}

227 
	$löks
(
p
Ë°ru˘ { 
f
, 
lök
, 
s
; } *p; {

228 (
	`scomp
(
°©b
.
öl
,
p
->
lök
,p->
s
));

229 
	}
}

230 
	$size
(
p
Ë°ru˘ { 
f
, 
sz
, 
s
; } *p; {

231 
i
;

232 
i
 = 
°©b
.
isize0
 << 7;

233 
i
 = i | ((
°©b
.
isize
>>9) & 0177);

234 (
	`scomp
(
i
,
p
->
sz
,p->
s
));

235 
	}
}

236 
	$≥rm
(
p
Ë°ru˘ { 
f
, 
≥r
, 
s
; } *p; {

237 
i
;

238 
i
 = (
p
->
s
=='-'Ë?Ö->
≥r
 : 03777;

239 ((
°©b
.
iÊags
 & 
i
 & 017777Ë=
p
->
≥r
);

240 
	}
}

241 
	$ty≥
(
p
Ë°ru˘ { 
f
, 
≥r
, 
s
; } *p; {

242 ((
°©b
.
iÊags
&060000)==
p
->
≥r
);

243 
	}
}

244 
	$exeq
(
p
Ë°ru˘ { 
f
, 
com
; } *p; {

245 (
	`d€x
(
p
->
com
));

246 
	}
}

247 
	$ok
(
p
Ë°ru˘ { 
f
, 
com
; } *p; {

248 
c
; 
yes
;

249 
yes
 = 0;

250 
	`¥ötf
("%†... %†...? ",
av
[
p
->
com
],
∑th
);

251 if((
c
=
	`gëch¨
())=='y'Ë
yes
 = 1;

252 
c
!='\n'Ë¯
	`gëch¨
();

253 if(
yes
Ë(
	`d€x
(
p
->
com
));

255 
	}
}

258 
	$scomp
(
a
,
b
,
s
) s; {

259 if(
s
 == '+')

260 (
a
 > 
b
);

261 if(
s
 == '-')

262 (
a
 < (
b
 * -1));

263 (
a
 =
b
);

264 
	}
}

265 
	$d€x
(
com
) {

266 
ccode
;

267 
≈
, 
i
, 
c
;

268 *
«rgv
[50], *
ncom
, *
«
;

270 
ccode
 = 
≈
 = 0;

271 
«
=
av
[
com
++]) {

272 if(
	`comp°r
(
«
,";")==0) ;

273 if(
	`comp°r
(
«
,"{}")==0Ë
«rgv
[
≈
++] = 
∑th
;

274 
«rgv
[
≈
++] = 
«
;

276 
«rgv
[
≈
] = 0;

277 i‡(
≈
==0) (9);

278 if(
	`f‹k
()Ë 
	`waô
(&
ccode
);

280 
	`execv
(
«rgv
[0],Ç¨gv, 
≈
);

281 
i
 = 0;

282 
ncom
 = "/usr/bin/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

283 
c
=
«rgv
[0][
i
]) {

284 
ncom
[9+
i
++] = 
c
;

286 
ncom
[9+
i
] = '\0';

287 
	`execv
(
ncom
+4, 
«rgv
, 
≈
);

288 
	`execv
(
ncom
, 
«rgv
, 
≈
);

289 
	`exô
(9);

291 (
ccode
 ? 0:1);

292 
	}
}

294 
	gfö
[518];

295 
	$gëunum
(
s
) *s; {

296 
i
;

297 
°r
[20], *
•
, 
c
;

298 
	`©of
();

299 
i
 = -1;

300 
fö
[0] = 
	`›í
("/etc/passwd",0);

301 
c
 = 
	`gëch¨
()) {

302 if(
c
=='\n') {

303 
•
 = 
°r
;

304 (*
•
 = 
	`gëch¨
()) != ':')

305 if(! *
•
++Ë
RET
;

306 *
•
 = '\0';

307 if(
	`comp°r
(
°r
,
s
)==0) {

308 (
c
=
	`gëch¨
()) != ':')

309 if(! 
c
Ë
RET
;

310 
•
 = 
°r
;

311 (*
•
 = 
	`gëch¨
()) != ':') sp++;

312 *
•
 = '\0';

313 
i
 = 
	`©of
(
°r
);

318 
RET
:

319 
	`˛o£
(
fö
);

320 
fö
[0] = 0;

321 (
i
);

322 
	}
}

324 
	$comp°r
(
s1
,
s2
) s1[], s2[]; {

325 *
c1
, *
c2
;

326 
c1
 = 
s1
; 
c2
 = 
s2
;

327 *
c1
 =*
c2
)

328 if(*
c1
++ == '\0')

330 
c2
++;

331 (*
c1
 > *
c2
 ? 1 : -1);

332 
	}
}

334 
	$des˚nd
(
«me
,
gﬂl
,
func
,
¨g
)

335 (*
func
)();

336 *
«me
, 
gﬂl
;

338 
dú
 , 
off£t
 ;

339 
dsize
, 
t›
;

341 
döode
;

342 
d«me
[14];

343 } 
díåy
[32];

344 
i
, 
j
, 
k
;

345 
™ame
[128];

347 if(
	`°©
(
«me
,&
°©b
)<0) {

348 
	`¥ötf
("--bad sètu†%s\n",
«me
);

362 (*
func
)(
¨g
,
«me
);

363 if((
°©b
.
iÊags
&060000)!=040000)

366 
t›
 = 
°©b
.
isize
;

367 
off£t
=0 ; off£à< 
t›
 ; offset =+ 512) {

368 
dsize
 = 512<(
t›
-
off£t
) ? 512 : (top-offset);

369 if((
dú
=
	`›í
(
«me
,0))<0) {

370 
	`¥ötf
("--ˇ¬Ÿ o≥¿%s\n",
«me
);

373 if(
off£t
Ë
	`£ek
(
dú
,offset,0);

374 if(
	`ªad
(
dú
,&
díåy
,
dsize
)<0) {

375 
	`¥ötf
("--ˇ¬ŸÑód %s\n",
«me
);

378 
	`˛o£
(
dú
);

379 
i
 = 0; i < (
dsize
>>4); ++i) {

380 if(
díåy
[
i
].
döode
==0 ||

381 
	`comp°r
(
díåy
[
i
].
d«me
,".")==0 ||

382 
	`comp°r
(
díåy
[
i
].
d«me
,"..")==0)

384 i‡(
díåy
[
i
].
döode
 == -1) ;

385 
j
=0;
™ame
[j]=
«me
[j];++j);

386 if(
™ame
[
j
-1]!='/')áname[j++] = '/';

387 
k
=0; (
™ame
[
j
++]=
díåy
[
i
].
d«me
[k]) &&

388 
k
<13; ++k);

389 
™ame
[
j
] = '\0';

390 if(
	`des˚nd
(
™ame
,
gﬂl
,
func
,
¨g
)==0)

391 
	`¥ötf
("--%s\n",
«me
);

395 
	}
}

397 
	$gm©ch
(
s
, 
p
)

398 *
s
, *
p
; {

399 i‡(*
s
=='.' && *
p
!='.') (0);

400 (
	`am©ch
(
s
, 
p
));

401 
	}
}

403 
	$am©ch
(
s
, 
p
)

404 *
s
, *
p
;

406 
cc
, 
scc
, 
k
;

407 
c
, 
lc
;

409 
scc
 = *
s
;

410 
lc
 = 077777;

411 
c
 = *
p
) {

414 
k
 = 0;

415 
cc
 = *++
p
) {

416 
cc
) {

419 i‡(
k
)

420 (
	`am©ch
(++
s
, ++
p
));

425 
k
 =| 
lc
 <
scc
 & sc¯<(
cc
=
p
[1]);

427 i‡(
scc
==(
lc
=
cc
)Ë
k
++;

432 
ˇ£q
:

433 if(
scc
Ë(
	`am©ch
(++
s
, ++
p
));

436 (
	`um©ch
(
s
, ++
p
));

438 (!
scc
);

440 i‡(
c
==
scc
Ë
ˇ£q
;

442 
	}
}

444 
	$um©ch
(
s
, 
p
)

445 *
s
, *
p
;

447 if(*
p
==0) (1);

448 *
s
)

449 i‡(
	`am©ch
(
s
++,
p
)) (1);

451 
	}
}

	@usr/source/s1/glob.c

20 
	#E2BIG
 7

	)

21 
	#ENOEXEC
 8

	)

22 
	#ENOENT
 2

	)

24 
	#STRSIZ
 522

	)

25 
	gab
[
STRSIZ
];

26 *
	gava
[200];

27 **
	gav
 &
	gava
[1];

28 *
°rög
 
	gab
;

29 
	gî∫o
;

30 
	gncﬁl
;

32 
	$maö
(
¨gc
, 
¨gv
)

33 *
¨gv
[];

35 *
˝
;

37 i‡(
¨gc
 < 3) {

38 
	`wrôe
(2, "Arg count\n", 10);

41 
¨gv
++;

42 *
av
++ = *
¨gv
;

43 --
¨gc
 >= 2)

44 
	`ex∑nd
(*++
¨gv
);

45 i‡(
ncﬁl
==0) {

46 
	`wrôe
(2, "No match\n", 9);

49 
	`execuã
(
ava
[1], &ava[1]);

50 
˝
 = 
	`ˇt
("/u§/bö/", 
ava
[1]);

51 
	`execuã
(
˝
+4, &
ava
[1]);

52 
	`execuã
(
˝
, &
ava
[1]);

53 
	`wrôe
(2, "CommandÇot found.\n", 19);

54 
	}
}

56 
	$ex∑nd
(
as
)

57 *
as
;

59 *
s
, *
cs
;

60 
dúf
;

61 **
ﬂv
;

63 
öo
;

64 
«me
[16];

65 } 
íåy
;

67 
s
 = 
cs
 = 
as
;

68 *
cs
!='*' && *cs!='?' && *cs!='[') {

69 i‡(*
cs
++ == 0) {

70 *
av
++ = 
	`ˇt
(
s
, "");

75 i‡(
cs
==
s
) {

76 
dúf
 = 
	`›í
(".", 0);

77 
s
 = "";

80 i‡(*--
cs
 == '/') {

81 *
cs
 = 0;

82 
dúf
 = 
	`›í
(
s
==
cs
? "/": s, 0);

83 *
cs
++ = 0200;

87 i‡(
dúf
<0) {

88 
	`wrôe
(2, "No directory\n", 13);

89 
	`exô
();

91 
ﬂv
 = 
av
;

92 
	`ªad
(
dúf
, &
íåy
, 16) == 16) {

93 i‡(
íåy
.
öo
==0)

95 i‡(
	`m©ch
(
íåy
.
«me
, 
cs
)) {

96 *
av
++ = 
	`ˇt
(
s
, 
íåy
.
«me
);

97 
ncﬁl
++;

100 
	`˛o£
(
dúf
);

101 
	`s‹t
(
ﬂv
);

102 
	}
}

104 
	$s‹t
(
ﬂv
)

105 **
ﬂv
;

107 **
p1
, **
p2
, **
c
;

109 
p1
 = 
ﬂv
;

110 
p1
 < 
av
-1) {

111 
p2
 = 
p1
;

112 ++
p2
 < 
av
) {

113 i‡(
	`com∑r
(*
p1
, *
p2
) > 0) {

114 
c
 = *
p1
;

115 *
p1
 = *
p2
;

116 *
p2
 = 
c
;

119 
p1
++;

121 
	}
}

123 
	$execuã
(
afûe
, 
Ørg
)

124 *
afûe
;

125 **
Ørg
;

127 *
fûe
, **
¨g
;

129 
¨g
 = 
Ørg
;

130 
fûe
 = 
afûe
;

131 
	`execv
(
fûe
, 
¨g
);

132 i‡(
î∫o
==
ENOEXEC
) {

133 
¨g
[0] = 
fûe
;

134 *--
¨g
 = "/bin/sh";

135 
	`execv
(*
¨g
,árg);

137 i‡(
î∫o
==
E2BIG
)

138 
	`toﬁ⁄g
();

139 
	}
}

141 
	$toﬁ⁄g
()

143 
	`wrôe
(2, "ArgÜistÅooÜong\n", 18);

144 
	`exô
();

145 
	}
}

147 
	$m©ch
(
s
, 
p
)

148 *
s
, *
p
;

150 i‡(*
s
=='.' && *
p
!='.')

152 (
	`am©ch
(
s
, 
p
));

153 
	}
}

155 
	$am©ch
(
as
, 
≠
)

156 *
as
, *
≠
;

158 *
s
, *
p
;

159 
scc
;

160 
c
, 
cc
, 
ok
, 
lc
;

162 
s
 = 
as
;

163 
p
 = 
≠
;

164 i‡(
scc
 = *
s
++)

165 i‡((
scc
 =& 0177) == 0)

166 
scc
 = 0200;

167 
c
 = *
p
++) {

170 
ok
 = 0;

171 
lc
 = 077777;

172 
cc
 = *
p
++) {

173 i‡(
cc
==']') {

174 i‡(
ok
)

175 (
	`am©ch
(
s
, 
p
));

178 } i‡(
cc
=='-') {

179 i‡(
lc
<=
scc
 && scc<=(
c
 = *
p
++))

180 
ok
++;

182 i‡(
scc
 =(
lc
=
cc
))

183 
ok
++;

188 i‡(
c
!=
scc
)

192 i‡(
scc
)

193 (
	`am©ch
(
s
, 
p
));

197 (
	`um©ch
(--
s
, 
p
));

200 (!
scc
);

202 
	}
}

204 
	$um©ch
(
s
, 
p
)

205 *
s
, *
p
;

207 if(*
p
==0)

209 *
s
)

210 i‡(
	`am©ch
(
s
++,
p
))

213 
	}
}

215 
	$com∑r
(
as1
, 
as2
)

216 *
as1
, *
as2
;

218 *
s1
, *
s2
;

220 
s1
 = 
as1
;

221 
s2
 = 
as2
;

222 *
s1
++ =*
s2
)

223 i‡(*
s2
++ == 0)

225  (*--
s1
 - *
s2
);

226 
	}
}

228 
	$ˇt
(
as1
, 
as2
)

229 *
as1
, *
as2
;

231 *
s1
, *
s2
;

232 
c
;

234 
s2
 = 
°rög
;

235 
s1
 = 
as1
;

236 
c
 = *
s1
++) {

237 i‡(
s2
 > &
ab
[
STRSIZ
])

238 
	`toﬁ⁄g
();

239 
c
 =& 0177;

240 i‡(
c
==0) {

241 *
s2
++ = '/';

244 *
s2
++ = 
c
;

246 
s1
 = 
as2
;

248 i‡(
s2
 > &
ab
[
STRSIZ
])

249 
	`toﬁ⁄g
();

250 *
s2
++ = 
c
 = *
s1
++;

251 } 
c
);

252 
s1
 = 
°rög
;

253 
°rög
 = 
s2
;

254 (
s1
);

255 
	}
}

	@usr/source/s1/goto.c

1 
	goff£t
 0;

3 
	$maö
(
¨gc
, 
¨gv
)

4 *
¨gv
[];

6 
fö
;

7 
löe
[64];

9 i‡(
¨gc
<2 || 
	`âyn
(0)!='x') {

10 
	`wrôe
(1, "gotoÉrror\n", 11);

11 
	`£ek
(0, 0, 2);

14 
	`£ek
(0, 0, 0);

15 
fö
 = 
	`dup
(0);

17 
lo›
:

18 i‡(
	`gëlö
(
löe
)) {

19 
	`wrôe
(1, "labelÇot found\n", 16);

22 i‡(
	`com∑r
(
löe
, 
¨gv
[1])Ë
lo›
;

23 
	`£ek
(0, 
off£t
, 0);

24 
	}
}

26 
	$gëlö
(
s
)

27 
s
[];

29 
ch
, 
i
;

31 
i
 = 0;

32 
l
:

33 i‡((
ch
=
	`gëc
())=='\0') (1);

34 i‡(
ch
!=':') {

35 
ch
!='\n' && ch!='\0')

36 
ch
 = 
	`gëc
();

37 
l
;

39 (
ch
=
	`gëc
())==' ');

40 
ch
!=' ' && ch!='\n' && ch!='\0') {

41 
s
[
i
++] = 
ch
;

42 
ch
 = 
	`gëc
();

44 
ch
 != '\n')

45 
ch
 = 
	`gëc
();

46 
s
[
i
] = '\0';

48 
	}
}

50 
	$com∑r
(
s1
, 
s2
)

51 
s1
[], 
s2
[];

53 
c
, 
i
;

55 
i
 = 0;

56 
l
:

57 if(
s1
[
i
] !
s2
[i]) (1);

58 i‡(
s1
[
i
++] == '\0') (0);

59 
l
;

60 
	}
}

62 
	$gëc
()

65 
off£t
++;

66 (
	`gëch¨
());

67 
	}
}

	@usr/source/s1/if.c

3 
	g≠
;

4 
	gac
;

5 **
	gav
;

7 
	$maö
(
¨gc
, 
¨gv
)

8 *
¨gv
[];

11 
¨gv
[
¨gc
] = 0;

12 
ac
 = 
¨gc
; 
av
 = 
¨gv
; 
≠
 = 1;

13 i‡(
¨gc
<2) ;

14 i‡(
	`exp
())

15 if(
	`d€x
(0)) {

16 
	`wrôe
(1, "no command\n", 11);

17 
	`£ek
(0, 0, 2);

19 
	}
}

21 *
	$nxèrg
() {

23 i‡(
≠
>
ac
) (0*ap++);

24 (
av
[
≠
++]);

25 
	}
}

27 
	$exp
(
s
) {

28 
p1
;

30 
p1
 = 
	`e1
();

31 i‡(
	`eq
(
	`nxèrg
(), "-o")Ë(
p1
 | 
	`exp
());

32 
≠
--;

33 (
p1
);

34 
	}
}

36 
	$e1
() {

37 
p1
;

39 
p1
 = 
	`e2
();

40 i‡(
	`eq
(
	`nxèrg
(), "-a")Ë (
p1
 & 
	`e1
());

41 
≠
--;

42 (
p1
);

43 
	}
}

45 
	$e2
() {

46 i‡(
	`eq
(
	`nxèrg
(), "!"))

47 (!
	`e3
());

48 
≠
--;

49 (
	`e3
());

50 
	}
}

52 
	$e3
() {

53 
p1
, 
ccode
;

54 *
a
;

56 
ccode
 = 0;

57 i‡((
a
=
	`nxèrg
())==0Ë
îr
;

58 if(
	`eq
(
a
, "(")) {

59 
p1
 = 
	`exp
();

60 if(!
	`eq
(
	`nxèrg
(), ")")Ë
îr
;

61 (
p1
);

64 if(
	`eq
(
a
, "-r"))

65 (
	`tio
(
	`nxèrg
(), 0));

67 if(
	`eq
(
a
, "-w"))

68 (
	`tio
(
	`nxèrg
(), 1));

70 if(
	`eq
(
a
, "-c"))

71 (
	`t¸ót
(
	`nxèrg
()));

73 if(
	`eq
(
a
, "{")) {

74 if(
	`f‹k
()Ë 
	`waô
(&
ccode
);

76 
	`d€x
(1);

77 
îr
;

79 (
a
=
	`nxèrg
()Ë&& (!
	`eq
(a,"}")));

80 (
ccode
? 0 : 1);

83 
p1
 = 
	`nxèrg
();

84 i‡(
p1
==0Ë
îr
;

85 if(
	`eq
(
p1
, "="))

86 (
	`eq
(
a
, 
	`nxèrg
()));

88 if(
	`eq
(
p1
, "!="))

89 (!
	`eq
(
a
, 
	`nxèrg
()));

90 
îr
:

91 
	`wrôe
(1, "ifÉrror\n", 9);

92 
	`exô
(9);

93 
	}
}

95 
	$tio
(
a
, 
f
) {

97 
a
 = 
	`›í
◊, 
f
);

98 i‡(
a
>=0) {

99 
	`˛o£
(
a
);

103 
	}
}

105 
	$t¸ót
(
a
) {

107 
	}
}

109 
	$eq
(
a
, 
b
)

110 *
a
, *
b
;

112 
i
;

114 
i
 = 0;

115 
l
:

116 if(
a
[
i
] !
b
[i])

118 if(
a
[
i
++] == '\0')

120 
l
;

121 
	}
}

123 
	$d€x
(
órg
) {

125 
≈
, 
i
, 
c
;

126 *
«rgv
[50], *
ncom
, *
«
;

128 
≈
 = 0;

129 
«
=
	`nxèrg
()) {

130 if(
órg
 && 
	`eq
(
«
,"}")) ;

131 
«rgv
[
≈
++] = 
«
;

133 if(
órg
 && (!
	`eq
(
«
, "}"))) (9);

134 
«rgv
[
≈
] = 0;

135 i‡(
≈
==0Ë(
órg
);

136 
	`execv
(
«rgv
[0],Ç¨gv, 
≈
);

137 
i
 = 0;

138 
ncom
 = "/usr/bin/xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx";

139 
c
=
«rgv
[0][
i
]) {

140 
ncom
[9+
i
++] = 
c
;

142 
ncom
[9+
i
] = '\0';

143 
	`execv
(
ncom
+4, 
«rgv
, 
≈
);

144 
	`execv
(
ncom
, 
«rgv
, 
≈
);

146 
	}
}

	@usr/source/s1/init.c

1 
	#èbsize
 20

	)

2 
	#Æl
 
p
 = &
ôab
[0];Ö < &ôab[20];Ö++

	)

3 
	#evî
 ;;

	)

4 
	#sögÀ
 0173030

	)

5 
	#ªboŸ
 0173040

	)

6 
	gshñl
[] "/bin/sh";

7 
	gmöus
[] "-";

8 
	grunc
[] "/etc/rc";

9 
	göô
[] "/etc/init";

10 
	gifûe
[] "/etc/ttys";

11 
	gutmp
[] "/etc/utmp";

12 
	gwtmpf
[] "/usr/adm/wtmp";

13 
	g˘ty
[] "/dev/tty8";

14 
	gfi
;

17 
	mÊag
;

18 
	mlöe
;

19 
	mcoms
[2];

20 } 
	glöe
;

21 
	sèb


23 
	mpid
;

24 
	mlöe
;

25 
	mcomn
;

26 } 
	gôab
[
èbsize
];

29 
	m«me
[8];

30 
	mây
;

31 
	mfûl
;

32 
	mtime
[2];

33 
	mwfûl
;

34 } 
	gwtmp
;

36 
	$maö
()

38 
i
;

39 
èb
 *
p
, *
q
;

40 
	`ª£t
();

47 if(
	`gëcsw
(Ë!
sögÀ
) {

48 
i
 = 
	`f‹k
();

49 if(
i
 == 0) {

50 
	`›í
("/", 0);

51 
	`dup
(0);

52 
	`dup
(0);

53 
	`exe˛
(
shñl
, shñl, 
runc
, 0);

54 
	`exô
();

56 
	`waô
(Ë!
i
);

57 
	`˛o£
(
	`¸ót
(
utmp
, 0644));

58 i‡((
i
 = 
	`›í
(
wtmpf
, 1)) >= 0) {

59 
	`£ek
(
i
, 0, 2);

60 
wtmp
.
ây
 = '~';

61 
	`time
(
wtmp
.
time
);

62 
	`wrôe
(
i
, &
wtmp
, 16);

63 
	`˛o£
(
i
);

73 
	`£ãxô
();

74 
	`sig«l
(1, 
ª£t
);

75 
i
=0; i<10; i++)

76 
	`˛o£
(
i
);

77 
	`gëcsw
()) {

79 
sögÀ
:

80 
îr‹
:

81 
	`ãrmÆl
();

82 
i
 = 
	`f‹k
();

83 if(
i
 == 0) {

84 
	`›í
(
˘ty
, 2);

85 
	`dup
(0);

86 
	`exe˛
(
shñl
, 
möus
, 0);

87 
	`exô
();

89 
	`waô
(Ë!
i
);

91 
ªboŸ
:

92 
	`ãrmÆl
();

93 
	`exe˛
(
öô
, 
möus
, 0);

94 
	`ª£t
();

101 
fi
 = 
	`›í
(
ifûe
, 0);

102 
q
 = &
ôab
[0];

103 
	`æöe
()) {

104 if(
löe
.
Êag
 == '0')

106 
Æl
)

107 if(
p
->
löe
==line.line ||Ö->line==0) {

108 if(
p
 >
q
) {

109 
i
 = 
p
->
pid
;

110 
p
->
pid
 = 
q
->pid;

111 
q
->
pid
 = 
i
;

112 
p
->
löe
 = 
q
->line;

113 
p
->
comn
 = 
q
->comn;

114 
q
->
löe
 =Üine.line;

115 
q
->
coms
[0] = 
löe
.
comn
;

116 
q
++;

121 
	`˛o£
(
fi
);

122 if(
q
 =&
ôab
[0])

123 
îr‹
;

124 ; 
q
 < &
ôab
[
èbsize
]; q++)

125 
	`ãrm
(
q
);

126 
Æl
)

127 if(
p
->
löe
 !0 &&Ö->
pid
 == 0)

128 
	`df‹k
(
p
);

129 
evî
) {

130 
i
 = 
	`waô
();

131 
Æl
)

132 if(
p
->
pid
 =
i
) {

133 
	`rmut
(
p
);

134 
	`df‹k
(
p
);

137 
	}
}

139 
	$ãrmÆl
()

141 
èb
 *
p
;

143 
Æl
)

144 
	`ãrm
(
p
);

145 
	}
}

147 
	$ãrm
(
≠
)

148 
èb
 *
≠
;

150 
èb
 *
p
;

152 
p
 = 
≠
;

153 if(
p
->
pid
 != 0) {

154 
	`rmut
(
p
);

155 
	`kûl
(
p
->
pid
, 9);

157 
p
->
pid
 = 0;

158 
p
->
löe
 = 0;

159 
	}
}

161 
	$æöe
()

163 
c
[4];

165 if(
	`ªad
(
fi
, 
c
, 4) != 4 || c[3] != '\n')

167 
löe
.
Êag
 = 
c
[0];

168 
löe
.löê
c
[1];

169 
löe
.
comn
 = 
c
[2];

171 
	}
}

173 
	$df‹k
(
≠
)

174 
èb
 *
≠
;

176 
i
;

177 *
ây
;

178 
èb
 *
p
;

180 
p
 = 
≠
;

181 
i
 = 
	`f‹k
();

182 if(
i
 == 0) {

183 
	`sig«l
(1, 0);

184 
ây
 = "/dev/ttyx";

185 
ây
[8] = 
p
->
löe
;

186 
	`chown
(
ây
, 0);

187 
	`chmod
(
ây
, 0622);

188 
	`›í
(
ây
, 2);

189 
	`dup
(0);

190 
	`exe˛
("ëc/gëty", 
möus
, 
p
->
coms
, 0);

191 
	`exô
();

193 
p
->
pid
 = 
i
;

194 
	}
}

196 
	$rmut
(
p
)

197 
èb
 *
p
;

199 
i
, 
f
;

200 
zîo
[16];

202 
f
 = 
	`›í
(
utmp
, 1);

203 if(
f
 >= 0) {

204 
i
 = 
p
->
löe
;

205 if(
i
 >= 'a')

206 
i
 =+ '0' + 10 - 'a';

207 
	`£ek
(
f
, (
i
-'0')*16, 0);

208 
	`wrôe
(
f
, 
zîo
, 16);

209 
	`˛o£
(
f
);

211 
f
 = 
	`›í
(
wtmpf
, 1);

212 i‡(
f
 >= 0) {

213 
wtmp
.
ây
 = 
p
->
löe
;

214 
	`time
(
wtmp
.
time
);

215 
	`£ek
(
f
, 0, 2);

216 
	`wrôe
(
f
, &
wtmp
, 16);

217 
	`˛o£
(
f
);

219 
	}
}

	@usr/source/s1/ln.c

5 
	sibuf
 {

6 
	möum
;

7 
	miÊags
;

8 
	möl
;

9 
	miuid
;

10 
	misize
;

11 
	müddr
[8];

12 *
	mi˘ime
[2];

13 *
	mimtime
[2];

14 
	mfûl
;

17 
	#DIR
 040000

	)

18 
	#FMT
 060000

	)

20 
	$maö
(
¨gc
, 
¨gv
)

21 **
¨gv
;

23 
ibuf
 
°©b
;

24 *
≈
;

26 i‡(
¨gc
<2) {

27 
	`wrôe
(1, "Usage:ÜnÅarget [Çewname ]\n", 29);

28 
	`exô
(1);

30 i‡(
¨gc
==2) {

31 
≈
 = 
¨gv
[1];

32 *
≈
++);

33 *--
≈
!='/' &&Çp>
¨gv
[1]);

34 
≈
++;

35 
¨gv
[2] = 
≈
;

37 
	`°©
(
¨gv
[1], &
°©b
);

38 i‡((
°©b
.
iÊags
&
FMT
Ë=
DIR
) {

39 
	`wrôe
(1, "No directoryÜink\n", 18);

40 
	`exô
(1);

42 i‡(
	`lök
(
¨gv
[1],árgv[2])<0) {

43 
	`wrôe
(1, "Can'tÜink\n", 11);

44 
	`exô
(1);

46 
	`exô
(0);

47 
	}
}

	@usr/source/s1/login.c

6 
	m«me
[8];

7 
	mây
;

8 
	mifûl
;

9 
	mtime
[2];

10 
	mufûl
;

11 } 
	gutmp
;

14 
	mªgs
[2];

15 
	mtÊags
;

16 } 
	gâyb
;

18 *
	gâyx
;

20 
	#ECHO
 010

	)

22 
	$maö
(
¨gc
, 
¨gv
)

23 **
¨gv
;

25 
pbuf
[128];

26 *
«mï
, *
≈
;

27 
pwbuf
[9];

28 
t
, 
sÊags
, 
f
, 
c
, 
uid
, 
gid
;

30 
	`sig«l
(3, 1);

31 
	`sig«l
(2, 1);

32 
âyx
 = "/dev/ttyx";

33 i‡((
utmp
.
ây
=
	`âyn
(0)) == 'x') {

34 
	`wrôe
(1, "Sorry.\n", 7);

35 
	`exô
();

37 
âyx
[8] = 
utmp
.
ây
;

38 
lo›
:

39 
«mï
 = 
utmp
.
«me
;

40 i‡(
¨gc
>1) {

41 
≈
 = 
¨gv
[1];

42 
«mï
<
utmp
.
«me
+8 && *
≈
)

43 *
«mï
++ = *
≈
++;

44 
¨gc
 = 0;

46 
	`wrôe
(1, "Name: ", 7);

47 (
c
 = 
	`gëch¨
()) != '\n') {

48 i‡(
c
 <= 0)

49 
	`exô
();

50 i‡(
«mï
 < 
utmp
.
«me
+8)

51 *
«mï
++ = 
c
;

54 
«mï
 < 
utmp
.
«me
+8)

55 *
«mï
++ = ' ';

56 i‡(
	`gëpwíåy
(
utmp
.
«me
, 
pbuf
))

57 
bad
;

58 
≈
 = 
	`cﬁ⁄
(
pbuf
);

59 i‡(*
≈
!=':') {

60 
	`gây
(0, &
âyb
);

61 
sÊags
 = 
âyb
.
tÊags
;

62 
âyb
.
tÊags
 =& ~ 
ECHO
;

63 
	`°ty
(0, &
âyb
);

64 
	`wrôe
(1, "Password: ", 10);

65 
«mï
 = 
pwbuf
;

66 (
c
=
	`gëch¨
()) != '\n') {

67 i‡(
c
 <= 0)

68 
	`exô
();

69 i‡(
«mï
<
pwbuf
+8)

70 *
«mï
++ = 
c
;

72 *
«mï
++ = '\0';

73 
âyb
.
tÊags
 = 
sÊags
;

74 
	`°ty
(0, &
âyb
);

75 
	`wrôe
(1, "\n", 1);

76 
«mï
 = 
	`¸y±
(
pwbuf
);

77 *
«mï
++ =*
≈
++);

78 i‡(*--
«mï
!='\0' || *--
≈
!=':')

79 
bad
;

81 
≈
 = 
	`cﬁ⁄
(np);

82 
uid
 = 0;

83 *
≈
 != ':')

84 
uid
 = uid*10 + *
≈
++ - '0';

85 
≈
++;

86 
gid
 = 0;

87 *
≈
 != ':')

88 
gid
 = gid*10 + *
≈
++ - '0';

89 
≈
++;

90 
≈
 = 
	`cﬁ⁄
(np);

91 
«mï
 = 
≈
;

92 
≈
 = 
	`cﬁ⁄
(np);

93 i‡(
	`chdú
(
«mï
)<0) {

94 
	`wrôe
(1, "No directory\n", 13);

95 
lo›
;

97 
	`time
(
utmp
.
time
);

98 i‡((
f
 = 
	`›í
("/etc/utmp", 1)) >= 0) {

99 
t
 = 
utmp
.
ây
;

100 i‡(
t
>='a')

101 
t
 =- 'a' - (10+'0');

102 
	`£ek
(
f
, (
t
-'0')*16, 0);

103 
	`wrôe
(
f
, &
utmp
, 16);

104 
	`˛o£
(
f
);

106 i‡((
f
 = 
	`›í
("/usr/adm/wtmp", 1)) >= 0) {

107 
	`£ek
(
f
, 0, 2);

108 
	`wrôe
(
f
, &
utmp
, 16);

109 
	`˛o£
(
f
);

111 i‡((
f
 = 
	`›í
("/etc/motd", 0)) >= 0) {

112 
	`ªad
(
f
, &
t
, 1) > 0)

113 
	`wrôe
(1, &
t
, 1);

114 
	`˛o£
(
f
);

116 i‡((
f
 = 
	`›í
("mailbox", 0)) >= 0) {

117 
	`wrôe
(1, "You have mail.\n", 15);

118 
	`˛o£
(
f
);

120 
	`chown
(
âyx
, 
uid
);

121 
	`£tgid
(
gid
);

122 
	`£tuid
(
uid
);

123 i‡(*
≈
 == '\0')

124 
≈
 = "/bin/sh";

125 
	`exe˛
(
≈
, "-", 0);

126 
	`wrôe
(1, "No shell.\n", 9);

127 
	`exô
();

128 
bad
:

129 
	`wrôe
(1, "Login incorrect.\n", 17);

130 
lo›
;

131 
	}
}

133 
	$gëpwíåy
(
«me
, 
buf
)

134 *
«me
, *
buf
;

136 
fö
;

137 
fi
, 
r
, 
c
;

138 *
g≈
, *
∫p
;

140 
fi
 = 
fö
;

141 
r
 = 1;

142 if((
fö
 = 
	`›í
("/etc/passwd", 0)) < 0)

143 
ªt
;

144 
lo›
:

145 
g≈
 = 
«me
;

146 
∫p
 = 
buf
;

147 (
c
=
	`gëch¨
()) != '\n') {

148 if(
c
 <= 0)

149 
ªt
;

150 *
∫p
++ = 
c
;

152 *
∫p
++ = '\0';

153 
∫p
 = 
buf
;

154 *
g≈
++ =*
∫p
++);

155 i‡((*--
g≈
!=' ' && g≈<
«me
+8Ë|| *--
∫p
!=':')

156 
lo›
;

157 
r
 = 0;

158 
ªt
:

159 
	`˛o£
(
fö
);

160 
fö
 = 0;

161 (&
fö
)[1] = 0;

162 (&
fö
)[2] = 0;

163 (
r
);

164 
	}
}

166 
	$cﬁ⁄
(
p
)

167 *
p
;

169 *
Ω
;

171 
Ω
 = 
p
;

172 *
Ω
 != ':') {

173 i‡(*
Ω
++ == '\0') {

174 
	`wrôe
(1, "Bad /etc/passwd\n", 16);

175 
	`exô
();

178 *
Ω
++ = '\0';

179 (
Ω
);

180 
	}
}

	@usr/source/s1/lpr.c

6 *
	gt‚ame
;

7 
	g«˘
;

8 
	gtff
;

9 
	gfú°
;

10 
	gmaûÊg
;

11 
	g≥rs⁄
[10];

13 
	$maö
(
¨gc
, 
¨gv
)

14 
¨gc
;

15 *
¨gv
[];

17 *
¨g
;

18 
c
, 
f
, 
Êag
;

20 
Êag
 = 0;

21 
t‚ame
 = 
	`ø¬ame
("/usr/lpd/tfxxx");

22 if(
t‚ame
)

23 
tff
 = 
	`¸ót
(
t‚ame
, 0666); 

24 
tff
 = -1;

25 if(
tff
 < 0) {

26 
	`¥ötf
("Cannot create in /usr/lpd\n");

27 
	`exô
();

29 
¨gc
>1 && (
¨g
 = 
¨gv
[1])[0]=='-') {

30 
¨g
[1]) {

33 
Êag
 = '+';

37 
Êag
 = '-';

41 
maûÊg
 = 1;

44 
¨gc
--;

45 
¨gv
++;

47 
	`idít
();

48 if(
¨gc
 == 1)

49 
	`c›y
(0);

50 --
¨gc
) {

51 
¨g
 = *++
¨gv
;

52 if(
Êag
 == '+')

53 
cf
;

54 if(*
¨g
 ='/' && 
Êag
 != '-') {

55 
	`ˇrd
('F', 
¨g
);

56 
«˘
++;

59 
f
 = 
	`ø¬ame
("/usr/lpd/lfxxx");

60 if(
f
) {

61 if(
	`lök
(
¨g
, 
f
))

62 
cf
;

63 
	`ˇrd
('F', 
f
);

64 
	`ˇrd
('U', 
f
);

65 
«˘
++;

66 
df
;

68 
cf
:

69 
f
 = 
	`›í
(
¨g
, 0);

70 if(
f
 < 0) {

71 
	`¥ötf
("C™nŸ o≥¿%s\n", 
¨g
);

74 
	`c›y
(
f
);

75 
	`˛o£
(
f
);

76 
df
:

77 if(
Êag
 == '-') {

78 
f
 = 
	`u∆ök
(
¨g
);

79 if(
f
 < 0)

80 
	`¥ötf
("C™nŸÑemovê%s\n", 
¨g
);

84 if(
«˘
) {

85 
f
 = 
	`ø¬ame
("/usr/lpd/dfxxx");

86 if(
f
)

87 
	`lök
(
t‚ame
, 
f
); 

88 
	`¥ötf
("CannotÑename in /usr/lpd\n");

89 
	`u∆ök
(
t‚ame
);

90 
	`exe˛
("/etc/lpd", "lpd", 0);

92 
	`u∆ök
(
t‚ame
);

93 
	}
}

95 
	$c›y
(
f
)

96 
f
;

98 
‚
, 
ff
, 
i
, 
ƒ
, 
nc
;

99 
buf
[256];

101 
‚
 = 
	`ø¬ame
("/usr/lpd/cfxxx");

102 if(
‚
)

103 
ff
 = 
	`¸ót
(
‚
, 0666); 

104 
ff
 = -1;

105 if(
ff
 < 0) {

106 
	`¥ötf
("Cannot create in /usr/lpd\n");

109 
nc
 = 0;

110 
ƒ
 = 0;

111 (
i
 = 
	`ªad
(
f
, 
buf
, 512)) > 0) {

112 
	`wrôe
(
ff
, 
buf
, 
i
);

113 
nc
 =+ 
i
;

114 if(
nc
 >= 512) {

115 
nc
 =- 512;

116 
ƒ
++;

117 if(
ƒ
 > 400) {

118 
	`¥ötf
("Copy file isÅooÜarge\n");

123 
	`˛o£
(
ff
);

124 
	`ˇrd
('F', 
‚
);

125 
	`ˇrd
('U', 
‚
);

126 
«˘
++;

127 
	}
}

129 
	$ˇrd
(
c
, 
s
)

130 
c
;

131 
s
[];

133 *
p1
, *
p2
;

134 
buf
[512];

135 
cﬁ
;

137 
p1
 = 
buf
;

138 
p2
 = 
s
;

139 
cﬁ
 = 0;

140 *
p1
++ = 
c
;

141 (
c
 = *
p2
++) != '\0') {

142 *
p1
++ = 
c
;

143 
cﬁ
++;

145 *
p1
++ = '\n';

146 
	`wrôe
(
tff
, 
buf
, 
cﬁ
+2);

147 
	}
}

149 
	$idít
()

151 
c
, 
n
;

152 *
b1p
, *
µ
, *
b2p
;

153 
b1
[100], 
b2
[100];

155 
b1p
 = 
b1
;

156 if(
	`gëpw
(
	`gëuid
(), 
b1p
)) {

157 
b1p
 = "pdp::::m0000,m000:";

159 
n
 = 0;

160 
b2p
 = 
b2
;

161 *
b2p
++ = "$ idít "[
n
++]);

162 
b2p
--;

163 
n
 = 5;

164 --
n
Ë*
b1p
++ != ':');

165 (*
b2p
++ = *
b1p
++) != ':');

166 
b2p
[-1] = ',';

167 
b1p
 = 
b1
;

168 
µ
 = 
≥rs⁄
;

169 (
c
 = *
b1p
++) != ':') {

170 *
b2p
++ = 
c
;

171 *
µ
++ = 
c
;

173 *
b2p
++ = 0;

174 *
µ
++ = 0;

175 
	`ˇrd
('L', 
b2
);

176 
	}
}

178 
	$ø¬ame
(
s
)

179 
s
[];

181 
buf
[20];

183 
lo›
:

184 
s
[11] = 
	`ønc
();

185 
s
[12] = 
	`ønc
();

186 
s
[13] = 
	`ønc
();

187 if(
	`°©
(
s
, 
buf
))

188 (
s
);

189 
lo›
;

190 
	}
}

192 
	$ønc
()

194 
buf
[2], 
c
;

196 if(!
fú°
) {

197 
	`time
(
buf
);

198 
	`§™d
(
buf
[1]);

199 
fú°
++;

201 
c
 = 
	`ønd
();

202 (((
c
>>11)%10)+'0');

203 
	}
}

	@usr/source/s1/ls.c

6 
	mfdes
;

7 
	m∆e·
;

8 *
	m√xtc
;

9 
	mbuff
[512];

10 } 
	göf
;

12 
	sibuf
 {

13 
	midev
;

14 
	möum
;

15 
	miÊags
;

16 
	möl
;

17 
	miuid
;

18 
	migid
;

19 
	misize0
;

20 
	misize
;

21 
	müddr
[8];

22 *
	mütime
[2];

23 *
	mimtime
[2];

26 
	slbuf
 {

27 
	m ame
[15];

28 
	m um
;

29 
	mlÊags
;

30 
	m l
;

31 
	mluid
;

32 
	mlgid
;

33 
	mlsize0
;

34 
	mlsize
;

35 *
	mlmtime
[2];

38 
	slbufx
 {

39 *
	m«mï
;

42 
	gaÊg
, 
	gdÊg
, 
	glÊg
, 
	gsÊg
, 
	gtÊg
, 
	guÊg
, 
	giÊg
, 
	gfÊg
;

43 
	gfout
;

44 
	grÊg
 1;

45 
	gÊags
;

46 
	guidfû
 -1;

47 
	gtblocks
;

48 
	g°©ªq
;

49 
lbuf
 *
	gœ°p
 &
	gíd
;

50 
lbuf
 *
	gæa°p
 &
	gíd
;

51 *
	gdŸp
 ".";

53 
	#IFMT
 060000

	)

54 
	#DIR
 0100000

	)

55 
	#CHR
 020000

	)

56 
	#BLK
 040000

	)

57 
	#ISARG
 01000

	)

58 
	#LARGE
 010000

	)

59 
	#STXT
 010000

	)

60 
	#SUID
 04000

	)

61 
	#SGID
 02000

	)

62 
	#ROWN
 0400

	)

63 
	#WOWN
 0200

	)

64 
	#XOWN
 0100

	)

65 
	#RGRP
 040

	)

66 
	#WGRP
 020

	)

67 
	#XGRP
 010

	)

68 
	#ROTH
 04

	)

69 
	#WOTH
 02

	)

70 
	#XOTH
 01

	)

71 
	#RSTXT
 01000

	)

73 
	$maö
(
¨gc
, 
¨gv
)

74 **
¨gv
;

76 
i
, 
j
;

77 
lbuf
 
íd
;

78 
lbuf
 *
ï
, *
ï1
;

79 
lbuf
 *
¶a°p
;

80 
lbuf
 
lb
;

81 
	`com∑r
();

83 
fout
 = 
	`dup
(1);

84 i‡(--
¨gc
 > 0 && *
¨gv
[1] == '-') {

85 
¨gv
++;

86 *++*
¨gv
) **argv) {

88 
aÊg
++;

92 
sÊg
++;

93 
°©ªq
++;

97 
dÊg
++;

101 
lÊg
++;

102 
°©ªq
++;

103 
uidfû
 = 
	`›í
("/etc/passwd", 0);

107 
rÊg
 = -1;

111 
tÊg
++;

112 
°©ªq
++;

116 
uÊg
++;

120 
iÊg
++;

124 
fÊg
++;

130 
¨gc
--;

132 i‡(
fÊg
) {

133 
aÊg
++;

134 
lÊg
 = 0;

135 
sÊg
 = 0;

136 
tÊg
 = 0;

137 
°©ªq
 = 0;

139 i‡(
¨gc
==0) {

140 
¨gc
++;

141 
¨gv
 = &
dŸp
 - 1;

143 
i
=0; i < 
¨gc
; i++) {

144 i‡((
ï
 = 
	`g°©
(*++
¨gv
, 1))==0)

146 
ï
->
«mï
 = *
¨gv
;

147 
ï
->
lÊags
 =| 
ISARG
;

149 
	`qs‹t
(&
íd
, 
œ°p
 - &íd,  *œ°p, 
com∑r
);

150 
¶a°p
 = 
œ°p
;

151 
ï
 = &
íd
;Ép<
¶a°p
;Ép++) {

152 i‡(
ï
->
lÊags
&
DIR
 && 
dÊg
==0 || 
fÊg
) {

153 i‡(
¨gc
>1)

154 
	`¥ötf
("\n%s:\n", 
ï
->
«mï
);

155 
œ°p
 = 
¶a°p
;

156 
	`ªaddú
(
ï
->
«mï
);

157 i‡(
fÊg
==0)

158 
	`qs‹t
(
¶a°p
,
œ°p
 - sœ°p, *œ°p,
com∑r
);

159 i‡(
°©ªq
)

160 
	`¥ötf
("tŸÆ %d\n", 
tblocks
);

161 
ï1
=
¶a°p
;Ép1<
œ°p
;Ép1++)

162 
	`≥¡ry
(
ï1
);

164 
	`≥¡ry
(
ï
);

166 
	`Êush
();

167 
	}
}

169 
	$≥¡ry
(
≠
)

170 
lbuf
 *
≠
;

172 
tbuf
[16];

173 °ru˘ { 
dmö‹
, 
dmaj‹
;};

174 
lbuf
 *
p
;

176 
p
 = 
≠
;

177 i‡(
p
->
 um
 == -1)

179 i‡(
iÊg
)

180 
	`¥ötf
("%5d ", 
p
->
 um
);

181 i‡(
lÊg
) {

182 
	`pmode
(
p
->
lÊags
);

183 
	`¥ötf
("%2d ", 
p
->
 l
);

184 i‡(
	`gë«me
(
p
->
luid
&0377, 
tbuf
)==0)

185 
	`¥ötf
("%-6.6s", 
tbuf
);

187 
	`¥ötf
("%-6d", 
p
->
luid
&0377);

188 i‡(
p
->
lÊags
 & (
BLK
|
CHR
))

189 
	`¥ötf
("%3d,%3d", 
p
->
lsize
.
dmaj‹
&0377,

190 
p
->
lsize
.
dmö‹
&0377);

192 
	`¥ötf
("%7s", 
	`locv
(
p
->
lsize0
,Ö->
lsize
));

193 
	`¥ötf
(" %-12.12†", 
	`˘ime
(
p
->
lmtime
)+4);

194 } i‡(
sÊg
)

195 
	`¥ötf
("%4d ", 
	`nblock
(
p
->
lsize0
,Ö->
lsize
));

196 i‡(
p
->
lÊags
&
ISARG
)

197 
	`¥ötf
("%s\n", 
p
->
«mï
);

199 
	`¥ötf
("%.14s\n", 
p
->
 ame
);

200 
	}
}

202 
	$gë«me
(
uid
, 
buf
)

203 
uid
;

204 
buf
[];

206 
j
, 
c
, 
n
, 
i
;

208 
öf
.
fdes
 = 
uidfû
;

209 
	`£ek
(
öf
.
fdes
, 0, 0);

210 
öf
.
∆e·
 = 0;

212 
i
 = 0;

213 
j
 = 0;

214 
n
 = 0;

215 (
c
=
	`gëc
(&
öf
)) != '\n') {

216 i‡(
c
<0)

218 i‡(
c
==':') {

219 
j
++;

220 
c
 = '0';

222 i‡(
j
==0)

223 
buf
[
i
++] = 
c
;

224 i‡(
j
==2)

225 
n
 =Ç*10 + 
c
 - '0';

227 } 
n
 !
uid
);

228 
buf
[
i
++] = '\0';

230 
	}
}

232 
	$nblock
(
size0
, 
size
)

233 *
size0
, *
size
;

235 
n
;

237 
n
 = 
	`ldiv
(
size0
, 
size
, 512);

238 i‡(
size
&0777)

239 
n
++;

240 i‡(
n
>8)

241 
n
 =+ (n+255)/256;

242 (
n
);

243 
	}
}

245 
	gm0
[] { 3, 
	gDIR
, 'd', 
	gBLK
, 'b', 
	gCHR
, 'c', '-'};

246 
	gm1
[] { 1, 
	gROWN
, 'r', '-' };

247 
	gm2
[] { 1, 
	gWOWN
, 'w', '-' };

248 
	gm3
[] { 2, 
	gSUID
, 's', 
	gXOWN
, 'x', '-' };

249 
	gm4
[] { 1, 
	gRGRP
, 'r', '-' };

250 
	gm5
[] { 1, 
	gWGRP
, 'w', '-' };

251 
	gm6
[] { 2, 
	gSGID
, 's', 
	gXGRP
, 'x', '-' };

252 
	gm7
[] { 1, 
	gROTH
, 'r', '-' };

253 
	gm8
[] { 1, 
	gWOTH
, 'w', '-' };

254 
	gm9
[] { 1, 
	gXOTH
, 'x', '-' };

255 
	gm10
[] { 1, 
	gSTXT
, 't', ' ' };

257 *
	gm
[] { 
	gm0
, 
	gm1
, 
	gm2
, 
	gm3
, 
	gm4
, 
	gm5
, 
	gm6
, 
	gm7
, 
	gm8
, 
	gm9
, 
	gm10
};

259 
	$pmode
(
aÊag
)

261 **
mp
;

263 
Êags
 = 
aÊag
;

264 
mp
 = &
m
[0]; mp < &m[11];)

265 
	`£À˘
(*
mp
++);

266 
	}
}

268 
	$£À˘
(
∑úp
)

269 *
∑úp
;

271 
n
, *
≠
;

273 
≠
 = 
∑úp
;

274 
n
 = *
≠
++;

275 --
n
>=0 && (
Êags
&*
≠
++)==0)

276 
≠
++;

277 
	`putch¨
(*
≠
);

278 
	}
}

280 
	$makíame
(
dú
, 
fûe
)

281 *
dú
, *
fûe
;

283 
dfûe
[100];

284 *
dp
, *
Â
;

285 
i
;

287 
dp
 = 
dfûe
;

288 
Â
 = 
dú
;

289 *
Â
)

290 *
dp
++ = *
Â
++;

291 *
dp
++ = '/';

292 
Â
 = 
fûe
;

293 
i
=0; i<14; i++)

294 *
dp
++ = *
Â
++;

295 *
dp
 = 0;

296 (
dfûe
);

297 
	}
}

299 
	$ªaddú
(
dú
)

300 *
dú
;

303 
döode
;

304 
d«me
[14];

305 } 
díåy
;

306 *
p
;

307 
j
;

308 
lbuf
 *
ï
;

310 i‡(
	`f›í
(
dú
, &
öf
) < 0) {

311 
	`¥ötf
("%†uƒódabÀ\n", 
dú
);

314 
tblocks
 = 0;

316 
p
 = &
díåy
;

317 
j
=0; j<16; j++)

318 *
p
++ = 
	`gëc
(&
öf
);

319 i‡(
díåy
.
döode
==0

320 || 
aÊg
==0 && 
díåy
.
d«me
[0]=='.')

322 i‡(
díåy
.
döode
 == -1)

324 
ï
 = 
	`g°©
(
	`makíame
(
dú
, 
díåy
.
d«me
), 0);

325 i‡(
ï
->
 um
 != -1)

326 
ï
->
 um
 = 
díåy
.
döode
;

327 
j
=0; j<14; j++)

328 
ï
->
 ame
[
j
] = 
díåy
.
d«me
[j];

330 
	`˛o£
(
öf
.
fdes
);

331 
	}
}

333 
	$g°©
(
fûe
, 
¨gÊ
)

334 *
fûe
;

336 
ibuf
 
°©b
;

337 
lbuf
 *
ªp
;

339 i‡(
œ°p
+1 >
æa°p
) {

340 
	`sbrk
(512);

341 
æa°p
.
idev
 =+ 512;

343 
ªp
 = 
œ°p
;

344 
œ°p
++;

345 
ªp
->
lÊags
 = 0;

346 
ªp
->
 um
 = 0;

347 i‡(
¨gÊ
 || 
°©ªq
) {

348 i‡(
	`°©
(
fûe
, &
°©b
)<0) {

349 
	`¥ötf
("%†nŸ found\n", 
fûe
);

350 
°©b
.
öum
 = -1;

351 
°©b
.
isize0
 = 0;

352 
°©b
.
isize
 = 0;

353 
°©b
.
iÊags
 = 0;

354 i‡(
¨gÊ
) {

355 
œ°p
--;

359 
ªp
->
 um
 = 
°©b
.
öum
;

360 
°©b
.
iÊags
 =& ~
DIR
;

361 i‡((
°©b
.
iÊags
&
IFMT
) == 060000) {

362 
°©b
.
iÊags
 =& ~020000;

363 } i‡((
°©b
.
iÊags
&
IFMT
)==040000) {

364 
°©b
.
iÊags
 =& ~
IFMT
;

365 
°©b
.
iÊags
 =| 
DIR
;

367 
°©b
.
iÊags
 =& ~ 
LARGE
;

368 i‡(
°©b
.
iÊags
 & 
RSTXT
)

369 
°©b
.
iÊags
 =| 
STXT
;

370 
°©b
.
iÊags
 =& ~ 
RSTXT
;

371 
ªp
->
lÊags
 = 
°©b
.
iÊags
;

372 
ªp
->
luid
 = 
°©b
.
iuid
;

373 
ªp
->
lgid
 = 
°©b
.
igid
;

374 
ªp
->
 l
 = 
°©b
.
öl
;

375 
ªp
->
lsize0
 = 
°©b
.
isize0
;

376 
ªp
->
lsize
 = 
°©b
.
isize
;

377 i‡(
ªp
->
lÊags
 & (
BLK
|
CHR
Ë&& 
lÊg
)

378 
ªp
->
lsize
 = 
°©b
.
üddr
[0];

379 
ªp
->
lmtime
[0] = 
°©b
.
imtime
[0];

380 
ªp
->
lmtime
[1] = 
°©b
.
imtime
[1];

381 if(
uÊg
) {

382 
ªp
->
lmtime
[0] = 
°©b
.
ütime
[0];

383 
ªp
->
lmtime
[1] = 
°©b
.
ütime
[1];

385 
tblocks
 =+ 
	`nblock
(
°©b
.
isize0
, sètb.
isize
);

387 (
ªp
);

388 
	}
}

390 
	$com∑r
(
≠1
, 
≠2
)

391 
lbuf
 *
≠1
, *
≠2
;

393 
lbuf
 *
p1
, *
p2
;

394 
i
;

395 
j
;

396 °ru˘ { *
ch¨p
;};

398 
p1
 = 
≠1
;

399 
p2
 = 
≠2
;

400 i‡(
dÊg
==0) {

401 i‡((
p1
->
lÊags
&(
DIR
|
ISARG
)) == (DIR|ISARG)) {

402 i‡((
p2
->
lÊags
&(
DIR
|
ISARG
)) != (DIR|ISARG))

405 i‡((
p2
->
lÊags
&(
DIR
|
ISARG
)) == (DIR|ISARG))

409 i‡(
tÊg
) {

410 
i
 = 0;

411 i‡(
p2
->
lmtime
[0] > 
p1
->lmtime[0])

412 
i
++;

413 i‡(
p2
->
lmtime
[0] < 
p1
->lmtime[0])

414 
i
--;

415 i‡(
p2
->
lmtime
[1] > 
p1
->lmtime[1])

416 
i
++;

417 i‡(
p2
->
lmtime
[1] < 
p1
->lmtime[1])

418 
i
--;

419 (
i
*
rÊg
);

421 i‡(
p1
->
lÊags
&
ISARG
)

422 
p1
 =Ö1->
«mï
;

424 
p1
 =Ö1->
 ame
;

425 i‡(
p2
->
lÊags
&
ISARG
)

426 
p2
 =Ö2->
«mï
;

428 
p2
 =Ö2->
 ame
;

430 i‡((
j
 = *
p1
.
ch¨p
++ - *
p2
.charp++) ||Ö1.charp[-1]==0)

431 (
rÊg
*
j
);

433 
	}
}

	@usr/source/s2/mail.c

9 
	giobuf
[518];

10 
	gubuf
[16];

12 
	$maö
(
¨gc
, 
¨gv
)

13 *
¨gv
[];

15 *
buf
;

16 
my«me
[20], 
junk
[40], 
numbî
[20];

17 
hi¢ame
[40], 
hisdú
[40];

18 autÿ
j
, 
j0
, 
k
, 
n
, 
maû
, 
fûe
, 
mynumbî
;

20 if(
¨gc
==1 || (¨gc==2 && 
¨gv
[1][0]=='-'))

21 
¥ötm
;

22 if(
	`f›í
("/ëc/∑sswd", 
iobuf
) < 0) {

23 
	`¥ötf
("Can't openÖassword file\n");

24 
	`exô
();

26 if(
mynumbî
 = 
	`âyn
(0)) {

27 if((
fûe
 = 
	`›í
("/tmp/utmp",0)) < 0)

28 
Ÿhîway
;

29 
	`ªad
(
fûe
,
ubuf
,16)) {

30 if(
mynumbî
 =
ubuf
[8]) {

31 
	`˛o£
(
fûe
);

32 
fûe
 = 0;

33 
fûe
 < 8 && 
ubuf
[file] != ' ') {

34 
my«me
[
fûe
] = 
ubuf
[file];

35 
fûe
++;

37 
my«me
[
fûe
] = 0;

38 
«mefound
;

42 
Ÿhîway
:

43 
mynumbî
 = 
	`gëuid
();

45 if(!(
	`gëfõld
(
my«me
) &&

46 
	`gëfõld
(
junk
) &&

47 
	`gëfõld
(
numbî
) &&

48 
	`gëfõld
(
junk
) &&

49 
	`gëfõld
(
junk
) &&

50 
	`gëfõld
(
junk
) &&

51 
	`gëfõld
(
junk
))) {

52 
	`¥ötf
("Whoáre you?\n");

53 
	`exô
();

55 if(
	`©oi
(
numbî
Ë=
mynumbî
)

59 
«mefound
:

60 
	`˛o£
(
iobuf
[0]);

61 if(
¨gc
 > 2)

62 
fûe
 = 
¨gv
[1];

64 
fûe
 = 0;

65 
j0
 = 
¨gc
>2? 1: 0;

66 
	`f›í
("/ëc/∑sswd", 
iobuf
);

67 
k
 = 2;

69 if(!(
	`gëfõld
(
hi¢ame
) &&

70 
	`gëfõld
(
junk
) &&

71 
	`gëfõld
(
junk
) &&

72 
	`gëfõld
(
junk
) &&

73 
	`gëfõld
(
junk
) &&

74 
	`gëfõld
(
hisdú
) &&

75 
	`gëfõld
(
junk
)))

77 
j
 = 
j0
;

78 ++
j
 < 
¨gc
)

79 if(
	`comp
(
¨gv
[
j
], 
hi¢ame
)) {

80 
	`£nd
(
fûe
, 
my«me
, 
hi¢ame
, 
hisdú
);

81 
¨gv
[
j
][0] = 0;

82 if(++
k
 >
¨gc
)

83 
	`exô
();

87 
j
 = 
j0
;

88 ++
j
 < 
¨gc
)

89 if(
¨gv
[
j
][0] != 0) {

90 
junk
[0] = 0;

91 
	`≠≥nd
(
¨gv
[
j
], 
junk
);

92 
	`£nd
(
fûe
, 
my«me
, 
¨gv
[
j
], 
junk
);

94 
	`exô
();

96 
¥ötm
:

97 if((
maû
=
	`›í
("mailbox", 0)) < 0) {

98 
	`¥ötf
("No mail\n");

99 
	`exô
();

101 
n
 = 
	`ªad
(
maû
, 
iobuf
, 512))

102 
	`wrôe
(1, 
iobuf
, 
n
);

103 if(
¨gc
 != 2) {

104 
	`¥ötf
("Save? ");

105 
	`ªad
(0, 
buf
=
iobuf
, 512);

107 
buf
 = &
¨gv
[1][1];

108 if(
buf
[0] == 'y') {

109 if(
	`c⁄ˇt
("mailbox","mbox",0))

110 
	`¥ötf
("Old mail in `mbox'\n");

112 
	`u∆ök
("mailbox");

113 
	`exô
();

114 
	}
}

116 
	$gëfõld
(
buf
)

117 
buf
[];

119 
j
;

120 
c
;

122 
j
 = 0;

123 (
c
 = 
buf
[
j
] = 
	`gëc
(
iobuf
)) >= 0)

124 if(
c
==':' || c=='\n') {

125 
buf
[
j
] =0;

128 
j
++;

130 
	}
}

134 
	$£nd
(
fûe
, 
my«me
, 
hi¢ame
, 
hisdú
)

135 
hi¢ame
[], 
my«me
[], 
hisdú
[];

137 
buf
[512];

138 
n
;

140 
n
 = 0 ; 
hisdú
[n++];);

141 
	`≠≥nd
("/maûbox", 
hisdú
);

142 
buf
[0] = 0;

143 
	`≠≥nd
("\nFrom ",
buf
);

144 
	`≠≥nd
(
my«me
,
buf
);

145 
	`≠≥nd
(" ",
buf
);

146 
	`time
(
buf
+256);

147 
	`≠≥nd
(
	`˘ime
(
buf
+256),buf);

148 if(!
	`c⁄ˇt
(
fûe
,
hisdú
,1,
buf
))

149 
	`¥ötf
("C™'à£ndÅÿ`%s'\n",
hi¢ame
);

150 
hisdú
[
n
] = 0;

151 
	}
}

153 
	$comp
(
n1
, 
n2
)

154 
n1
[], 
n2
[];

156 
i
;

157 
c
;

159 
i
 = 0;

160 (
c
=
n1
[
i
]Ë=
n2
[i])

161 if(
c
 == 0)

163 
i
++;

165 
	}
}

167 
	$©oi
(
a
)

168 
a
[];

170 
i
, 
j
;

172 
i
 = 0;

173 
j
 = 0;

174 
a
[
j
])

175 
i
 = i*10 + 
a
[
j
++] - '0';

176 (
i
);

177 
	}
}

179 
	$≠≥nd
(
èû
, 
hód
)

180 
hód
[], 
èû
[];

182 
i
, 
j
;

184 
i
 = 0;

185 
hód
[
i
])

186 
i
++;

187 
j
 = 0;

188 
hód
[
i
++] = 
èû
[
j
++]);

189 
	}
}

191 
	$c⁄ˇt
(
‚1
,
‚2
,
Êg
,
hódî
)

192 *
‚1
,*
‚2
;

193 
Êg
;

194 *
hódî
;

196 *
Ê«me
;

197 
‚
;

198 
tmp
,
n
;

199 
buf
[512];

201 
Ê«me
 = "/tmp/mtm\0\0";

202 
Ê«me
[8] = 'a' ; flname[8] <= 'z' ; flname[8]++)

203 if(
	`°©
(
Ê«me
,
buf
) < 0)

204 
found
;

206 
nŸmp
:

207 
	`¥ötf
("can't creatÅmp file\n");

208 
	`exô
();

210 
found
:

211 if((
tmp
 = 
	`¸ót
(
Ê«me
,0400)) < 0)

212 
nŸmp
;

213 if(!
‚1
)

215 
‚
 = 0;

217 if((
‚
 = 
	`›í
(
‚1
,0)) < 0) {

218 
	`˛o£
(
tmp
);

219 
	`u∆ök
(
Ê«me
);

220 
	`¥ötf
("ˇn'à›í `%s'\n", 
‚1
);

221 
	`exô
();

223 if(
Êg
) {

224 
n
 = 0 ; 
hódî
[n++] ;);

225 
	`wrôe
(
tmp
,
hódî
,
n
-1);

227 
n
 = 
	`ªad
(
‚
,
buf
,512))

228 
	`wrôe
(
tmp
,
buf
,
n
);

229 if(
Êg
)

230 
	`wrôe
(
tmp
,"\n",1);

231 if(
‚
)

232 
	`˛o£
(
‚
);

233 if(
	`°©
(
‚2
,
buf
) >= 0) {

234 if((
‚
 = 
	`›í
(
‚2
,0)) < 0) {

235 
	`˛o£
(
tmp
);

236 
	`u∆ök
(
Ê«me
);

239 
n
 = 
	`ªad
(
‚
,
buf
,512))

240 
	`wrôe
(
tmp
,
buf
,
n
);

241 
	`˛o£
(
‚
);

243 
	`˛o£
(
tmp
);

244 if((
tmp
 = 
	`›í
(
Ê«me
,0)) < 0) {

245 
	`u∆ök
(
Ê«me
);

246 
nŸmp
;

248 if((
‚
 = 
	`¸ót
(
‚2
,0666)) < 0) {

249 
	`˛o£
(
tmp
);

250 
	`u∆ök
(
Ê«me
);

253 
n
 = 
	`ªad
(
tmp
,
buf
,512))

254 
	`wrôe
(
‚
,
buf
,
n
);

255 
	`˛o£
(
‚
);

256 
	`˛o£
(
tmp
);

257 
	`u∆ök
(
Ê«me
);

259 
	}
}

	@usr/source/s2/mkfs.c

3 *
	ms_isize
;

4 *
	ms_fsize
;

5 
	ms_n‰ì
;

6 
	ms_‰ì
[100];

7 
	ms_nöode
;

8 
	ms_öode
[100];

9 
	ms_Êock
;

10 
	ms_ûock
;

11 
	ms_fmod
;

12 
	ms_time
[2];

13 } 
	gfûsys
;

15 
	söode


17 
	mi_numbî
;

18 
	mi_mode
;

19 
	mi_∆ök
;

20 
	mi_uid
;

21 
	mi_gid
;

22 
	mi_size0
;

23 *
	mi_size1
;

24 
	mi_addr
[8];

25 
	mi_time
[4];

29 
	#IALLOC
 0100000

	)

30 
	#IFMT
 060000

	)

31 
	#IFDIR
 040000

	)

32 
	#IFCHR
 020000

	)

33 
	#IFBLK
 060000

	)

34 
	#ILARG
 010000

	)

35 
	#ISUID
 04000

	)

36 
	#ISGID
 02000

	)

37 
	#IREAD
 0400

	)

38 
	#IWRITE
 0200

	)

39 
	#IEXEC
 0100

	)

41 
	gutime
[2];

42 
	gfö
;

43 
	gfsi
;

44 
	gfso
;

45 *
	gch¨p
;

46 
	gbuf
[256];

47 
	g°rög
[50];

48 *
	gfsys
;

49 *
	g¥Ÿo
;

51 
	$maö
(
¨gc
, 
¨gv
)

52 **
¨gv
;

54 
f
, 
n
;

60 
	`time
(
utime
);

61 if(
¨gc
 != 3) {

62 
	`¥ötf
("arg count\n");

63 
	`exô
();

65 
fsys
 = 
¨gv
[1];

66 
¥Ÿo
 = 
¨gv
[2];

67 
fso
 = 
	`¸ót
(
fsys
, 0666);

68 if(
fso
 < 0) {

69 
	`¥ötf
("%s: c™nŸ cª©e\n", 
fsys
);

70 
	`exô
();

72 
fsi
 = 
	`›í
(
fsys
, 0);

73 if(
fsi
 < 0) {

74 
	`¥ötf
("%s: c™nŸ o≥n\n", 
fsys
);

75 
	`exô
();

77 
fö
 = 
	`›í
(
¥Ÿo
, 0);

78 if(
fö
 < 0) {

79 
n
 = 0;

80 
f
=0; 
¥Ÿo
[f]; f++) {

81 if(
¥Ÿo
[
f
]<'0' ||Öroto[f]>'9') {

82 
	`¥ötf
("%s: c™nŸ o≥n\n", 
¥Ÿo
);

83 
	`exô
();

85 
n
 =Ç*10 + 
¥Ÿo
[
f
]-'0';

87 
fûsys
.
s_fsize
 = 
n
;

88 
fûsys
.
s_isize
 = 
	`ldiv
(0, 
n
, 43+ldiv(0,Ç, 1000));

89 
	`¥ötf
("isizê%d\n", 
fûsys
.
s_isize
);

90 
ch¨p
 = "d--777 0 0 $ ";

91 
f3
;

99 
	`gë°r
();

100 
f
 = 
	`›í
(
°rög
, 0);

101 if(
f
 < 0) {

102 
	`¥ötf
("%s: c™nŸ o≥¿öô\n", 
°rög
);

103 
f2
;

105 
	`ªad
(
f
, 
buf
, 020);

106 if(
buf
[0] != 0407) {

107 
	`¥ötf
("%s: bad f‹m©\n", 
°rög
);

108 
f1
;

110 
n
 = 
buf
[1]+buf[2];

111 if(
n
 > 512) {

112 
	`¥ötf
("%s:Åoÿbig\n", 
°rög
);

113 
f1
;

115 
	`ªad
(
f
, 
buf
, 
n
);

116 
	`wtfs
(0, 
buf
);

118 
f1
:

119 
	`˛o£
(
f
);

126 
f2
:

127 
fûsys
.
s_fsize
 = 
	`gënum
();

128 
fûsys
.
s_isize
 = 
	`gënum
();

130 
f3
:

131 if(
fûsys
.
s_isize
 > fûsys.
s_fsize
 ||

132 
fûsys
.
s_fsize
-fûsys.
s_isize
-2 < filsys.s_isize) {

133 
	`¥ötf
("%l/%l: badÑ©io\n", 
fûsys
.
s_fsize
, fûsys.
s_isize
);

134 
	`exô
();

136 
	`‰ì
(0);

137 
n
=
fûsys
.
s_fsize
-1;Ç!=fûsys.
s_isize
+1;Ç--)

138 
	`‰ì
(
n
);

144 
n
=0;Ç<256;Ç++)

145 
buf
[
n
] = 0;

146 
n
=0;Ç!=
fûsys
.
s_isize
;Ç++)

147 
	`wtfs
(
n
+2, 
buf
);

148 
	`cfûe
(0);

154 
n
=0;Ç<256;Ç++)

155 
buf
[
n
] = 0;

156 
fûsys
.
s_time
[0] = 
utime
[0];

157 
fûsys
.
s_time
[1] = 
utime
[1];

158 
	`wtfs
(1, &
fûsys
);

159 
	}
}

161 
	$cfûe
(
∑r
)

162 
öode
 *
∑r
;

164 
öode
 
ö
;

165 
db
[256], 
ib
[256];

166 
dbc
, 
ibc
;

167 
öo
;

168 
i
, 
f
, *
p1
, *
p2
;

174 
	`gë°r
();

175 
ö
.
i_mode
 = 
IALLOC
;

176 
ö
.
i_mode
 =| 
	`gmode
(
°rög
[0], "bcd", 
IFBLK
, 
IFCHR
, 
IFDIR
);

177 
ö
.
i_mode
 =| 
	`gmode
(
°rög
[1], "u", 
ISUID
);

178 
ö
.
i_mode
 =| 
	`gmode
(
°rög
[2], "g", 
ISGID
);

179 
i
=3; i<6; i++) {

180 if(
°rög
[
i
]<'0' || string[i]>'7') {

181 
	`¥ötf
("%c/%s: bad digô\n", 
°rög
[
i
], string);

182 
	`exô
();

184 
ö
.
i_mode
 =| (
°rög
[
i
]-'0')<<(15-3*i);

186 
ö
.
i_uid
 = 
	`gënum
();

187 
ö
.
i_gid
 = 
	`gënum
();

194 
öo
++;

195 
ö
.
i_numbî
 = 
öo
;

196 if(
	`ldiv
(0, 
öo
, 16Ë> 
fûsys
.
s_isize
) {

197 
	`¥ötf
("too many inodes\n");

198 
	`exô
();

200 
ö
.
i_∆ök
 = 1;

201 
ö
.
i_size0
 = 0;

202 
ö
.
i_size1
 = 0;

203 
i
=0; i<8; i++)

204 
ö
.
i_addr
[
i
] = 0;

205 
i
=0; i<256; i++) {

206 
db
[
i
] = 0;

207 
ib
[
i
] = 0;

209 if(
∑r
 == 0) {

210 
∑r
 = &
ö
;

211 
ö
.
i_∆ök
--;

213 
dbc
 = 0;

214 
ibc
 = 0;

215 
ö
.
i_mode
&
IFMT
) {

223 
	`gë°r
();

224 
f
 = 
	`›í
(
°rög
, 0);

225 if(
f
 < 0) {

226 
	`¥ötf
("%s: c™nŸ o≥n\n", 
°rög
);

229 (
i
=
	`ªad
(
f
, 
db
, 512)) > 0) {

230 
ö
.
i_size1
 =+ 
i
;

231 
	`√wblk
(&
dbc
, 
db
, &
ibc
, 
ib
);

233 
	`˛o£
(
f
);

236 
IFBLK
:

237 
IFCHR
:

243 
ö
.
i_addr
[0] = 
	`gënum
()<<8;

244 
ö
.
i_addr
[0] =| 
	`gënum
();

247 
IFDIR
:

255 
∑r
->
i_∆ök
++;

256 
	`íåy
(
∑r
->
i_numbî
, "..", &
dbc
, 
db
, &
ibc
, 
ib
);

257 
ö
.
i_∆ök
++;

258 
	`íåy
(
ö
.
i_numbî
, ".", &
dbc
, 
db
, &
ibc
, 
ib
);

259 
ö
.
i_size1
 = 32;

261 
	`gë°r
();

262 if(
°rög
[0]=='$' && string[1]=='\0')

264 
	`íåy
(
öo
+1, 
°rög
, &
dbc
, 
db
, &
ibc
, 
ib
);

265 
ö
.
i_size1
 =+ 16;

266 
	`cfûe
(&
ö
);

270 if(
dbc
 != 0)

271 
	`√wblk
(&
dbc
, 
db
, &
ibc
, 
ib
);

272 if(
ibc
 > 8) {

273 
ö
.
i_mode
 =| 
ILARG
;

274 
dbc
 = 
	`Æloc
();

275 
	`wtfs
(
dbc
, 
ib
);

276 
ö
.
i_addr
[0] = 
dbc
;

278 
i
=0; i<
ibc
; i++)

279 
ö
.
i_addr
[
i
] = 
ib
[i];

280 
ö
.
i_time
[0] = in.i_time[2] = 
utime
[0];

281 
ö
.
i_time
[1] = in.i_time[3] = 
utime
[1];

282 
i
 = 
ö
.
i_numbî
 + 31;

283 
dbc
 = 
	`ldiv
(0, 
i
, 16);

284 
p1
 = &
buf
[
	`Ãem
(0, 
i
, 16)*16];

285 
p2
 = &
ö
.
i_mode
;

286 
	`rdfs
(
dbc
, 
buf
);

287 
i
=0; i<16; i++)

288 *
p1
++ = *
p2
++;

289 
	`wtfs
(
dbc
, 
buf
);

290 
	}
}

292 
	$gmode
(
c
, 
s
, 
m0
, 
m1
, 
m2
, 
m3
)

293 
c
, *
s
;

295 
i
;

297 
i
=0; 
s
[i]!='\0'; i++)

298 if(
c
 =
s
[
i
])

299 ((&
m0
)[
i
]);

300 if(
c
 == '-')

302 
	`¥ötf
("%c/%s: bad mode\n", 
c
, 
°rög
);

303 
	`exô
();

304 
	}
}

306 
	$gënum
()

308 
n
, 
i
;

310 
	`gë°r
();

311 
n
 = 0;

312 
i
 = 0;

313 
i
=0; 
°rög
[i]!='\0'; i++) {

314 if(
°rög
[
i
]<'0' || string[i]>'9') {

315 
	`¥ötf
("%s: badÇumbî\n", 
°rög
);

316 
	`exô
();

318 
n
 =Ç*10 + 
°rög
[
i
] - '0';

320 (
n
);

321 
	}
}

323 
	$gë°r
()

325 
i
, 
c
;

327 
lo›
:

328 
c
=
	`gëch
()) {

333 
lo›
;

336 
	`¥ötf
("EOF\n");

337 
	`exô
();

340 
	`gëch
() != '\n');

341 
lo›
;

344 
i
 = 0;

347 
°rög
[
i
++] = 
c
;

348 
c
 = 
	`gëch
();

349 } 
c
!=' '&&c!='\t'&&c!='\n'&&c!='\0');

350 
°rög
[
i
] = '\0';

351 
	}
}

353 
	$rdfs
(
bno
, 
bf
)

355 
n
;

357 
	`£ek
(
fsi
, 
bno
, 3);

358 
n
 = 
	`ªad
(
fsi
, 
bf
, 512);

359 if(
n
 != 512) {

360 
	`¥ötf
("ªadÉº‹: %l\n", 
bno
);

361 
	`exô
();

363 
	}
}

365 
	$wtfs
(
bno
, 
bf
)

367 
n
;

369 
	`£ek
(
fso
, 
bno
, 3);

370 
n
 = 
	`wrôe
(
fso
, 
bf
, 512);

371 if(
n
 != 512) {

372 
	`¥ötf
("wrôêîr‹: %l\n", 
bno
);

373 
	`exô
();

375 
	}
}

377 
	$Æloc
()

379 
bno
, 
i
;

381 
fûsys
.
s_n‰ì
--;

382 
bno
 = 
fûsys
.
s_‰ì
[fûsys.
s_n‰ì
];

383 
fûsys
.
s_‰ì
[fûsys.
s_n‰ì
] = 0;

384 if(
bno
 == 0) {

385 
	`¥ötf
("out of free space\n");

386 
	`exô
();

388 if(
fûsys
.
s_n‰ì
 <= 0) {

389 
	`rdfs
(
bno
, 
buf
);

390 
fûsys
.
s_n‰ì
 = 
buf
[0];

391 
i
=0; i<100; i++)

392 
fûsys
.
s_‰ì
[
i
] = 
buf
[i+1];

394 (
bno
);

395 
	}
}

397 
	$‰ì
(
bno
)

399 
i
;

401 if(
fûsys
.
s_n‰ì
 >= 100) {

402 
buf
[0] = 
fûsys
.
s_n‰ì
;

403 
i
=0; i<100; i++)

404 
buf
[
i
+1] = 
fûsys
.
s_‰ì
[i];

405 
	`wtfs
(
bno
, 
buf
);

406 
fûsys
.
s_n‰ì
 = 0;

408 
fûsys
.
s_‰ì
[fûsys.
s_n‰ì
] = 
bno
;

409 
fûsys
.
s_n‰ì
++;

410 
	}
}

412 
	$íåy
(
öo
, 
°r
, 
adbc
, 
db
, 
aibc
, 
ib
)

413 *
°r
;

414 *
adbc
, *
db
, *
aibc
, *
ib
;

416 *
s
;

417 
i
;

419 
db
[*
adbc
] = 
öo
;

420 (*
adbc
)++;

421 
s
 = &
db
[*
adbc
];

422 
i
=0; i<14; i++) {

423 *
s
++ = *
°r
;

424 if(*
°r
 != '\0')

425 
°r
++;

427 *
adbc
 =+ 7;

428 if(*
adbc
 >= 256)

429 
	`√wblk
(
adbc
, 
db
, 
aibc
, 
ib
);

430 
	}
}

432 
	$√wblk
(
adbc
, 
db
, 
aibc
, 
ib
)

433 *
adbc
, *
db
, *
aibc
, *
ib
;

435 
bno
, 
i
;

437 
bno
 = 
	`Æloc
();

438 
	`wtfs
(
bno
, 
db
);

439 
i
=0; i<256; i++)

440 
db
[
i
] = 0;

441 *
adbc
 = 0;

442 
ib
[*
aibc
] = 
bno
;

443 (*
aibc
)++;

444 if(*
aibc
 >= 256) {

445 
	`¥ötf
("indirect block full\n");

446 
	`exô
();

448 
	}
}

450 
	$gëch
()

453 if(
ch¨p
)

454 (*
ch¨p
++);

455 (
	`gëch¨
());

456 
	}
}

	@usr/source/s2/mknod.c

1 
	$maö
(
¨gc
, 
¨gv
)

2 
¨gc
;

3 **
¨gv
;

5 
m
, 
a
, 
b
;

7 if(
¨gc
 != 5) {

8 
	`¥ötf
("arg count\n");

9 
ußge
;

11 if(*
¨gv
[2] == 'b')

12 
m
 = 0160666; 

13 if(*
¨gv
[2] == 'c')

14 
m
 = 0120666; 

15 
ußge
;

16 
a
 = 
	`numbî
(
¨gv
[3]);

17 if(
a
 < 0)

18 
ußge
;

19 
b
 = 
	`numbî
(
¨gv
[4]);

20 if(
b
 < 0)

21 
ußge
;

22 if(
	`mknod
(
¨gv
[1], 
m
, (
a
<<8)|
b
) < 0)

23 
	`≥º‹
("mknod");

24 
	`exô
();

26 
ußge
:

27 
	`¥ötf
("usage: mknodÇame b/c major minor\n");

28 
	}
}

30 
	$numbî
(
s
)

31 *
s
;

33 
n
, 
c
;

35 
n
 = 0;

36 
c
 = *
s
++) {

37 if(
c
<'0' || c>'9')

39 
n
 =Ç*10 + 
c
-'0';

41 (
n
);

42 
	}
}

	@usr/source/s2/mount.c

1 
	#NMOUNT
 16

	)

2 
	#NAMSIZ
 32

	)

4 
	smèb
 {

5 
	mfûe
[
NAMSIZ
];

6 
	m•ec
[
NAMSIZ
];

7 } 
	gmèb
[
NMOUNT
];

9 
	$maö
(
¨gc
, 
¨gv
)

10 **
¨gv
;

12 
ro
;

13 
mèb
 *
mp
;

14 *
≈
;

15 
n
, 
mf
;

17 
mf
 = 
	`›í
("/etc/mtab", 0);

18 
	`ªad
(
mf
, 
mèb
, 
NMOUNT
*2*
NAMSIZ
);

19 i‡(
¨gc
==1) {

20 
mp
 = 
mèb
; m∞< &mèb[
NMOUNT
]; mp++)

21 i‡(
mp
->
fûe
[0])

22 
	`¥ötf
("%†⁄ %s\n", 
mp
->
•ec
, mp->
fûe
);

25 if(
¨gc
 < 3) {

26 
	`¥ötf
("arg count\n");

29 
ro
 = 0;

30 if(
¨gc
 > 3)

31 
ro
++;

32 if(
	`mou¡
(
¨gv
[1],árgv[2], 
ro
) < 0) {

33 
	`≥º‹
("mount");

36 
≈
 = 
¨gv
[1];

37 *
≈
++)

39 
≈
--;

40 *--
≈
 == '/')

41 *
≈
 = '\0';

42 
≈
 > 
¨gv
[1] && *--np != '/')

44 if(*
≈
 == '/')

45 
≈
++;

46 
¨gv
[1] = 
≈
;

47 
mp
 = 
mèb
; m∞< &mèb[
NMOUNT
]; mp++) {

48 i‡(
mp
->
fûe
[0] == 0) {

49 
≈
 = 
mp
->
•ec
;Ç∞< &mp->•ec[
NAMSIZ
-1];)

50 i‡((*
≈
++ = *
¨gv
[1]++) == 0)

51 
¨gv
[1]--;

52 
≈
 = 
mp
->
fûe
;Ç∞< &mp->fûe[
NAMSIZ
-1];)

53 i‡((*
≈
++ = *
¨gv
[2]++) == 0)

54 
¨gv
[2]--;

55 
mp
 = &
mèb
[
NMOUNT
];

56 (--
mp
)->
fûe
[0] == 0);

57 
mf
 = 
	`¸ót
("/etc/mtab", 0644);

58 
	`wrôe
(
mf
, 
mèb
, (
mp
-mèb+1)*2*
NAMSIZ
);

62 
	}
}

	@usr/source/s2/mv.c

8 
	g°buf
[42];

9 
	ssbuf
 {

10 
	mdev
;

11 
	möum
;

12 
	mimode
;

13 
	m∆ök
;

14 
	muid
;

15 
	mgid
;

16 
	msiz0
;

17 
	msiz1
;

18 
	maddr
[8];

19 
	mad©e
[2];

20 
	mmd©e
[2];

22 
	g°rbuf
[70];

24 
	$maö
(
¨gc
,
¨gv
)

25 
¨gc
;

26 *
¨gv
[];

28 **
¨gp
;

29 *
¨gp1
, *
¨gp2
, *
¨gp3
, *
¨gp4
;

30 *
p
, *
p1
, *
p2
;

31 
∂a˚
[100];

32 
i
;

33 
°©us
;

34 
b
;

35 
¨gp
 = 
¨gv
;

40 if(
¨gc
 != 3){

41 
	`wrôe
(1,"Usage: mvÇame1Çame2\n",22);

42 
	`exô
();

47 
¨gp3
 = 
¨gp
[1];

48 
¨gp4
 = 
¨gp
[2];

49 if(
	`°©
(
¨gp
[1], 
°buf
) < 0){

50 
	`wrôe
(1,"Source fileÇon-existent\n",25);

51 
	`exô
();

57 if((
°buf
[0].
imode
 & 060000) == 040000){

67 if(
	`°©
(
¨gp
[2], 
°buf
) >= 0){

68 
	`wrôe
(1,"DirectoryÅargetÉxists.\n",25);

69 
	`exô
();

71 
¨gp1
 = 
¨gp
[1];

72 
¨gp2
 = 
¨gp
[2];

73 *
¨gp1
 =*
¨gp2
){

74 
¨gp1
++;

75 if(*
¨gp2
++ == 0){

76 
	`wrôe
(1,"???\n",4);

77 
	`exô
();

80 *
¨gp1
)if(*argp1++ == '/'){

81 
	`wrôe
(1,"DirectoryÑename only\n",22);

82 
	`exô
();

84 *
¨gp2
)if(*argp2++ == '/'){

85 
	`wrôe
(1,"DirectoryÑename only\n",22);

86 
	`exô
();

88 if(*--
¨gp1
 == '.'){

89 
	`wrôe
(1,"values of giveÑiseÅo dom!\n",37);

90 
	`exô
();

96 
	`£tuid
(
	`gëuid
());

97 if(
	`°©
(
¨gp4
, &
°buf
[2]) >= 0){

98 if((
°buf
[2].
imode
 & 060000) == 040000){

99 
¨gp2
 = 
°rbuf
;

100 *
¨gp2
++ = *
¨gp4
++);

101 
¨gp2
[-1] = '/';

102 
¨gp4
 = 
¨gp
[1];

103 
¨gp1
 = 
¨gp
[1];

104 *
¨gp4
)

105 if(*
¨gp4
++ == '/')

106 
¨gp1
 = 
¨gp4
;

107 *
¨gp2
++ = *
¨gp1
++);

108 
¨gp4
 = 
°rbuf
;

110 if(
	`°©
(
¨gp4
, &
°buf
[2]) >= 0){

111 if((
°buf
[0]==stbuf[2]) && (stbuf[1]==stbuf[3])){

112 
	`wrôe
(1,"Filesáre identical.\n",21);

113 
	`exô
();

115 if(
	`gëuid
(Ë=
°buf
[2].
uid
)

116 
b
 = 0200; 

117 if(
	`gëgid
(Ë=
°buf
[2].
gid
)

118 
b
 = 020; 

119 
b
 = 02;

120 if((
°buf
[2].
imode
 & 
b
) == 0) {

121 
	`¥ötf
("%s: %ÿmodê", 
¨gp4
,

122 
°buf
[2].
imode
 & 07777);

123 
i
 = 
b
 = 
	`gëch¨
();

124 
b
 != '\n' && b != '\0')

125 
b
 = 
	`gëch¨
();

126 if(
i
 != 'y')

127 
	`exô
();

129 if(
	`u∆ök
(
¨gp4
) < 0){

130 
	`wrôe
(1,"CannotÑemoveÅarget file.\n",27);

131 
	`exô
();

136 if(
	`lök
(
¨gp3
, 
¨gp4
) < 0){

137 
i
 = 
	`f‹k
();

138 if(
i
 == -1){

139 
	`wrôe
(1,"Tryágain.\n",11);

140 
	`exô
();

142 if(
i
){

143 
	`waô
(&
°©us
Ë!
i
);

145 
p
 = 
∂a˚
;

146 
p1
 = 
p
;

147 *
p
++ = *
¨gp3
++);

148 
p2
 = 
p
;

149 *
p
++ = *
¨gp4
++);

150 
	`exe˛
("/bö/˝","˝", 
p1
, 
p2
, 0);

151 
	`wrôe
(1, "no cp\n", 6);

152 
	`exô
(1);

154 if((
°©us
 & 0377) != 0){

155 
	`wrôe
(1,"?\n", 2);

156 
	`exô
();

158 if(
°©us
 !0Ë
	`exô
();

160 if(
	`u∆ök
(
¨gp3
) < 0){

161 
	`wrôe
(1,"Cannot unlink source file.\n",26);

162 
	`exô
();

164 
	}
}

166 
	$putch¨
(
c
)

168 
	`wrôe
(1, &
c
, 1);

169 
	}
}

171 
	$gëch¨
()

173 
c
;

175 if(
	`ªad
(0, &
c
, 1) != 1) (0);

176 (
c
);

177 
	}
}

	@usr/source/s2/nice.c

2 *
	g¨gs
[100];

3 
	g°rög
[10000];

5 
	$maö
(
¨gc
, 
¨gv
)

6 
¨gc
;

7 *
¨gv
[];

9 
i
;

10 **
¨gp
, *
°Ω
, *
p
;

12 if(
¨gc
 < 2) {

13 
	`¥ötf
("arg count\n");

14 
	`exô
();

16 
¨gc
--;

17 
¨gv
++;

18 
¨gp
 = 
¨gs
;

19 
°Ω
 = 
°rög
;

20 
i
=0; i<9; i++)

21 *
°Ω
++ = "/u§/bö/"[
i
];

22 
i
=0; i<
¨gc
; i++) {

23 *
¨gp
++ = 
°Ω
;

24 
p
 = *
¨gv
++;

25 *
°Ω
++ = *
p
++);

27 *
¨gp
 = 0;

28 
	`ni˚
(16);

29 
	`execv
(
°rög
+9, 
¨gs
);

30 
	`execv
(
°rög
+4, 
¨gs
);

31 
	`execv
(
°rög
, 
¨gs
);

32 
	`¥ötf
("%†nŸ found\n", 
°rög
+9);

33 
	}
}

	@usr/source/s2/nm.c

1 
	gfout
;

2 
	gcÊg
;

3 
	gnÊg
;

4 
	guÊg
;

5 
	grÊg
 1;

6 
	ggÊg
;

7 
	gpÊg
;

8 
	s∆


10 
	m«me
[8];

11 
	mtyp
;

12 *
	mvÆ
;

13 } *
	g∆p
;

14 
	gfi
;

15 
	gbuf
[8];

16 
	$maö
(
¨gc
, 
¨gv
)

17 **
¨gv
;

19 
n
, 
i
, 
j
;

20 
	`com∑ª
();

22 i‡(--
¨gc
 > 0 && *
¨gv
[1] == '-') {

23 
¨gv
++;

24 *++*
¨gv
) **argv) {

26 
nÊg
++;

30 
cÊg
++;

34 
gÊg
++;

38 
uÊg
++;

42 
rÊg
 = -1;

46 
pÊg
 ++;

52 
¨gc
--;

54 i‡(
¨gc
==0)

55 
fi
 = 
	`›í
("a.out", 0); 

56 
fi
 = 
	`›í
(*++
¨gv
, 0);

57 if(
fi
 < 0) {

58 
	`¥ötf
("cannot open input\n");

59 
	`exô
();

61 
	`ªad
(
fi
, 
buf
, 020);

62 if(
buf
[0]!=0407 && buf[0]!=0410) {

63 
	`¥ötf
("bad format\n");

64 
	`exô
();

66 
	`£ek
(
fi
, 
buf
[1], 1);

67 
	`£ek
(
fi
, 
buf
[2], 1);

68 if(
buf
[7] != 1) {

69 
	`£ek
(
fi
, 
buf
[1], 1);

70 
	`£ek
(
fi
, 
buf
[2], 1);

72 
n
 = 
	`ldiv
(0, 
buf
[4], 12);

73 if(
n
 == 0) {

74 
	`¥ötf
("noÇameÜist\n");

75 
	`exô
();

77 
∆p
 = 
	`sbrk
(12*
n
);

78 
	`ªad
(
fi
, 
∆p
, 
n
*12);

79 i‡(
pÊg
==0)

80 
	`qs‹t
(
∆p
, 
n
, 12, 
com∑ª
);

81 
fout
 = 
	`dup
(1);

82 
	`˛o£
(1);

83 
i
=0; i<
n
; i++) {

84 if(
gÊg
 && (
∆p
->
typ
&040)==0)

85 
out
;

86 if(
cÊg
) {

87 if(
∆p
->
«me
[0] != '_')

88 
out
;

89 
j
=0; j<7; j++)

90 
∆p
->
«me
[
j
] =Çlp->name[j+1];

91 
∆p
->
«me
[7] = '\0';

93 
j
 = 
∆p
->
typ
&037;

94 if(
j
 > 4)

95 
j
 = 1;

96 if(
j
==0 && 
∆p
->
vÆ
)

97 
j
 = 5;

98 if(
uÊg
 && 
j
!=0)

99 
out
;

100 if(!
uÊg
) {

101 if(
j
==0)

102 
	`¥ötf
(" "); 

103 
	`¥öto
(
∆p
->
vÆ
);

104 
	`¥ötf
("%¯", (
∆p
->
typ
&040? "UATDBC":"u©dbc")[
j
]);

106 
	`¥ötf
("%.8s\n", 
∆p
);

107 
out
:

108 
∆p
++;

110 
	`Êush
();

111 
	}
}

113 
	$com∑ª
(
p1
, 
p2
)

114 
∆
 *
p1
, *
p2
;

116 
a
, 
i
;

118 
a
 = 0;

119 if(
nÊg
) {

120 if(
p1
->
vÆ
 > 
p2
->val) {

121 
a
 = 1;

122 
out
;

124 if(
p1
->
vÆ
 < 
p2
->val) {

125 
a
 = -1;

126 
out
;

129 
i
=0; i<8; i++)

130 if(
p1
->
«me
[
i
] !
p2
->name[i]) {

131 if(
p1
->
«me
[
i
] > 
p2
->name[i])

132 
a
 = 1; 

133 
a
 = -1;

134 
out
;

136 
out
:

137 (
a
*
rÊg
);

138 
	}
}

140 
	$¥öto
(
v
)

142 
i
;

144 
	`¥ötf
("%c", 
v
<0?'1':'0');

145 
i
=0; i<5; i++) {

146 
	`¥ötf
("%c", ((
v
>>12)&7)+'0');

147 
v
 =<<3;

149 
	}
}

	@usr/source/s2/nohup.c

2 *
	g¨gs
[100];

3 
	g°rög
[10000];

5 
	$maö
(
¨gc
, 
¨gv
)

6 
¨gc
;

7 *
¨gv
[];

9 
i
;

10 **
¨gp
, *
°Ω
, *
p
;

12 if(
¨gc
 < 2) {

13 
	`¥ötf
("arg count\n");

14 
	`exô
();

16 
¨gc
--;

17 
¨gv
++;

18 
¨gp
 = 
¨gs
;

19 
°Ω
 = 
°rög
;

20 
i
=0; i<9; i++)

21 *
°Ω
++ = "/u§/bö/"[
i
];

22 
i
=0; i<
¨gc
; i++) {

23 *
¨gp
++ = 
°Ω
;

24 
p
 = *
¨gv
++;

25 *
°Ω
++ = *
p
++);

27 *
¨gp
 = 0;

28 
	`sig«l
(1, 1);

29 
	`sig«l
(2, 1);

30 
	`sig«l
(3, 1);

31 
	`execv
(
°rög
+9, 
¨gs
);

32 
	`execv
(
°rög
+4, 
¨gs
);

33 
	`execv
(
°rög
, 
¨gs
);

34 
	`¥ötf
("%†nŸ found\n", 
°rög
+9);

35 
	}
}

	@usr/source/s2/od.c

1 
	gw‹d
[16];

2 
	ggbuf
[512];

3 
	gfi
;

4 
	gc⁄v
;

5 
	gba£
 010;

6 
	gba£m
 01000;

7 
	gmax
;

8 
	ggidx
;

9 
	gg˙t
;

10 
	geof
;

11 
	gaddr
[2];

12 
	g‰om
[2];

13 
	gkey
;

14 
	gÊag
;

15 
	gnw‹d
 8;

17 
	$maö
(
¨gc
, 
¨gv
)

18 **
¨gv
;

20 
fout
;

21 
f
, 
k
, 
w
, 
i
, 
a
[2];

22 *
p
;

24 
fout
 = 
	`dup
(1);

25 
¨gv
++;

26 if(
¨gc
 > 1) {

27 
p
 = *
¨gv
;

28 if(*
p
 == '-') {

29 (
i
 = *
p
++) != '\0') {

30 
i
) {

32 
c⁄v
 =| 001;

33 
f
 = 6;

36 
c⁄v
 =| 002;

37 
f
 = 5;

40 
c⁄v
 =| 004;

41 
f
 = 4;

44 
c⁄v
 =| 010;

45 
f
 = 4;

48 
c⁄v
 =| 020;

49 
f
 = 5;

52 
c⁄v
 =| 040;

53 
f
 = 7;

56 if(
f
 > 
max
)

57 
max
 = 
f
;

59 
¨gc
--;

60 
¨gv
++;

63 if(!
c⁄v
) {

64 
max
 = 6;

65 
c⁄v
 = 1;

67 if(
¨gc
 > 1)

68 if(**
¨gv
 != '+') {

69 
fi
 = 
	`›í
(*
¨gv
, 0);

70 if(
fi
 < 0) {

71 
	`¥ötf
("ˇ¬Ÿ o≥¿%s\n", *
¨gv
);

72 
d⁄e
;

74 
¨gv
++;

75 
¨gc
--;

77 if(
¨gc
 > 1)

78 
	`off£t
(*
¨gv
);

80 
lo›
:

81 
f
 = 1;

82 
a
[0] = 
addr
[0];

83 
a
[1] = 
addr
[1];

84 
i
=0; i<
nw‹d
; i++) {

85 
w
 = 
	`gëw
();

86 if(
eof
)

88 
w‹d
[
i
] = 
w
;

89 if(
i
)

90 
f
 =& 
w
==
k
; 

91 
k
 = 
w
;

93 if(
i
)

94 if(
f
 && !
eof
) {

95 if(!(
Êag
 && 
k
==
key
)) {

96 
	`du∂
();

97 
key
 = 
k
;

98 
‰om
[0] = 
a
[0];

99 
‰om
[1] = 
a
[1];

101 
Êag
 =+ 
i
;

103 
	`du∂
();

104 
	`löe
(
a
, 
w‹d
, 
i
);

106 if(!
eof
)

107 
lo›
;

108 
	`puè
(
addr
);

109 
	`putch¨
('\n');

111 
d⁄e
:

112 
	`Êush
();

113 
	}
}

115 
	$du∂
()

118 if(
Êag
) {

119 
Êag
 = 0;

120 
	`löe
(
‰om
, &
key
, 1);

122 
	}
}

124 
	$puè
(
a
)

125 
a
[2];

128 
	`puä
(
a
[0], 
ba£
, 4);

129 
	`puä
(
a
[1], 
ba£
, 3);

130 
	`putch¨
(' ');

131 
	}
}

133 
	$löe
(
a
, 
w
, 
n
)

134 
w
[];

136 
i
, 
f
, 
c
;

138 
f
 = 1;

139 
c
=1; c; c=+c) {

140 if((
c
&
c⁄v
) == 0)

142 if(
f
) {

143 
	`puè
(
a
);

144 
f
 = 0;

146 
i
=0; i<8; i++)

147 
	`putch¨
(' ');

148 
i
=0; i<
n
; i++) {

149 
	`putx
(
w
[
i
], 
c
);

150 
	`putch¨
(
i
==
n
-1? '\n': ' ');

153 
	}
}

155 
	$putx
(
n
, 
c
)

158 
c
) {

160 
	`¥e
(6);

161 
	`puä
(
n
, 8, 6);

164 
	`¥e
(5);

165 
	`puä
(
n
, 10, 5);

168 
	`¥e
(4);

169 
	`put›
(
n
);

172 
	`¥e
(4);

173 
	`puä
(
n
, 16, 4);

176 
	`¥e
(5);

177 
	`putc
(
n
);

178 
	`putch¨
(' ');

179 
	`putc
(
n
>>8);

182 
	`¥e
(7);

183 
	`puä
(
n
&0377, 8, 3);

184 
	`putch¨
(' ');

185 
	`puä
((
n
>>8)&0377, 8, 3);

188 
	}
}

190 
	$gëw
()

192 
b1
, 
b2
;

194 
b1
 = 
	`gëc
();

195 if(
b1
 == -1) {

196 
eof
 = 1;

199 
b2
 = 
	`gëc
();

200 if(
b2
 == -1)

201 
b2
 = 0;

202 (
b1
|(
b2
<<8));

203 
	}
}

205 
	$gëc
()

208 if(
gidx
 >
g˙t
) {

209 
g˙t
 = 
	`ªad
(
fi
, 
gbuf
, 512);

210 if(
g˙t
 <= 0)

212 
gidx
 = 0;

214 if(++
addr
[1] >
ba£m
) {

215 
addr
[0]++;

216 
addr
[1] = 0;

218 (
gbuf
[
gidx
++]&0377);

219 
	}
}

221 
	$putc
(
c
)

223 
c
 =& 0377;

224 if(
c
>037 && c<0177 && c!='\\') {

225 
	`putch¨
(' ');

226 
	`putch¨
(
c
);

229 
	`putch¨
('\\');

230 
c
) {

232 
	`putch¨
('0');

235 
	`putch¨
('n');

238 
	`putch¨
('\\');

241 
	`putch¨
('t');

244 
	`putch¨
('?');

246 
	}
}

248 
	$puä
(
n
, 
b
, 
c
)

251 if(!
c
)

253 
	`puä
(
	`ldiv
(0,
n
,
b
),b,
c
-1);

254 if((
n
=
	`Ãem
(0,n,
b
)) > 9)

255 
	`putch¨
(
n
-10+'a'); 

256 
	`putch¨
(
n
+'0');

257 
	}
}

259 
	$¥e
(
n
)

261 
i
;

263 
i
=
n
; i<
max
; i++)

264 
	`putch¨
(' ');

265 
	}
}

267 
	$off£t
(
s
)

268 
s
[];

270 *
p
;

271 
a
[2], 
d
, 
i
, 
j
, 
b
;

273 
p
 = 
s
;

274 *
p
++);

275 
i
 = 
p
-
s
-1;

276 
b
 = 0;

277 if(
i
 > 0)

278 if(
p
[-2] == 'b') {

279 
i
--;

280 
b
++;

281 
p
--;

283 if(
i
 > 0)

284 if(
p
[-2] == '.') {

285 
i
--;

286 
ba£
 = 10;

287 
ba£m
 = 1000;

289 
a
[0] = 0;

290 
j
=0; 
i
-j>3; j++) {

291 
d
 = 
s
[
j
];

292 if(
d
>='0' && d<='9')

293 
a
[0] =á[0]*
ba£
 + 
d
-'0';

295 
a
[1] = 0;

296 ; 
i
-
j
>0; j++) {

297 
d
 = 
s
[
j
];

298 if(
d
>='0' && d<='9')

299 
a
[1] =á[1]*
ba£
 + 
d
-'0';

301 if(
b
) {

302 
i
 = 
a
[0]*
ba£m
+a[1];

303 
a
[0] = 0;

304 
a
[1] = 0;

305 
i
--) {

306 
a
[1] =+ 512;

307 
a
[1] >
ba£m
) {

308 
a
[1] =- 
ba£m
;

309 
a
[0]++;

313 
i
 = 0;

314 
a
[0] > 
addr
[0]+1) {

315 
addr
[1] =+ 512;

316 
addr
[1] >
ba£m
) {

317 
addr
[1] =- 
ba£m
;

318 
addr
[0]++;

320 
i
++;

322 
	`£ek
(
fi
, 
i
, 3);

323 
a
[0]!=
addr
[0] ||á[1]!=addr[1])

324 if(
	`gëc
() == -1)

326 
	}
}

328 
	$put›
(
n
)

330 *
p
;

331 
i
, 
c
;

333 
p
 = 
	`gë›
(
n
);

334 
i
=0; (
c
 = *
p
++) != '\0'; i++)

335 
	`putch¨
(
c
);

336 ; 
i
<4; i++)

337 
	`putch¨
(' ');

338 
	}
}

340 
	$gë›
(
n
)

343 
n
&0170000)

346 
n
&0177000)

354 
n
&0177400)

377 
n
&0177700)

433 
n
&0177740)

438 
n
&0177770)

446 
n
&0177777)

490 
n
&0177000)

510 
n
&0177400)

542 
n
&0177700)

607 
n
&01777000)

614 
	}
}

	@usr/source/s2/pr.c

6 
	gncﬁ
 1;

7 *
	ghódî
;

8 
	gcﬁ
;

9 
	gicﬁ
;

10 
	gfûe
;

11 *
	gbuÂ
;

12 
	#BUFS
 5120

	)

13 
	gbuf„r
[
BUFS
];

14 
	#FF
 014

	)

15 
	glöe
;

16 *
	gcﬁp
[72];

17 
	gnofûe
;

18 
	gis˛o£d
[10];

19 
	g≥ekc
;

20 
	gÂage
;

21 
	g∑ge
;

22 
	gcﬁw
;

23 
	gn•a˚
;

24 
	gwidth
 72;

25 
	gÀngth
 66;

26 
	g∂ígth
 61;

27 
	gm¨gö
 10;

28 
	g¡Êg
;

29 
	gmÊg
;

30 
	gèbc
;

31 *
	gây
;

32 
	gmode
;

34 
	söode
 {

35 
	mdev
;

36 
	möum
;

37 
	mÊags
;

38 
	m∆ök
;

39 
	muid
;

40 
	mgid
;

41 
	msiz0
;

42 
	msize
;

43 
	m±r
[8];

44 
	m©ime
[2];

45 
	mmtime
[2];

48 
	$maö
(
¨gc
, 
¨gv
)

49 **
¨gv
;

51 
nfd⁄e
;

52 
	`⁄öå
();

53 
fout
;

55 
ây
 = "/dev/ttyx";

56 
fout
 = 
	`dup
(1);

57 
	`˛o£
(1);

58 i‡((
	`sig«l
(2, 1) & 01) == 0)

59 
	`sig«l
(2, 
⁄öå
);

60 
	`fixây
();

61 
nfd⁄e
=0; 
¨gc
>1;árgc--) {

62 
¨gv
++;

63 i‡(**
¨gv
 == '-') {

64 *++*
¨gv
) {

66 i‡(
¨gc
>=2) {

67 
hódî
 = *++
¨gv
;

68 
¨gc
--;

73 
¡Êg
++;

77 
Àngth
 = 
	`gën
(++*
¨gv
);

81 
width
 = 
	`gën
(++*
¨gv
);

85 i‡(*++*
¨gv
)

86 
èbc
 = **
¨gv
;

88 
èbc
 = '\t';

92 
mÊg
++;

96 
ncﬁ
 = 
	`gën
(*
¨gv
);

99 } i‡(**
¨gv
 == '+') {

100 
Âage
 = 
	`gën
(++*
¨gv
);

102 
	`¥öt
(*
¨gv
,árgv);

103 
nfd⁄e
++;

104 i‡(
mÊg
)

108 i‡(
nfd⁄e
==0)

109 
	`¥öt
(0);

110 
	`Êush
();

111 
	`⁄öå
();

112 
	}
}

114 
	$⁄öå
()

117 
	`chmod
(
ây
, 
mode
);

118 
	`exô
(0);

119 
	}
}

121 
	$fixây
()

123 
öode
 
sbuf
;

124 
fout
;

126 
ây
[8] = 
	`âyn
(
fout
);

127 
	`f°©
(
fout
, &
sbuf
);

128 
mode
 = 
sbuf
.
Êags
&0777;

129 
	`chmod
(
ây
, 0600);

130 
	}
}

132 
	$¥öt
(
Â
, 
¨gp
)

133 *
Â
;

134 **
¨gp
;

136 
öode
 
sbuf
;

137 
¢cﬁ
, 
shódî
;

138 *
cbuf
;

139 
fout
;

141 i‡(
¡Êg
)

142 
m¨gö
 = 0;

144 
m¨gö
 = 10;

145 i‡(
Àngth
 <
m¨gö
)

146 
Àngth
 = 66;

147 i‡(
width
 <= 0)

148 
width
 = 72;

149 i‡(
ncﬁ
>72 ||Çcﬁ>
width
) {

150 
	`wrôe
(2, "Very funny.\n", 12);

151 
	`exô
();

153 i‡(
mÊg
) {

154 
	`m›í
(
¨gp
);

155 
ncﬁ
 = 
nofûe
;

157 
cﬁw
 = 
width
/
ncﬁ
;

158 
¢cﬁ
 = 
ncﬁ
;

159 
shódî
 = 
hódî
;

160 
∂ígth
 = 
Àngth
-5;

161 i‡(
¡Êg
)

162 
∂ígth
 = 
Àngth
;

163 i‡(--
ncﬁ
<0)

164 
ncﬁ
 = 0;

165 i‡(
mÊg
)

166 
Â
 = 0;

167 i‡(
Â
) {

168 
fûe
 = 
	`›í
(
Â
, 0);

169 i‡(
fûe
<0)

171 
	`f°©
(
fûe
, &
sbuf
);

173 
fûe
 = 0;

174 
	`time
(
sbuf
.
mtime
);

176 i‡(
hódî
 == 0)

177 
hódî
 = 
Â
;

178 
cbuf
 = 
	`˘ime
(
sbuf
.
mtime
);

179 
cbuf
[16] = '\0';

180 
∑ge
 = 1;

181 
icﬁ
 = 0;

182 
cﬁp
[
ncﬁ
] = 
buÂ
 = 
buf„r
;

183 i‡(
mÊg
==0)

184 
	`√xbuf
();

185 
mÊg
&&
nofûe
 || (!mÊg)&&
	`çgëc
(
ncﬁ
)>0) {

186 i‡(
mÊg
==0) {

187 
cﬁp
[
ncﬁ
]--;

188 i‡(
cﬁp
[
ncﬁ
] < 
buf„r
)

189 
cﬁp
[
ncﬁ
] = &
buf„r
[
BUFS
];

191 
löe
 = 0;

192 i‡(
¡Êg
==0) {

193 
	`puts
("\n\n");

194 
	`puts
(
cbuf
+4);

195 
	`puts
(" ");

196 
	`puts
(
hódî
);

197 
	`puts
(" Page ");

198 
	`putd
(
∑ge
);

199 
	`puts
("\n\n\n");

201 
	`puçage
();

202 i‡(
¡Êg
==0)

203 
löe
<
Àngth
)

204 
	`put
('\n');

205 
∑ge
++;

207 i‡(
fûe
)

208 
	`˛o£
(
fûe
);

209 
ncﬁ
 = 
¢cﬁ
;

210 
hódî
 = 
shódî
;

211 
	}
}

213 
	$m›í
(
≠
)

214 **
≠
;

216 **
p
, *
p1
;

218 
p
 = 
≠
;

219 (
p1
 = *
p
++) &&Ö1 != -1) {

220 
is˛o£d
[
nofûe
] = 
	`f›í
(
p1
, &
buf„r
[2*259*nofile]);

221 i‡(++
nofûe
>=10) {

222 
	`wrôe
(2, "Too manyárgs.\n", 15);

223 
	`exô
();

226 
	}
}

228 
	$puçage
()

230 
œ°cﬁ
, 
i
, 
c
;

231 
j
;

233 i‡(
ncﬁ
==0) {

234 
löe
<
∂ígth
) {

235 (
c
 = 
	`çgëc
(0)Ë&& c!='\n' && c!=
FF
)

236 
	`put˝
(
c
);

237 
	`put˝
('\n');

238 
löe
++;

239 i‡(
c
==
FF
)

244 
cﬁp
[0] = cﬁp[
ncﬁ
];

245 i‡(
mÊg
==0Ë
i
=1; i<=
ncﬁ
; i++) {

246 
cﬁp
[
i
] = colp[i-1];

247 
j
 = 
m¨gö
; j<
Àngth
; j++)

248 (
c
=
	`çgëc
(
i
))!='\n')

249 i‡(
c
==0)

252 
löe
<
∂ígth
) {

253 
œ°cﬁ
 = 
cﬁw
;

254 
i
=0; i<
ncﬁ
; i++) {

255 (
c
=
	`pgëc
(
i
)) && c!='\n')

256 i‡(
cﬁ
<
œ°cﬁ
 || 
èbc
!=0)

257 
	`put
(
c
);

258 i‡(
c
==0 && 
¡Êg
)

260 i‡(
èbc
)

261 
	`put
(
èbc
);

262 
cﬁ
<
œ°cﬁ
)

263 
	`put
(' ');

264 
œ°cﬁ
 =+ 
cﬁw
;

266 (
c
 = 
	`pgëc
(
ncﬁ
)) && c!='\n')

267 
	`put
(
c
);

268 
	`put
('\n');

270 
	}
}

272 
	$√xbuf
()

274 
n
;

275 *
rbuÂ
;

277 
rbuÂ
 = 
buÂ
;

278 
n
 = &
buf„r
[
BUFS
] - 
rbuÂ
;

279 i‡(
n
>512)

280 
n
 = 512;

281 i‡((
n
 = 
	`ªad
(
fûe
, 
rbuÂ
,Ç)) <= 0)

282 *
rbuÂ
 = 0376;

284 
rbuÂ
 =+ 
n
;

285 i‡(
rbuÂ
 >&
buf„r
[
BUFS
])

286 
rbuÂ
 = 
buf„r
;

287 *
rbuÂ
 = 0375;

289 
buÂ
 = 
rbuÂ
;

290 
	}
}

292 
	$çgëc
(
ai
)

294 **
p
;

295 
c
, 
i
;

297 
i
 = 
ai
;

298 i‡(
mÊg
) {

299 i‡((
c
 = 
	`gëc
(&
buf„r
[2*259*
i
])) < 0) {

300 i‡(
is˛o£d
[
i
]==0) {

301 
is˛o£d
[
i
] = 1;

302 i‡(--
nofûe
 <= 0)

307 i‡(
c
==
FF
 && 
ncﬁ
>0)

308 
c
 = '\n';

309 (
c
);

311 
lo›
:

312 
c
 = **(
p
 = &
cﬁp
[
i
]) & 0377;

313 i‡(
c
 == 0375) {

314 
	`√xbuf
();

315 
c
 = **
p
 & 0377;

317 i‡(
c
 == 0376)

319 (*
p
)++;

320 i‡(*
p
 >&
buf„r
[
BUFS
])

321 *
p
 = 
buf„r
;

322 i‡(
c
==0)

323 
lo›
;

324 (
c
);

325 
	}
}

327 
	$pgëc
(
i
)

329 
c
;

331 i‡(
≥ekc
) {

332 
c
 = 
≥ekc
;

333 
≥ekc
 = 0;

335 
c
 = 
	`çgëc
(
i
);

336 i‡(
èbc
)

337 (
c
);

338 
c
) {

341 
icﬁ
++;

342 i‡((
icﬁ
&07) != 0)

343 
≥ekc
 = '\t';

347 
icﬁ
 = 0;

352 
icﬁ
--;

355 i‡(
c
 >= ' ')

356 
icﬁ
++;

357 (
c
);

358 
	}
}

360 
	$puts
(
as
)

361 *
as
;

363 
c
;

364 *
s
;

366 i‡((
s
=
as
)==0)

368 
c
 = *
s
++)

369 
	`put
(
c
);

370 
	}
}

372 
	$putd
(
™
)

374 
a
, 
n
;

376 
n
 = 
™
;

377 i‡(
a
 = 
n
/10)

378 
	`putd
(
a
);

379 
	`put
(
n
%10 + '0');

380 
	}
}

382 
	$put
(
ac
)

384 
ns
, 
c
;

386 
c
 = 
ac
;

387 i‡(
èbc
) {

388 
	`put˝
(
c
);

389 i‡(
c
=='\n')

390 
löe
++;

393 
c
) {

396 
n•a˚
++;

397 
cﬁ
++;

401 
cﬁ
 = 0;

402 
n•a˚
 = 0;

403 
löe
++;

408 i‡(--
cﬁ
<0)

409 
cﬁ
 = 0;

410 i‡(--
n•a˚
<0)

411 
n•a˚
 = 0;

414 
n•a˚
) {

415 i‡(
n•a˚
>2 && 
cﬁ
 > (
ns
=((col-nspace)|07))) {

416 
n•a˚
 = 
cﬁ
-
ns
-1;

417 
	`put˝
('\t');

419 
n•a˚
--;

420 
	`put˝
(' ');

423 i‡(
c
 >= ' ')

424 
cﬁ
++;

425 
	`put˝
(
c
);

426 
	}
}

428 
	$gën
(
≠
)

429 *
≠
;

431 
n
, 
c
;

432 *
p
;

434 
p
 = 
≠
;

435 
n
 = 0;

436 (
c
 = *
p
++) >= '0' && c <= '9')

437 
n
 =Ç*10 + 
c
 - '0';

438 (
n
);

439 
	}
}

441 
	$put˝
(
c
)

443 i‡(
∑ge
 >
Âage
)

444 
	`putch¨
(
c
);

445 
	}
}

	@usr/source/s2/prof.c

5 
	s∆
 {

6 
	m«me
[8];

7 
	mvÆue
;

8 
	mtime
;

9 
	mnˇŒ
[2];

12 
∆
 
	g∆
[600];

14 
	s‚l
 {

15 
	m‚ame
[8];

16 
	mÊag
;

17 
	mfvÆue
;

20 
	s˙t
 {

21 
	mcvÆue
;

22 
	m˙ˇŒ
[2];

23 } 
	gcbuf
[200];

25 
	söode
 {

26 
	midev
;

27 
	möum
;

28 
	mÊags
;

29 
	m∆ök
;

30 
	muid
;

31 
	mgid
;

32 
	msize0
;

33 
	msize
;

34 
	m±r
[8];

35 
	m˘ime
[2];

36 
	mmtime
[2];

37 
	mfûl
;

40 
	gibuf
[259];

41 
	gobuf
[259];

42 
	gbuf
[17];

43 
	gi
;

44 
	gj
;

45 
	ghighpc
;

46 
	glowpc
;

47 
	gc˙t
;

48 
	gp˛
;

49 
	gpch
;

50 
	gbufs
;

51 
	g¬ame
;

52 
	gtime
;

53 
	gtŸime
;

54 
	gmaxtime
;

55 
	gsˇÀ
;

56 
	gœ°x
;

57 
	gœ°y
;

58 
∆
 *
	g≈
;

59 
∆
 *
	g≈e
;

60 
	gaÊg
;

61 
	gvÊg
;

62 
	glÊg
;

63 
	gsymoff
;

64 
	gsymsiz
;

65 
	gvf
;

66 
	gëext
;

67 
	gncou¡
;

69 
	$maö
(
¨gc
, 
¨gv
)

70 **
¨gv
;

72 *
«mfû
;

73 
	`timcmp
(), 
	`vÆcmp
();

74 
nf
, 
pf
, 
ovîœp
;

75 
‚c
, 
	`…od
(), 
œ°sx
;

76 
˙t
 *
˝
;

78 
obuf
[0] = 1;

79 
¨gv
++;

80 
«mfû
 = "a.out";

81 
¨gc
>1) {

82 i‡(**
¨gv
 == '-') {

83 i‡(*++*
¨gv
 == 'l')

84 
lÊg
++;

85 i‡(**
¨gv
 == 'a')

86 
aÊg
 = 040;

87 if(**
¨gv
 == 'v')

88 
vÊg
++;

90 
«mfû
 = *
¨gv
;

91 
¨gc
--;

92 
¨gv
++;

94 i‡((
nf
 = 
	`›í
(
«mfû
, 0)) < 0) {

95 
	`¥ötf
("C™'àföd %s\n", 
«mfû
);

96 
	`d⁄e
();

98 
	`ªad
(
nf
, 
buf
, 020);

99 i‡(
buf
[0] != 0407 && buf[0] != 0410) {

100 
	`¥ötf
("Bad f‹m©: %s\n", 
«mfû
);

101 
	`d⁄e
();

103 
symsiz
 = 
buf
[4];

104 
symoff
 = 
buf
[1] + buf[2];

105 i‡(
buf
[7] != 1)

106 
symoff
 =<< 1;

107 
	`£ek
(
nf
, 
symoff
+020, 0);

108 i‡((
pf
 = 
	`›í
("mon.out", 0)) < 0) {

109 
	`¥ötf
("No mon.out\n");

110 
	`d⁄e
();

112 
	`f°©
(
pf
, 
buf
);

113 
	`ªad
(
pf
, &
lowpc
, 2);

114 
	`ªad
(
pf
, &
highpc
, 2);

115 
	`ªad
(
pf
, &
ncou¡
, 2);

116 
bufs
 = 
buf
->
size
/2 - 3*(
ncou¡
+1);

117 
	`ªad
(
pf
, 
cbuf
, 
ncou¡
*6);

118 
lowpc
 = (lowpc>>1) & 077777;

119 
highpc
 = (highpc>>1) & 077777;

120 
≈e
 = 
∆
;

121 
	`öôf
(
nf
);

122 
¬ame
 = 0; 
symsiz
 > 0; symsiz =- 12) {

123 
i
=0; i<12; i++)

124 
buf
->
‚ame
[
i
] = 
	`gëc
(
ibuf
);

125 i‡((
buf
->
Êag
 | 
aÊg
) != 042)

127 
buf
->
fvÆue
 = (buf->fvalue>>1) & 077777;

128 
≈e
->
vÆue
 = 
buf
->
fvÆue
;

129 
i
=0; i<8; i++)

130 
≈e
->
«me
[
i
] = 
buf
->
‚ame
[i];

131 
≈e
++;

132 
¬ame
++;

134 i‡(
¬ame
 == 0) {

135 
	`¥ötf
("Nÿsymbﬁs: %s\n", 
«mfû
);

136 
	`d⁄e
();

138 
≈e
->
vÆue
 = 077777;

139 
≈e
++;

140 
˝
 = 
cbuf
; c∞< &cbuf[
ncou¡
]; cp++)

141 
≈
 = 
∆
;Ç∞< 
≈e
;Çp++)

142 i‡(
˝
->
cvÆue
-6 =
≈
->
vÆue
<<1) {

143 
≈
->
nˇŒ
[0] = 
˝
->
˙ˇŒ
[0];

144 
≈
->
nˇŒ
[1] = 
˝
->
˙ˇŒ
[1];

147 
	`qs‹t
(
∆
, 
¬ame
, 18, &
vÆcmp
);

148 
sˇÀ
 = (
highpc
-
lowpc
)/(
bufs
+0.0);

149 
	`öôf
(
pf
);

150 
i
 = -1;(
j
 = 
	`gëc
(
ibuf
)) != -1; i++) {

151 
c˙t
.
‚ame
[0] = 
j
;

152 
c˙t
.
‚ame
[1] = 
	`gëc
(
ibuf
);

153 i‡(
c˙t
 == 0)

155 
time
 = 
c˙t
;

156 i‡(
c˙t
<0)

157 
time
 =+ 65536.;

158 
tŸime
 =+ 
time
;

159 if(
time
 > 
maxtime
)

160 
maxtime
 = 
time
;

161 
p˛
 = 
lowpc
 + 
sˇÀ
*
i
;

162 
pch
 = 
lowpc
 + 
sˇÀ
*(
i
+1);

163 
j
=0; j<
¬ame
; j++) {

164 i‡(
pch
 < 
∆
[
j
].
vÆue
)

166 i‡(
p˛
 >
∆
[
j
+1].
vÆue
)

168 
ovîœp
=(
	`mö
(
pch
,
∆
[
j
+1].
vÆue
)-
	`max
(
p˛
,nl[j].value));

169 
∆
[
j
].
time
 =+ 
ovîœp
*time/
sˇÀ
;

172 i‡(
tŸime
==0.0) {

173 
	`¥ötf
("NoÅimeáccumulated\n");

174 
	`d⁄e
();

176 if(!
vÊg
)

177 
¥öt
;

178 
vf
 = 
	`›í
("/dev/vt0", 1);

179 if(
vf
 < 0) {

180 
	`¥ötf
("Cannot open vt\n");

181 
	`d⁄e
();

183 
obuf
[0] = 
vf
;

184 
	`vtch
(1);

185 
	`vtch
(1);

186 
	`vtch
(3);

187 
	`poöt
(-2048., -2048.);

188 
	`poöt
(-2048., 2048.);

189 
	`vtch
(3);

190 
	`poöt
(0., -2048.);

191 
	`poöt
(0., 2048.);

192 
j
=0; j<9; j++) {

193 
	`vtch
(3);

194 
	`poöt
(-2048., 2048. - 
j
*512.);

195 
	`poöt
(0., 2048. - 
j
*512.);

197 
œ°x
 = 0.;

198 
œ°y
 = 2048.;

199 
sˇÀ
 = 4096./(
i
+2);

200 
	`£ek
(
pf
, 6*(
ncou¡
+1), 0);

201 
	`öôf
(
pf
);

202 
œ°sx
 = 0.0;

203 (
j
 = 
	`gëc
(
ibuf
)) != -1) {

204 
c˙t
.
‚ame
[0] = 
j
;

205 
c˙t
.
‚ame
[1] = 
	`gëc
(
ibuf
);

206 
time
 = 
c˙t
;

207 if(
c˙t
 < 0)

208 
time
 =+ 65536.;

209 
	`vtch
(3);

210 
	`poöt
(
œ°sx
, 
œ°y
);

211 
œ°sx
 =- 2000.*
time
/
tŸime
;

212 
	`poöt
(
œ°sx
, 
œ°y
-
sˇÀ
);

213 i‡(
c˙t
!=0 || 
œ°x
!=0.0) {

214 
	`vtch
(3);

215 
	`poöt
(
œ°x
, 
œ°y
);

216 
œ°x
 = -
time
*2000./
maxtime
;

217 
	`poöt
(
œ°x
, 
œ°y
);

219 
œ°y
 =- 
sˇÀ
;

221 
sˇÀ
 = 4096./(
highpc
-
lowpc
);

222 
œ°x
 = 50.;

223 
≈
 = 
∆
;Çp<
≈e
;Çp++) {

224 if(
≈
->
vÆue
 < 
lowpc
)

226 if(
≈
->
vÆue
 >
highpc
)

228 
time
 = 
≈
->time/
tŸime
;

229 
œ°y
 = 2048. - (
≈
->
vÆue
 - 
lowpc
)*
sˇÀ
;

230 
	`vtch
(3);

231 
	`poöt
(0., 
œ°y
);

232 
	`poöt
(50., 
œ°y
);

233 
	`vtch
(3);

234 
	`poöt
(
œ°x
-50., 
œ°y
);

235 
	`poöt
(
œ°x
, 
œ°y
);

236 
	`vtch
(9);

237 
	`poöt
(
œ°x
+10., 
œ°y
+60.);

238 
	`vtch
(1);

239 
	`vtch
(3);

240 
j
=0; j<8; j++)

241 if(
≈
->
«me
[
j
] != '_')

242 
	`vtch
(
≈
->
«me
[
j
]);

243 
	`vtch
(0);

244 
œ°x
 =+ 500.;

245 if(
œ°x
 > 2000.)

246 
œ°x
 = 50.;

248 
	`d⁄e
();

250 
¥öt
:

251 
	`¥ötf
("Çame %%time #call ms/call\n");

252 i‡(!
lÊg
)

253 
	`qs‹t
(
∆
, 
¬ame
, 18, &
timcmp
);

254 
≈
 = 
∆
;Çp<
≈e
-1;Çp++) {

255 
time
 = 
≈
->time/
tŸime
;

256 
	`¥ötf
("%8.8s%6.1f", 
≈
->
«me
, 100*
time
);

257 
‚c
 = 
	`…od
(
≈
->
nˇŒ
);

258 i‡(
‚c
 != 0.0) {

259 
	`¥ötf
("%6s", 
	`locv
(
≈
->
nˇŒ
[0],Çp->ncall[1]));

260 
	`¥ötf
(" %7.2f\n", 
≈
->
time
/(
‚c
*.06));

262 
	`¥ötf
("\n");

264 
	`d⁄e
();

265 
	}
}

267 
	$mö
(
a
, 
b
)

269 i‡(
a
<
b
)

270 (
a
);

271 (
b
);

272 
	}
}

274 
	$max
(
a
, 
b
)

276 i‡(
a
>
b
)

277 (
a
);

278 (
b
);

279 
	}
}

281 
	$vÆcmp
(
p1
, 
p2
)

282 
∆
 *
p1
, *
p2
;

284 (
p1
->
vÆue
 - 
p2
->value);

285 
	}
}

287 
	$timcmp
(
p1
, 
p2
)

288 
∆
 *
p1
, *
p2
;

290 
d
;

292 
d
 = 
p2
->
time
 - 
p1
->time;

293 i‡(
d
 > 0.0)

295 i‡(
d
 < 0.0)

298 
	}
}

300 
	$vtch
(
c
)

301 
c
;

304 
	`putch¨
(
c
&0377);

305 
	}
}

307 
	$poöt
(
x
, 
y
)

308 
x
, 
y
;

311 
	`poöt1
(
x
);

312 
	`poöt1
(
y
);

313 
	}
}

315 
	$putch¨
(
c
)

318 
	`putc
(
c
, 
obuf
);

319 
	}
}

321 
	$poöt1
(
xy
)

322 
xy
;

324 
ixy
;

325 °ru˘ { 
b1
; 
b2
;};

327 if(
xy
 > 2047.)

328 
xy
 = 2047.;

329 if(
xy
 < -2048.)

330 
xy
 = -2048.;

331 
ixy
 = 
xy
;

332 
	`vtch
(
ixy
.
b1
);

333 
	`vtch
(
ixy
.
b2
);

334 
	}
}

336 
	$d⁄e
()

339 
	`fÊush
(
obuf
);

340 
	`exô
();

341 
	}
}

343 
	$öôf
(
f
)

346 
ibuf
[0] = 
f
;

347 
ibuf
[1] = 0;

348 
ibuf
[2] = 0;

349 
ibuf
[3] = 0;

350 
	}
}

	@usr/source/s2/ps.c

2 
	~"/u§/sys/∑øm.h
"

3 
	~"/u§/sys/¥oc.h
"

4 
	~"/u§/sys/ây.h
"

5 
	~"/u§/sys/u£r.h
"

6 
	#NDC11
 10

	)

7 
	#NKL11
 4

	)

8 
	#NDH11
 16

	)

11 
	m«me
[8];

12 
	mty≥
;

13 *
	mvÆue
;

14 } 
	g∆
[5];

16 
¥oc
 
	g¥oc
[1];

17 
u£r
 
	gu
;

18 
	glÊg
;

19 
	gkÊg
;

20 
	gxÊg
;

21 
	gtÊg
;

22 
	gaÊg
;

23 
	gmem
;

24 
	gsw≠
;

26 
	g°buf
[257];

27 *
	gc‹ef
;

29 
	$maö
(
¨gc
, 
¨gv
)

30 **
¨gv
;

32 
¥oc
 *
p
;

33 
n
, 
b
;

34 
i
, 
c
, 
mây
;

35 *
≠
;

36 
hmem
;

37 
uid
, 
puid
;

39 i‡(
¨gc
>1) {

40 
≠
 = 
¨gv
[1];

41 *
≠
) *ap++) {

43 
aÊg
++;

47 
tÊg
++;

51 
xÊg
++;

55 
lÊg
++;

59 
kÊg
++;

64 
	`£tup
(&
∆
[0], "_proc");

65 
	`£tup
(&
∆
[1], "_dc11");

66 
	`£tup
(&
∆
[2], "_kl11");

67 
	`£tup
(&
∆
[3], "_dh11");

68 
	`∆i°
("/unix", 
∆
);

69 i‡(
∆
[0].
ty≥
==0) {

70 
	`¥ötf
("NoÇamelist\n");

73 
c‹ef
 = "/dev/mem";

74 if(
kÊg
)

75 
c‹ef
 = "/usr/sys/core";

76 i‡((
hmem
 = 
	`›í
(
c‹ef
, 0)) < 0) {

77 
	`¥ötf
("No mem\n");

80 
mem
 = 
	`›í
(
c‹ef
, 0);

81 
sw≠
 = 
	`›í
("/dev/swap", 0);

82 i‡(
sw≠
 < 0)

83 
	`¥ötf
("No swap\n");

84 
n
 = &
¥oc
[1];

85 
b
 = &
¥oc
;

86 
n
 =- 
b
;

87 
	`£ek
(
hmem
, 
∆
[0].
vÆue
, 0);

88 
mây
 = 
	`âyn
(0);

89 
uid
 = 
	`gëuid
() & 0377;

90 
i
=0; i<
NPROC
; i++) {

91 
	`ªad
(
hmem
, 
¥oc
, 
n
);

92 i‡(
¥oc
[0].
p_°©
==0)

94 i‡((
c
=
	`âyc
(
¥oc
[0].
p_âyp
))=='?' && 
xÊg
==0)

96 
puid
 = 
¥oc
[0].
p_uid
 & 0377;

97 i‡(
uid
 !
puid
 && 
aÊg
==0)

99 i‡(
lÊg
 || 
c
!=
mây
)

100 
	`¥ötf
("%c:", 
c
);

102 
	`¥ötf
(" ");

103 i‡(
lÊg
) {

104 
	`¥ötf
("%3o%4d%5d%5d",

105 
¥oc
[0].
p_Êag
<<3|¥oc[0].
p_°©
, 
puid
,

106 
¥oc
[0].
p_¥i
,

107 
¥oc
[0].
p_time
);

109 
	`¥ötf
("%6d", 
¥oc
[0].
p_pid
);

110 i‡(
lÊg
) {

111 
	`¥ötf
("%4d", (
¥oc
[0].
p_size
+7)>>3);

112 i‡(
¥oc
[0].
p_wch™
)

113 
	`¥ötf
("%8o", 
¥oc
[0].
p_wch™
);

115 
	`¥ötf
(" ");

117 i‡(
¥oc
[0].
p_°©
==5)

118 
	`¥ötf
(" <defunct>");

120 
	`¥com
();

121 
	`¥ötf
("\n");

123 
	}
}

125 
	$âyc
(
p
)

126 
ây
 *
p
;

128 
n
;

129 °ru˘ { 
ây
 
xdc11
[]; };

131 
n
 = 
p
 - 
∆
[1].
vÆue
->
xdc11
;

132 i‡(
n
>=0 &&Ç<
NDC11
) {

133 i‡(
n
<8)

134 (
n
+'0');

135 (
n
+'a'-8);

137 
n
 = 
p
 - 
∆
[2].
vÆue
->
xdc11
;

138 if(
n
>=0 &&Ç<
NKL11
)

139 ('8'+
n
);

140 
n
 = 
p
 - 
∆
[3].
vÆue
->
xdc11
;

141 if(
n
>=0 &&Ç<
NDH11
)

142 ('f'+
n
);

144 
	}
}

146 
	$£tup
(
p
, 
s
)

147 *
p
, *
s
;

149 *
p
++ = *
s
++);

150 
	}
}

152 
	$¥com
()

154 
baddr
, 
œddr
, 
mf
;

155 *
ù
;

156 *
˝
, *
˝1
;

157 
c
;

159 
baddr
 = 0;

160 
œddr
 = 0;

161 i‡(
¥oc
[0].
p_Êag
&
SLOAD
) {

162 
œddr
 = 
¥oc
[0].
p_addr
;

163 
mf
 = 
mem
;

165 
baddr
 = 
¥oc
[0].
p_addr
;

166 
mf
 = 
sw≠
;

168 
œddr
 =+ 
¥oc
[0].
p_size
 - 8;

169 
baddr
 =+ 
œddr
>>3;

170 
œddr
 = (laddr&07)<<6;

171 
	`£ek
(
mf
, 
baddr
, 3);

172 
	`£ek
(
mf
, 
œddr
, 1);

173 i‡(
	`ªad
(
mf
, 
°buf
, 512) != 512)

175 
ù
 = &
°buf
[256]; ip > &stbuf[0];) {

176 i‡(*--
ù
 == -1) {

177 
˝
 = 
ù
+1;

178 i‡(*
˝
==0)

179 
˝
++;

180 
˝1
 = 
˝
; cp1 < &
°buf
[256]; cp1++) {

181 
c
 = *
˝1
;

182 i‡(
c
==0)

183 *
˝1
 = ' ';

184 i‡(
c
 < ' ' || c > 0176)

185 *
˝1
 = '?';

187 
	`¥ötf
(" %.32†", 
˝
);

192 
	}
}

	@usr/source/s2/pwd.c

1 
	gdŸ
[] ".";

2 
	gdŸdŸ
[] "..";

3 
	groŸ
[] "/";

4 
	g«me
[512];

5 
	gfûe
, 
	goff
 -1;

6 
	s°©b
 {
	mdevn
, 
	möum
, 
	mi
[18];}
	gx
;

7 
	síåy
 { 
	mjnum
; 
	m«me
[16];}
	gy
;

9 
	$maö
() {

10 
n
;

12 
lo›0
:

13 
	`°©
(
dŸ
, &
x
);

14 if((
fûe
 = 
	`›í
(
dŸdŸ
,0)Ë< 0Ë
	`¥«me
();

15 
lo›1
:

16 if((
n
 = 
	`ªad
(
fûe
,&
y
,16)Ë< 16Ë
	`¥«me
();

17 if(
y
.
jnum
 !
x
.
öum
)
lo›1
;

18 
	`˛o£
(
fûe
);

19 if(
y
.
jnum
 =1Ë
	`ckroŸ
();

20 
	`ˇt
();

21 
	`chdú
(
dŸdŸ
);

22 
lo›0
;

23 
	}
}

24 
	$ckroŸ
() {

25 
i
, 
n
;

27 if((
n
 = 
	`°©
(
y
.
«me
,&
x
)Ë< 0Ë
	`¥«me
();

28 
i
 = 
x
.
devn
;

29 if((
n
 = 
	`chdú
(
roŸ
)Ë< 0Ë
	`¥«me
();

30 if((
fûe
 = 
	`›í
(
roŸ
,0)Ë< 0Ë
	`¥«me
();

31 
lo›
:

32 if((
n
 = 
	`ªad
(
fûe
,&
y
,16)Ë< 16Ë
	`¥«me
();

33 if(
y
.
jnum
 =0Ë
lo›
;

34 if((
n
 = 
	`°©
(
y
.
«me
,&
x
)Ë< 0Ë
	`¥«me
();

35 if(
x
.
devn
 !
i
Ë
lo›
;

36 
x
.
i
[0] =& 060000;

37 if(
x
.
i
[0] !040000Ë
lo›
;

38 
	`ˇt
();

39 
	`¥«me
();

40 
	}
}

41 
	$¥«me
() {

42 
«me
[
off
] = '\n';

43 
	`wrôe
(1,
«me
,
off
+1);

44 
	`exô
();

45 
	}
}

46 
	$ˇt
() {

47 
i
, 
j
;

49 
i
 = -1;

50 
y
.
«me
[++
i
] != 0);

51 if((
off
+
i
+2Ë> 511Ë
	`¥«me
();

52 
j
=
off
+1; j>=0; --jË
«me
[j+
i
+1] =Çame[j];

53 
off
=
i
+off+1;

54 
«me
[
i
] = 
roŸ
[0];

55 --
i
; i>=0; --iË
«me
[i] = 
y
.name[i];

56 
	}
}

	@usr/source/s2/restor.c

6 *
	gd¨gv
[]

12 *
	gifûe
;

13 *
	gofûe
;

14 
	söode


16 
	mi_mode
;

17 
	mi_∆ök
;

18 
	mi_uid
;

19 
	mi_gid
;

20 
	mi_size0
;

21 *
	mi_size1
;

22 
	mi_addr
[8];

23 
	mi_©ime
[2];

24 
	mi_mtime
[2];

28 
	#IALLOC
 0100000

	)

29 
	#IFMT
 060000

	)

30 
	#IFDIR
 040000

	)

31 
	#IFCHR
 020000

	)

32 
	#IFBLK
 060000

	)

33 
	#ILARG
 010000

	)

37 *
	ms_isize
;

38 *
	ms_fsize
;

39 
	ms_n‰ì
;

40 
	ms_‰ì
[100];

41 
	ms_nöode
;

42 
	ms_öode
[100];

43 
	ms_Êock
;

44 
	ms_ûock
;

45 
	ms_fmod
;

46 
	mtime
[2];

47 
	m∑d
[50];

48 } 
	gsblock
;

50 
	gisize
;

51 *
	gèli°
;

52 
	gfi
;

53 
	gbuf
[256];

54 
	gdbuf
[256];

55 
	gcbuf
[256];

56 *
	gd©e
[2];

57 *
	gdd©e
[2];

58 
	gfo
;

59 
	gphî
;

60 *
	gtsize
 15000;

61 
	giÊg
;

62 
	gwÊg
;

63 
	gfûe
[10];

64 
	gûi°
[100];

66 
	$maö
(
¨gc
, 
¨gv
)

67 **
¨gv
;

69 *
key
;

70 *
èp
, *
p
;

71 
öode
 *
ù
;

72 
i
, 
com
, 
sz
, *
q
, 
l
;

74 
ifûe
 = "/dev/mt0";

75 if(
¨gc
 == 1) {

76 
¨gv
 = 
d¨gv
;

77 
¨gc
 = 1; 
d¨gv
[argc];árgc++);

80 
¨gc
--;

81 
¨gv
++;

82 
key
 = *
¨gv
;

83 *
key
)

84 *
key
++) {

86 
	`¥ötf
("bad characteer in key\n");

87 
	`exô
();

92 
com
 = 
key
[-1];

96 
iÊg
++;

103 
¨gv
++;

104 
¨gc
--;

105 
ifûe
 = *
¨gv
;

109 
wÊg
++;

113 
	`Ÿ≠e
();

114 
	`§ód
(
buf
, 0);

115 
èp
 = 
buf
;

116 
isize
 = *
èp
++;

117 *
èp
++;

118 
d©e
[0] = *
èp
++;

119 
d©e
[1] = *
èp
++;

120 
dd©e
[0] = *
èp
++;

121 
dd©e
[1] = *
èp
++;

122 
tsize
 = *
èp
++;

123 
i
 = 
	`size
(0, 
isize
*32);

124 
èli°
 = 
	`sbrk
(
i
*512);

125 
èp
 = 
èli°
;

126 
i
--) {

127 
	`åód
(
èp
, 0);

128 
èp
 =+ 256;

130 
com
) {

133 
l
 = 0;

134 
com
 = 0;

135 
	`pd©e
(
dd©e
);

136 
	`pd©e
(
d©e
);

137 
èp
 = 
èli°
;

138 
i
=0; i<
isize
*16; i++) {

139 
sz
 = *
èp
++;

140 if(
sz
 == 0 || sz == -1) {

141 if(
com
 == 0)

143 if(
i
 =
com
) {

144 
	`¥ötf
("%l", 
i
);

145 
l
 =+ 5;

147 
	`¥ötf
("%l-%l", 
com
, 
i
);

148 
l
 =+ 10;

150 if(
l
 > 60) {

151 
	`¥ötf
("\n");

152 
l
 = 0;

154 
	`¥ötf
(",");

155 
com
 = 0;

157 if(
com
 == 0)

158 
com
 = 
i
+1;

160 if(
com
)

161 
	`¥ötf
("%l-\n", 
com
);

162 
	`exô
();

165 if(
¨gc
 <= 1) {

166 
	`¥ötf
("no filesystemÇame\n");

167 
	`exô
();

169 
ofûe
 = 
¨gv
[1];

170 
fo
 = 
	`›í
(
ofûe
, 2);

171 if(
fo
 < 0) {

172 
	`¥ötf
("ˇ¿nŸ o≥¿%s\n", 
ofûe
);

173 
	`exô
();

175 
	`¥ötf
("œ° ch™˚ bef‹ês¸ibblög o¿%s\n", 
ofûe
);

176 
	`gëch¨
();

177 
	`dªad
(1, &
sblock
);

178 
èp
 = 
èli°
;

179 
i
=0; i<
sblock
.
s_isize
; i++) {

180 if(
i
 >
isize
)

182 
	`dªad
(
i
+2, 
buf
);

183 
ù
 = &
buf
[0]; ip < &buf[256]; ip++) {

184 
sz
 = *
èp
++;

185 if(
sz
 == 0)

187 
	`dóloc
(
ù
);

188 if(
sz
 == -1) {

189 
p
 = 
ù
;Ö < &ù->
i_mtime
[2]; )

190 *
p
++ = 0;

193 
	`§ód
(
dbuf
, 0);

194 
q
 = 
dbuf
;

195 
p
 = 
ù
;Ö < &ù->
i_mtime
[2]; )

196 *
p
++ = *
q
++;

197 
	`ª°‹
(
ù
, 
sz
-1);

199 
	`dwrôe
(
i
+2, 
buf
);

201 
	`dwrôe
(1, &
sblock
);

202 
com
 = 0;

203 ; 
i
 < 
isize
; i++)

204 
l
 = 0;Ü < 16;Ü++) {

205 
sz
 = *
èp
++;

206 if(
sz
 != 0 && sz != -1)

207 
com
++;

209 if(
com
)

210 
	`¥ötf
("%»fûe†nŸÑe°‹ed - smÆ»ûi°\n", 
com
);

211 
	`exô
();

214 
i
 = 0;

215 
èp
 = 
ûi°
;

216 
¨gc
 > 1) {

217 
i
++;

218 
sz
 = 
	`numbî
(
¨gv
[1]);

219 
¨gv
++;

220 
¨gc
--;

221 if(
sz
 <0 || sz >=
isize
*16) {

222 
	`¥ötf
("%»nŸ i¿ønge\n", 
sz
);

225 if(
èli°
[
sz
-1] == 0) {

226 
	`¥ötf
("%»nŸ dum≥d\n", 
sz
);

229 if(
èli°
[
sz
-1] == -1) {

230 
	`¥ötf
("%»d€†nŸÉxi°\n", 
sz
);

233 *
èp
++ = 
sz
;

235 if(
i
 !0 && 
ûi°
[0] == 0)

236 
	`exô
();

237 
èp
 = 
èli°
;

238 
i
=0; i<
isize
*16; i++) {

239 if(
ûi°
[0] != 0) {

240 
sz
=0; 
ûi°
[sz]; sz++)

241 if(
ûi°
[
sz
] =
i
+1)

242 
yes
;

243 
sz
 = *
èp
++;

244 
no
;

246 
yes
:

247 
sz
 = *
èp
++;

248 if(
sz
 == 0 || sz == -1)

250 
sz
--;

251 
	`åód
(
buf
, 0);

252 
ù
 = 
buf
;

253 
fo
 = 
	`dwaô
(
i
+1);

254 if(
fo
 < 0) {

255 
no
:

256 if(
sz
 == -1)

257 
sz
 = 0;

258 
sz
--)

259 
	`åód
(
dbuf
, 1);

262 
sz
--) {

263 
	`åód
(
dbuf
, 0);

264 
com
 = 512;

265 if(
ù
->
i_size0
 =0 && ip->
i_size1
 < 512)

266 
com
 = 
ù
->
i_size1
;

267 
	`wrôe
(
fo
, 
dbuf
, 
com
);

268 if(
com
 > 
ù
->
i_size1
)

269 
ù
->
i_size0
--;

270 
ù
->
i_size1
 =- 
com
;

272 
	`˛o£
(
fo
);

273 
	`chmod
(
fûe
, 
ù
->
i_mode
);

274 
	`chown
(
fûe
, 
ù
->
i_uid
);

276 
	`exô
();

279 
	}
}

281 
	$dóloc
(
p
)

282 
öode
 *
p
;

284 
öode
 *
ù
;

285 
i
, 
j
;

286 
xbuf
[256];

288 
ù
 = 
p
;

289 if(
ù
->
i_mode
 & (
IFCHR
&
IFBLK
))

291 
i
=0; i<8; i++)

292 if(
ù
->
i_addr
[
i
]) {

293 if(
ù
->
i_mode
&
ILARG
) {

294 
	`dªad
(
ù
->
i_addr
[
i
], 
xbuf
);

295 
j
=0; j<256; j++)

296 if(
xbuf
[
j
])

297 
	`‰ì
(
xbuf
[
j
]);

299 
	`‰ì
(
ù
->
i_addr
[
i
]);

301 
	}
}

303 
	$ª°‹
(
p
, 
sz
)

304 
öode
 *
p
;

306 
öode
 *
ù
;

307 
i
, 
j
;

309 
ù
 = 
p
;

310 if(
ù
->
i_mode
 & (
IFCHR
&
IFBLK
))

312 
i
=0; i<8; i++)

313 
ù
->
i_addr
[
i
] = 0;

314 if(
sz
 <= 8) {

315 
i
=0; i<
sz
; i++)

316 
ù
->
i_addr
[
i
] = 
	`rc›
();

317 
ù
->
i_mode
 =& ~
ILARG
;

320 
j
 = 0;

321 
sz
 >= 256) {

322 
i
=0; i<256; i++)

323 
dbuf
[
i
] = 
	`rc›
();

324 
ù
->
i_addr
[
j
] = 
	`Æloc
();

325 
	`dwrôe
(
ù
->
i_addr
[
j
++], 
dbuf
);

326 
sz
 =- 256;

328 if(
sz
) {

329 
i
=0; i<256; i++)

330 
dbuf
[
i
] = 0;

331 
i
=0; i<
sz
; i++)

332 
dbuf
[
i
] = 
	`rc›
();

333 
ù
->
i_addr
[
j
] = 
	`Æloc
();

334 
	`dwrôe
(
ù
->
i_addr
[
j
], 
dbuf
);

336 
ù
->
i_mode
 =| 
ILARG
;

337 
	}
}

339 
	$rc›
()

341 
b
;

343 
b
 = 
	`Æloc
();

344 
	`åód
(
cbuf
, 0);

345 
	`dwrôe
(
b
, 
cbuf
);

346 (
b
);

347 
	}
}

349 
	$pd©e
(
d
)

350 *
d
;

353 if(
d
[0] == 0 && d[1] == 0)

354 
	`¥ötf
("theÉpoch\n"); 

355 
	`¥ötf
(
	`˘ime
(
d
));

356 
	}
}

358 
	$dªad
(
bno
, 
b
)

361 
	`£ek
(
fo
, 
bno
, 3);

362 if(
	`ªad
(
fo
, 
b
, 512) != 512) {

363 
	`¥ötf
("ªadÉº‹ %l\n", 
bno
);

364 
	`exô
();

366 
	}
}

368 
	$dwrôe
(
bno
, 
b
)

371 
	`£ek
(
fo
, 
bno
, 3);

372 if(
	`wrôe
(
fo
, 
b
, 512) != 512) {

373 
	`¥ötf
("wrôêîr‹ %l\n", 
bno
);

374 
	`exô
();

376 
	}
}

378 
	$§ód
(
b
, 
Êag
)

379 *
b
;

381 
i
, 
s
, *
p
;

383 
	`åód
(
b
, 
Êag
);

384 if(
Êag
)

386 
i
 = 256;

387 
s
 = 0;

388 
p
 = 
b
;

389 
i
--)

390 
s
 =+ *
p
++;

391 if(
s
 != 031415) {

392 
	`¥ötf
("checksumÉrror\n");

393 
	`exô
();

395 
	}
}

397 
	$åód
(
b
, 
Êag
)

399 *
±a
, *
©a
;

401 if(
±a
++ > 
tsize
) {

402 
	`¥ötf
("changeÅapes\n");

403 
	`˛o£
(
fi
);

404 (
±a
 = 
	`gëch¨
()) != '\n')

405 if(
±a
 == 0)

406 
	`exô
();

407 
±a
 = 1;

408 
©a
 = 0;

409 
	`Ÿ≠e
();

411 if(
Êag
)

413 
©a
++;

414 if(
±a
 !
©a
) {

415 
	`£ek
(
fi
, 
±a
-
©a
, 4);

416 
©a
 = 
±a
;

418 if(
	`ªad
(
fi
, 
b
, 512) != 512) {

419 
	`¥ötf
("readÉrror\n");

420 
	`exô
();

422 
	}
}

424 
	$numbî
(
s
)

425 *
s
;

427 
n
, 
c
;

429 
n
 = 0;

430 
c
 = *
s
++) {

431 if(
c
<'0' || c>'9')

433 
n
 =Ç*10+
c
-'0';

435 (
n
);

436 
	}
}

438 
	$size
(
s0
, 
s1
)

440 
s
;

441 
ldivr
;

443 
s
 = 
	`ldiv
(
s0
&0377, 
s1
, 512);

444 if(
ldivr
)

445 
s
++;

446 (
s
);

447 
	}
}

449 
	$Ÿ≠e
()

451 
fi
 = 
	`›í
(
ifûe
, 0);

452 if(
fi
 < 0) {

453 
	`¥ötf
("ˇ¿nŸ o≥¿%s\n", 
ifûe
);

454 
	`exô
();

456 
	}
}

458 
	$dwaô
(
öo
)

460 
i
;

462 
	`dc⁄v
(
öo
, 
fûe
);

463 
lo›
:

464 if(
wÊg
) {

465 
	`¥ötf
("%†", 
fûe
);

466 
i
 = 
	`gëch¨
();

467 if(
i
 == 'x')

468 
	`exô
();

469 if(
i
 == '\n')

471 if(
i
 != 'y')

472 
Êush
;

473 
i
 = 
	`gëch¨
();

474 if(
i
 != '\n') {

475 
Êush
:

476 (
i
=
	`gëch¨
()) != '\n')

477 if(
i
 == '\0')

478 
	`exô
();

479 
lo›
;

482 
i
 = 
	`¸ót
(
fûe
, 0666);

483 (
i
);

484 
	}
}

486 
	$dc⁄v
(
n
, 
p
)

487 *
p
;

489 
i
;

491 if(
i
 = 
	`ldiv
(0, 
n
, 10))

492 
p
 = 
	`dc⁄v
(
i
,Ö);

493 *
p
++ = 
	`Ãem
(0, 
n
, 10) + '0';

494 *
p
 = '\0';

495 (
p
);

496 
	}
}

498 
	$Æloc
()

500 
b
, 
i
;

502 
i
 = --
sblock
.
s_n‰ì
;

503 if(
i
<0 || i>=100) {

504 
	`¥ötf
("bad freeblock\n");

505 
	`exô
();

507 
b
 = 
sblock
.
s_‰ì
[
i
];

508 if(
b
 == 0) {

509 
	`¥ötf
("out of freelist\n");

510 
	`exô
();

512 if(
sblock
.
s_n‰ì
 <= 0) {

513 
	`dªad
(
b
, 
cbuf
);

514 
sblock
.
s_n‰ì
 = 
cbuf
[0];

515 
i
=0; i<100; i++)

516 
sblock
.
s_‰ì
[
i
] = 
cbuf
[i+1];

518 (
b
);

519 
	}
}

521 
	$‰ì
(
ö
)

523 
i
;

525 if(
sblock
.
s_n‰ì
 >= 100) {

526 
cbuf
[0] = 
sblock
.
s_n‰ì
;

527 
i
=0; i<100; i++)

528 
cbuf
[
i
+1] = 
sblock
.
s_‰ì
[i];

529 
sblock
.
s_n‰ì
 = 0;

530 
	`dwrôe
(
ö
, 
cbuf
);

532 
sblock
.
s_‰ì
[sblock.
s_n‰ì
++] = 
ö
;

533 
	}
}

	@usr/source/s2/rm.c

1 
	$maö
(
¨gc
, 
¨gv
)

2 *
¨gv
[];

4 *
¨g
;

5 
fÊg
, 
rÊg
;

7 
fÊg
 = 0;

8 
rÊg
 = 0;

9 --
¨gc
 > 0) {

11 
¨g
 = *++
¨gv
;

12 if(
¨g
[0] == '-') {

13 if(
¨g
[1] == 'f') {

14 
fÊg
++;

17 if(
¨g
[1] == 'r') {

18 
rÊg
++;

23 
	`rm
(
¨g
, 
fÊg
, 
rÊg
);

25 
	}
}

27 
	s°buf
 {

28 
	mdev
;

29 
	möum
;

30 
	mmode
;

31 
	m∆ök
;

32 
	muid
;

33 
	mgid
;

34 
	msiz0
;

35 
	msiz1
;

36 
	maddr
[8];

37 
	mad©e
[2];

38 
	mmd©e
[2];

41 
	$rm
(
¨g
, 
fÊg
, 
rÊg
)

42 
¨g
[];

44 *
p
;

45 
buf
[20];

46 
i
, 
b
;

48 if(
	`°©
(
¨g
, 
buf
)) {

49 
	`¥ötf
("%s:Ç⁄Éxi°ít\n", 
¨g
);

52 if((
buf
->
mode
 & 060000) == 040000) {

53 if(
rÊg
) {

54 
i
 = 
	`f‹k
();

55 if(
i
 < 0) {

56 
	`¥ötf
("%s:Åryágaö\n", 
¨g
);

59 if(
i
) {

60 
	`waô
(Ë!
i
);

63 if(
	`chdú
(
¨g
)) {

64 
	`¥ötf
("%s: c™nŸ chdú\n", 
¨g
);

65 
	`exô
();

67 
p
 = 0;

68 
	`exe˛
("/etc/glob", "glob", "rm", "-r",

69 
fÊg
? "-f": "*", fÊg? "*": 
p
, 0);

70 
	`¥ötf
("%s:Çÿglob\n", 
¨g
);

71 
	`exô
();

73 
	`¥ötf
("%s: dúe˘‹y\n", 
¨g
);

77 if(!
fÊg
) {

79 if(
	`gëuid
(Ë=
buf
->
uid
)

80 
b
 = 0200; 

81 
b
 = 2;

82 if((
buf
->
mode
 & 
b
) == 0) {

83 
	`¥ötf
("%s: %ÿmodê", 
¨g
, 
buf
->
mode
);

84 
i
 = 
b
 = 
	`gëch¨
();

85 
i
 = 
b
;

86 
b
 != '\n' && b != '\0')

87 
b
 = 
	`gëch¨
();

88 if(
i
 != 'y')

92 if(
	`u∆ök
(
¨g
))

93 
	`¥ötf
("%s:ÇŸÑemoved\n", 
¨g
);

94 
	}
}

96 
	$putch¨
(
c
)

98 
	`wrôe
(1, &
c
, 1);

99 
	}
}

101 
	$gëch¨
()

103 
c
;

105 if(
	`ªad
(0, &
c
, 1) != 1) (0);

106 (
c
);

107 
	}
}

	@usr/source/s2/sa.c

1 
	#size
 1000

	)

4 
	glÊg
;

5 
	gcÊg
;

6 
	gjÊg
;

7 
	gnÊg
;

8 
	gaÊg
;

9 
	grÊg
;

10 
	gtÊg
;

11 
	gvÊg
;

12 
	guÊg
;

13 
	gthªs
 1;

14 
	gsÊg
;

15 
	gbÊg
;

16 
	gfout
;

17 
	sèb
 {

18 
	m«me
[8];

19 
	mcou¡
;

20 
	mªÆt
;

21 
	m˝ut
;

22 
	msy°
;

23 } 
	gèb
[
size
];

25 
	s·ab
 {

26 
	m‚ame
[14];

27 
	mfûl
;

28 
	muid
;

29 
	mfd©ë
[2];

30 
	m‰ó…
[2];

31 
	mf˝ut
[2];

32 
	mfsy°
[2];

34 
	gåól
;

35 
	gt˝u
;

36 
	gtsys
;

37 
	gjunkp
 -1;

38 *
	g¢ame
;

39 
	gncom
;

41 
	$maö
(
¨gc
, 
¨gv
)

42 **
¨gv
;

44 
i
, 
j
, 
k
;

45 
	`tcmp
(), 
	`ncmp
(), 
	`bcmp
();

46 
	`sum
();

47 
·
;

49 
	`öô
();

50 i‡(
¨gc
>1)

51 i‡(
¨gv
[1][0]=='-') {

52 
¨gv
++;

53 
¨gc
--;

54 
i
=1; 
¨gv
[0][i]; i++)

55 
¨gv
[0][
i
]) {

58 
bÊg
++;

62 
lÊg
++;

66 
cÊg
++;

70 
jÊg
++;

74 
nÊg
++;

78 
aÊg
++;

82 
rÊg
++;

86 
tÊg
++;

90 
sÊg
++;

91 
aÊg
++;

104 
thªs
 = 
¨gv
[0][
i
]-'0';

108 
vÊg
++;

112 
uÊg
++;

117 
fout
 = 
	`dup
(1);

118 i‡(
¨gc
<2)

119 
	`ac˘
("/usr/adm/sh_acct");

120 --
¨gc
)

121 
	`ac˘
(*++
¨gv
);

122 i‡(
uÊg
) {

123 
	`Êush
();

132 i‡(
vÊg
)

133 
	`°rù
();

134 if(!
aÊg
)

135 
i
=0; i<
size
; i++)

136 i‡(
èb
[
i
].
«me
[0]) {

137 
j
=0; j<8; j++)

138 if(
èb
[
i
].
«me
[
j
] == '?')

139 
yes
;

140 if(
èb
[
i
].
cou¡
 != 1)

142 
yes
:

143 if(
junkp
 == -1)

144 
junkp
 = 
	`íãr
("***other");

145 
èb
[
junkp
].
cou¡
 =+Åab[
i
].count;

146 
èb
[
junkp
].
ªÆt
 =+Åab[
i
].realt;

147 
èb
[
junkp
].
˝ut
 =+Åab[
i
].cput;

148 
èb
[
junkp
].
sy°
 =+Åab[
i
].syst;

149 
èb
[
i
].
«me
[0] = 0;

151 
i
=
k
=0; i<
size
; i++)

152 if(
èb
[
i
].
«me
[0]) {

153 
j
=0; j<8; j++)

154 
èb
[
k
].
«me
[
j
] =Åab[
i
].name[j];

155 
èb
[
k
].
cou¡
 =Åab[
i
].count;

156 
èb
[
k
].
ªÆt
 =Åab[
i
].realt;

157 
èb
[
k
].
˝ut
 =Åab[
i
].cput;

158 
èb
[
k
].
sy°
 =Åab[
i
].syst;

159 
k
++;

161 i‡(
sÊg
) {

162 
	`sig«l
(2, 1);

163 i‡((
i
 = 
	`¸ót
("/usr/adm/sht_acct", 0666))<0) {

164 
	`¥ötf
("Can't save\n");

165 
	`exô
();

167 
	`wrôe
(
i
, 
èb
, 
k
*(*tab));

168 
	`˛o£
(
i
);

169 i‡(
¢ame
) {

170 i‡((
i
 = 
	`¸ót
(
¢ame
, 0666))<0)

171 
	`¥ötf
("Can'tÅruncate\n");

172 
	`˛o£
(
i
);

174 
	`sig«l
(2, 0);

180 
	`qs‹t
(
èb
, 
k
, 22, 
nÊg
? &
ncmp
: (
bÊg
?&
bcmp
:&
tcmp
));

181 
	`¥ötf
("%8s", "");

182 
	`cﬁumn
(
ncom
, 
åól
, 
t˝u
, 
tsys
);

183 
i
=0; i<
k
; i++)

184 i‡(
èb
[
i
].
«me
[0]) {

185 
·
 = 
èb
[
i
].
cou¡
;

186 
	`¥ötf
("%-8.8s", 
èb
[
i
].
«me
);

187 
	`cﬁumn
(
·
, 
èb
[
i
].
ªÆt
,Åab[i].
˝ut
,Åab[i].
sy°
);

189 
	`Êush
();

190 
	}
}

192 
	$cﬁumn
(
n
, 
a
, 
b
, 
c
)

193 
n
, 
a
, 
b
, 
c
;

196 
	`¥ötf
("%6.0f", 
n
);

197 if(
cÊg
) {

198 if(
n
 =
ncom
)

199 
	`¥ötf
("%7s", ""); 

200 
	`¥ötf
("%6.2f%%", 100.*
n
/
ncom
);

202 
	`cﬁ
(
n
, 
a
, 
åól
);

203 if(
lÊg
) {

204 
	`cﬁ
(
n
, 
b
, 
t˝u
);

205 
	`cﬁ
(
n
, 
c
, 
tsys
);

207 
	`cﬁ
(
n
, 
b
+
c
, 
t˝u
+
tsys
);

208 if(
tÊg
)

209 
	`¥ötf
("%6.1f", 
a
/(
b
+
c
));

210 
	`putch¨
('\n');

211 
	}
}

213 
	$cﬁ
(
n
, 
a
, 
m
)

214 
n
, 
a
, 
m
;

217 if(
jÊg
)

218 
	`¥ötf
("%9.2f", 
a
/(
n
*60.)); 

219 
	`¥ötf
("%9.2f", 
a
/3600.);

220 if(
cÊg
) {

221 if(
a
 =
m
)

222 
	`¥ötf
("%7s", ""); 

223 
	`¥ötf
("%6.2f%%", 100.*
a
/
m
);

225 
	}
}

227 
	$ac˘
(
f
)

228 *
f
;

230 
ff
, 
i
, 
j
;

231 
x
;

232 
·ab
 
fbuf
;

233 *
˝
;

234 
c
;

235 
	`…od
();

237 i‡(
sÊg
 && 
¢ame
) {

238 
	`¥ötf
("Only 1 file with -s\n");

239 
	`exô
();

241 i‡(
sÊg
)

242 
¢ame
 = 
f
;

243 i‡((
ff
=
	`›í
(
f
, 0))<0) {

244 
	`¥ötf
("C™'à›í %s\n", 
f
);

247 
	`ªad
(
ff
, &
fbuf
, (fbuf))==(fbuf)) {

248 
˝
 = 
fbuf
.
«me
; cp < &fbuf.name[8]; cp++) {

249 
c
 = *
˝
 & 0377;

250 i‡(
c
 && (c < ' ' || c >= 0200))

251 *
˝
 = '?';

253 i‡(
uÊg
) {

254 
	`¥ötd©e
(
fbuf
.
fd©ë
);

255 
	`¥ötf
(" %3d %.8s\n", 
fbuf
.
uid
, fbuf.
«me
);

258 
ncom
 =+ 1.0;

259 
i
 = 
	`íãr
(&
fbuf
);

260 
èb
[
i
].
cou¡
++;

261 
x
 = 
	`…od
(
fbuf
.
‰ó…
);

262 
x
 =* 60.;

263 
èb
[
i
].
ªÆt
 =+ 
x
;

264 
åól
 =+ 
x
;

265 
x
 = 
	`…od
(
fbuf
.
f˝ut
);

266 
èb
[
i
].
˝ut
 =+ 
x
;

267 
t˝u
 =+ 
x
;

268 
x
 = 
	`…od
(
fbuf
.
fsy°
);

269 
èb
[
i
].
sy°
 =+ 
x
;

270 
tsys
 =+ 
x
;

272 
	`˛o£
(
ff
);

273 
	}
}

275 
	$ncmp
(
p1
, 
p2
)

276 
èb
 *
p1
, *
p2
;

279 if(
p1
->
cou¡
 =
p2
->count)

280 (
	`tcmp
(
p1
, 
p2
));

281 if(
rÊg
)

282 (
p1
->
cou¡
 - 
p2
->count);

283 (
p2
->
cou¡
 - 
p1
->count);

284 
	}
}

286 
	$bcmp
(
p1
, 
p2
)

287 
èb
 *
p1
, *
p2
;

289 
f1
, 
f2
;

290 
	`sum
();

292 
f1
 = 
	`sum
(
p1
)/p1->
cou¡
;

293 
f2
 = 
	`sum
(
p2
)/p2->
cou¡
;

294 if(
f1
 < 
f2
) {

295 if(
rÊg
)

299 if(
f1
 > 
f2
) {

300 if(
rÊg
)

305 
	}
}

306 
	$tcmp
(
p1
, 
p2
)

307 
èb
 *
p1
, *
p2
;

309 
	`sum
();

310 
f1
, 
f2
;

312 
f1
 = 
	`sum
(
p1
);

313 
f2
 = 
	`sum
(
p2
);

314 if(
f1
 < 
f2
) {

315 if(
rÊg
)

319 if(
f1
 > 
f2
) {

320 if(
rÊg
)

325 
	}
}

327 
	$sum
(
p
)

328 
èb
 *
p
;

331 if(
p
->
«me
[0] == 0)

334 
p
->
˝ut
+

335 
p
->
sy°
);

336 
	}
}

338 
	$öô
()

340 
èb
 
tbuf
;

341 
i
, 
j
, 
f
;

343 i‡((
f
=
	`›í
("/usr/adm/sht_acct", 0))<0)

345 
	`ªad
(
f
, &
tbuf
, (tbuf)) == (tbuf)) {

346 
i
 = 
	`íãr
(&
tbuf
);

347 
ncom
 =+ 
tbuf
.
cou¡
;

348 
èb
[
i
].
cou¡
 = 
tbuf
.count;

349 
åól
 =+ 
tbuf
.
ªÆt
;

350 
èb
[
i
].
ªÆt
 = 
tbuf
.realt;

351 
t˝u
 =+ 
tbuf
.
˝ut
;

352 
èb
[
i
].
˝ut
 = 
tbuf
.cput;

353 
tsys
 =+ 
tbuf
.
sy°
;

354 
èb
[
i
].
sy°
 = 
tbuf
.syst;

356 
	`˛o£
(
f
);

357 
	}
}

359 
	$íãr
(
fbuf
)

360 
·ab
 *
fbuf
;

362 
i
, 
j
;

364 
i
 = 0;

365 
j
=0; j<8; j++) {

366 
i
 = i*7 + 
fbuf
->
‚ame
[
j
];

368 if(
i
 < 0)

369 
i
 = -i;

370 
i
=%
size
; 
èb
[i].
«me
[0]; i = (i+1)%size) {

371 
j
=0; j<8; j++)

372 i‡(
èb
[
i
].
«me
[
j
]!=
fbuf
->
‚ame
[j])

373 
no
;

374 
yes
;

375 
no
:;

377 
j
=0; j<8; j++)

378 
èb
[
i
].
«me
[
j
] = 
fbuf
->
‚ame
[j];

379 
yes
:

380 (
i
);

381 
	}
}

383 
	$°rù
()

385 
i
, 
j
, 
k
, 
c
;

387 
j
 = 
	`íãr
("**junk**");

388 
i
 = 0; i<
size
; i++) {

389 i‡(
èb
[
i
].
«me
[0] &&Åab[i].
cou¡
<=
thªs
) {

390 
	`¥ötf
("%.8s--", 
èb
[
i
].
«me
);

391 
	`Êush
();

392 i‡((
c
=
	`gëch¨
())=='y') {

393 
èb
[
i
].
«me
[0] = '\0';

394 
èb
[
j
].
cou¡
 =+Åab[
i
].count;

395 
èb
[
j
].
ªÆt
 =+Åab[
i
].realt;

396 
èb
[
j
].
˝ut
 =+Åab[
i
].cput;

397 
èb
[
j
].
sy°
 =+Åab[
i
].syst;

399 
c
 && c!='\n')

400 
c
 = 
	`gëch¨
();

403 
	}
}

405 
	$¥ötd©e
(
tvec
)

406 
tvec
[2];

408 *
…
;

409 *
	`loˇ…ime
();

411 
…
 = 
	`loˇ…ime
(
tvec
);

412 
	`¥ötf
("%3d %c%c%¯%d", 
…
[7],

413 
	`∑ú
(
…
[2]),Öair(lt[1]),Öair(lt[0]),Üt[6]);

414 
	}
}

416 
	$∑ú
(
n
)

418 (
n
/10+'0' | (n%10+'0')<<8);

419 
	}
}

	@usr/source/s2/sh.c

5 
	#öå
 2

	)

6 
	#quô
 3

	)

7 
	#löesiz
 1000

	)

8 
	#¨gsiz
 50

	)

9 
	#åesiz
 100

	)

11 
	#quŸe
 0200

	)

12 
	#Ánd
 1

	)

13 
	#fˇt
 2

	)

14 
	#Âö
 4

	)

15 
	#Âou
 8

	)

16 
	#Â¨
 16

	)

17 
	#föt
 32

	)

18 
	#tcom
 1

	)

19 
	#ç¨
 2

	)

20 
	#tfû
 3

	)

21 
	#é°
 4

	)

22 
	#dtyp
 0

	)

23 
	#dÀf
 1

	)

24 
	#drô
 2

	)

25 
	#dÊg
 3

	)

26 
	#d•r
 4

	)

27 
	#dcom
 5

	)

28 
	#ENOEXEC
 8

	)

30 *
	gdﬁp
;

31 **
	gdﬁv
;

32 
	gdﬁc
;

33 *
	g¥omp
;

34 *
	glöï
;

35 *
	gñöï
;

36 **
	g¨gp
;

37 **
	górgp
;

38 *
	gåìp
;

39 *
	gåìíd
;

40 
	g≥ekc
;

41 
	ggÊg
;

42 
	gîr‹
;

43 
	gac˘f
;

44 
	guid
;

45 
	g£töå
;

46 *
	g¨göp
;

47 
	g⁄ñÊg
;

49 *
	gmesg
[] {

65 
	s°ime
 {

66 
	m¥o˘
[2];

67 
	m˝utim
[2];

68 
	msy°im
[2];

69 } 
	gtimeb
;

71 
	$maö
(
c
, 
av
)

72 
c
;

73 **
av
;

75 
f
;

76 *
a˙ame
, **
v
;

78 
	`˛o£
(2);

79 if((
f
=
	`dup
(1)) != 2)

80 
	`˛o£
(
f
);

81 
v
 = 
av
;

82 
a˙ame
 = "/usr/adm/sh_acct";

83 
¥omp
 = "% ";

84 if(((
uid
 = 
	`gëuid
())&0377) == 0) {

85 
¥omp
 = "# ";

86 
a˙ame
 = "/usr/adm/su_acct";

88 
ac˘f
 = 
	`›í
(
a˙ame
, 1);

89 if(
c
 > 1) {

90 
¥omp
 = 0;

91 
f
=3; f<=15; f++)

92 
	`˛o£
(
f
);

93 i‡(*
v
[1]=='-') {

94 **
v
 = '-';

95 i‡(
v
[1][1]=='c' && 
c
>2)

96 
¨göp
 = 
v
[2];

97 i‡(
v
[1][1]=='t')

98 
⁄ñÊg
 = 2;

100 
	`˛o£
(0);

101 
f
 = 
	`›í
(
v
[1], 0);

102 if(
f
 < 0) {

103 
	`¥s
(
v
[1]);

104 
	`îr
(": cannot open");

108 if(**
v
 == '-') {

109 
£töå
++;

110 
	`sig«l
(
quô
, 1);

111 
	`sig«l
(
öå
, 1);

113 
dﬁv
 = 
v
+1;

114 
dﬁc
 = 
c
-1;

116 
lo›
:

117 if(
¥omp
 != 0)

118 
	`¥s
(
¥omp
);

119 
≥ekc
 = 
	`gëc
();

120 
	`maö1
();

121 
lo›
;

122 
	}
}

124 
	$maö1
()

126 
löe
[
löesiz
];

127 *
¨gs
[
¨gsiz
];

128 
åebuf
[
åesiz
];

129 
c
, *
˝
;

130 *
t
;

132 
¨gp
 = 
¨gs
;

133 
órgp
 = 
¨gs
+
¨gsiz
-5;

134 
löï
 = 
löe
;

135 
ñöï
 = 
löe
+
löesiz
-5;

136 
îr‹
 = 0;

137 
gÊg
 = 0;

139 
˝
 = 
löï
;

140 
	`w‹d
();

141 } *
˝
 != '\n');

142 
åìp
 = 
åebuf
;

143 
åìíd
 = &
åebuf
[
åesiz
];

144 if(
gÊg
 == 0) {

145 if(
îr‹
 == 0) {

146 
	`£ãxô
();

147 i‡(
îr‹
)

149 
t
 = 
	`sy¡ax
(
¨gs
, 
¨gp
);

151 if(
îr‹
 != 0)

152 
	`îr
("syntaxÉrror"); 

153 
	`execuã
(
t
);

155 
	}
}

157 
	$w‹d
()

159 
c
, 
c1
;

161 *
¨gp
++ = 
löï
;

163 
lo›
:

164 
c
 = 
	`gëc
()) {

168 
lo›
;

172 
c1
 = 
c
;

173 (
c
=
	`ªadc
()Ë!
c1
) {

174 if(
c
 == '\n') {

175 
îr‹
++;

176 
≥ekc
 = 
c
;

179 *
löï
++ = 
c
|
quŸe
;

181 
∑ck
;

192 *
löï
++ = 
c
;

193 *
löï
++ = '\0';

197 
≥ekc
 = 
c
;

199 
∑ck
:

201 
c
 = 
	`gëc
();

202 if(
	`™y
(
c
, " '\"\t;&<>()|^\n")) {

203 
≥ekc
 = 
c
;

204 if(
	`™y
(
c
, "\"'"))

205 
lo›
;

206 *
löï
++ = '\0';

209 *
löï
++ = 
c
;

211 
	}
}

213 
	$åì
(
n
)

214 
n
;

216 *
t
;

218 
t
 = 
åìp
;

219 
åìp
 =+ 
n
;

220 i‡(
åìp
>
åìíd
) {

221 
	`¥s
("CommandÜine overflow\n");

222 
îr‹
++;

223 
	`ª£t
();

225 (
t
);

226 
	}
}

228 
	$gëc
()

230 
c
;

232 if(
≥ekc
) {

233 
c
 = 
≥ekc
;

234 
≥ekc
 = 0;

235 (
c
);

237 if(
¨gp
 > 
órgp
) {

238 
¨gp
 =- 10;

239 (
c
=
	`gëc
()) != '\n');

240 
¨gp
 =+ 10;

241 
	`îr
("Too manyárgs");

242 
gÊg
++;

243 (
c
);

245 if(
löï
 > 
ñöï
) {

246 
löï
 =- 10;

247 (
c
=
	`gëc
()) != '\n');

248 
löï
 =+ 10;

249 
	`îr
("Too many characters");

250 
gÊg
++;

251 (
c
);

253 
gëd
:

254 if(
dﬁp
) {

255 
c
 = *
dﬁp
++;

256 if(
c
 != '\0')

257 (
c
);

258 
dﬁp
 = 0;

260 
c
 = 
	`ªadc
();

261 if(
c
 == '\\') {

262 
c
 = 
	`ªadc
();

263 if(
c
 == '\n')

265 (
c
|
quŸe
);

267 if(
c
 == '$') {

268 
c
 = 
	`gëc
();

269 if(
c
>='0' && c<='9') {

270 if(
c
-'0' < 
dﬁc
)

271 
dﬁp
 = 
dﬁv
[
c
-'0'];

272 
gëd
;

275 (
c
&0177);

276 
	}
}

278 
	$ªadc
()

280 
cc
;

281 
c
;

283 i‡(
¨göp
) {

284 i‡(
¨göp
 == 1)

285 
	`exô
();

286 i‡((
c
 = *
¨göp
++) == 0) {

287 
¨göp
 = 1;

288 
c
 = '\n';

290 (
c
);

292 i‡(
⁄ñÊg
==1)

293 
	`exô
();

294 if(
	`ªad
(0, &
cc
, 1) != 1)

295 
	`exô
();

296 i‡(
cc
=='\n' && 
⁄ñÊg
)

297 
⁄ñÊg
--;

298 (
cc
);

299 
	}
}

307 
	$sy¡ax
(
p1
, 
p2
)

308 **
p1
, **
p2
;

311 
p1
 !
p2
) {

312 if(
	`™y
(**
p1
, ";&\n"))

313 
p1
++; 

314 (
	`syn1
(
p1
, 
p2
));

317 
	}
}

326 
	$syn1
(
p1
, 
p2
)

327 **
p1
, **
p2
;

329 **
p
;

330 *
t
, *
t1
;

331 
l
;

333 
l
 = 0;

334 
p
=
p1
;Ö!=
p2
;Ö++)

335 **
p
) {

338 
l
++;

342 
l
--;

343 if(
l
 < 0)

344 
îr‹
++;

350 if(
l
 == 0) {

351 
t
 = 
	`åì
(4);

352 
t
[
dtyp
] = 
é°
;

353 
t
[
dÀf
] = 
	`syn2
(
p1
, 
p
);

354 
t
[
dÊg
] = 0;

355 if(**
p
 == '&') {

356 
t1
 = 
t
[
dÀf
];

357 
t1
[
dÊg
] =| 
Ánd
|
föt
;

359 
t
[
drô
] = 
	`sy¡ax
(
p
+1, 
p2
);

360 (
t
);

363 if(
l
 == 0)

364 (
	`syn2
(
p1
, 
p2
));

365 
îr‹
++;

366 
	}
}

374 
	$syn2
(
p1
, 
p2
)

375 **
p1
, **
p2
;

377 **
p
;

378 
l
, *
t
;

380 
l
 = 0;

381 
p
=
p1
;Ö!=
p2
;Ö++)

382 **
p
) {

385 
l
++;

389 
l
--;

394 if(
l
 == 0) {

395 
t
 = 
	`åì
(4);

396 
t
[
dtyp
] = 
tfû
;

397 
t
[
dÀf
] = 
	`syn3
(
p1
, 
p
);

398 
t
[
drô
] = 
	`syn2
(
p
+1, 
p2
);

399 
t
[
dÊg
] = 0;

400 (
t
);

403 (
	`syn3
(
p1
, 
p2
));

404 
	}
}

412 
	$syn3
(
p1
, 
p2
)

413 **
p1
, **
p2
;

415 **
p
;

416 **
Õ
, **
Ω
;

417 *
t
;

418 
b
[100], 
n
, 
l
, 
i
, 
o
, 
c
, 
Êg
;

420 
Êg
 = 0;

421 if(**
p2
 == ')')

422 
Êg
 =| 
Â¨
;

423 
Õ
 = 0;

424 
Ω
 = 0;

425 
i
 = 0;

426 
o
 = 0;

427 
n
 = 0;

428 
l
 = 0;

429 
p
=
p1
;Ö!=
p2
;Ö++)

430 
c
 = **
p
) {

433 if(
l
 == 0) {

434 if(
Õ
 != 0)

435 
îr‹
++;

436 
Õ
 = 
p
+1;

438 
l
++;

442 
l
--;

443 if(
l
 == 0)

444 
Ω
 = 
p
;

448 
p
++;

449 if(
p
!=
p2
 && **p=='>')

450 
Êg
 =| 
fˇt
; 

451 
p
--;

454 if(
l
 == 0) {

455 
p
++;

456 if(
p
 =
p2
) {

457 
îr‹
++;

458 
p
--;

460 if(
	`™y
(**
p
, "<>("))

461 
îr‹
++;

462 if(
c
 == '<') {

463 if(
i
 != 0)

464 
îr‹
++;

465 
i
 = *
p
;

468 if(
o
 != 0)

469 
îr‹
++;

470 
o
 = *
p
;

475 if(
l
 == 0)

476 
b
[
n
++] = *
p
;

478 if(
Õ
 != 0) {

479 if(
n
 != 0)

480 
îr‹
++;

481 
t
 = 
	`åì
(5);

482 
t
[
dtyp
] = 
ç¨
;

483 
t
[
d•r
] = 
	`syn1
(
Õ
, 
Ω
);

484 
out
;

486 if(
n
 == 0)

487 
îr‹
++;

488 
b
[
n
++] = 0;

489 
t
 = 
	`åì
(
n
+5);

490 
t
[
dtyp
] = 
tcom
;

491 
l
=0;Ü<
n
;Ü++)

492 
t
[
l
+
dcom
] = 
b
[l];

493 
out
:

494 
t
[
dÊg
] = 
Êg
;

495 
t
[
dÀf
] = 
i
;

496 
t
[
drô
] = 
o
;

497 (
t
);

498 
	}
}

500 
	$sˇn
(
©
, 
f
)

501 *
©
;

502 (*
f
)();

504 *
p
, 
c
;

505 *
t
;

507 
t
 = 
©
+
dcom
;

508 
p
 = *
t
++)

509 
c
 = *
p
)

510 *
p
++ = (*
f
)(
c
);

511 
	}
}

513 
	$tglob
(
c
)

514 
c
;

517 if(
	`™y
(
c
, "[?*"))

518 
gÊg
 = 1;

519 (
c
);

520 
	}
}

522 
	$åim
(
c
)

523 
c
;

526 (
c
&0177);

527 
	}
}

529 
	$execuã
(
t
, 
pf1
, 
pf2
)

530 *
t
, *
pf1
, *
pf2
;

532 
i
, 
f
, 
pv
[2];

533 *
t1
;

534 *
˝1
, *
˝2
;

535 
î∫o
;

537 if(
t
 != 0)

538 
t
[
dtyp
]) {

540 
tcom
:

541 
˝1
 = 
t
[
dcom
];

542 if(
	`equÆ
(
˝1
, "chdir")) {

543 if(
t
[
dcom
+1] != 0) {

544 if(
	`chdú
(
t
[
dcom
+1]) < 0)

545 
	`îr
("chdir: bad directory");

547 
	`îr
("chdir:árg count");

550 if(
	`equÆ
(
˝1
, "shift")) {

551 if(
dﬁc
 < 1) {

552 
	`¥s
("shift:Çoárgs\n");

555 
dﬁv
[1] = dolv[0];

556 
dﬁv
++;

557 
dﬁc
--;

560 if(
	`equÆ
(
˝1
, "login")) {

561 if(
¥omp
 != 0) {

562 
	`˛o£
(
ac˘f
);

563 
	`execv
("/bö/logö", 
t
+
dcom
);

565 
	`¥s
("login: cannotÉxecute\n");

568 if(
	`equÆ
(
˝1
, "wait")) {

569 
	`pwaô
(-1, 0);

572 if(
	`equÆ
(
˝1
, ":"))

575 
ç¨
:

576 
f
 = 
t
[
dÊg
];

577 
i
 = 0;

578 if((
f
&
Â¨
) == 0)

579 
i
 = 
	`f‹k
();

580 if(
i
 == -1) {

581 
	`îr
("tryágain");

584 if(
i
 != 0) {

585 if((
f
&
Âö
) != 0) {

586 
	`˛o£
(
pf1
[0]);

587 
	`˛o£
(
pf1
[1]);

589 if((
f
&
Ánd
) != 0) {

590 
	`¥n
(
i
);

591 
	`¥s
("\n");

594 if((
f
&
Âou
) == 0)

595 
	`pwaô
(
i
, 
t
);

598 if(
t
[
dÀf
] != 0) {

599 
	`˛o£
(0);

600 
i
 = 
	`›í
(
t
[
dÀf
], 0);

601 if(
i
 < 0) {

602 
	`¥s
(
t
[
dÀf
]);

603 
	`îr
(": cannot open");

604 
	`exô
();

607 if(
t
[
drô
] != 0) {

608 if((
f
&
fˇt
) != 0) {

609 
i
 = 
	`›í
(
t
[
drô
], 1);

610 if(
i
 >= 0) {

611 
	`£ek
(
i
, 0, 2);

612 
f1
;

615 
i
 = 
	`¸ót
(
t
[
drô
], 0666);

616 if(
i
 < 0) {

617 
	`¥s
(
t
[
drô
]);

618 
	`îr
(": cannot create");

619 
	`exô
();

621 
f1
:

622 
	`˛o£
(1);

623 
	`dup
(
i
);

624 
	`˛o£
(
i
);

626 if((
f
&
Âö
) != 0) {

627 
	`˛o£
(0);

628 
	`dup
(
pf1
[0]);

629 
	`˛o£
(
pf1
[0]);

630 
	`˛o£
(
pf1
[1]);

632 if((
f
&
Âou
) != 0) {

633 
	`˛o£
(1);

634 
	`dup
(
pf2
[1]);

635 
	`˛o£
(
pf2
[0]);

636 
	`˛o£
(
pf2
[1]);

638 if((
f
&
föt
)!=0 && 
t
[
dÀf
]==0 && (f&
Âö
)==0) {

639 
	`˛o£
(0);

640 
	`›í
("/dev/null", 0);

642 if((
f
&
föt
Ë=0 && 
£töå
) {

643 
	`sig«l
(
öå
, 0);

644 
	`sig«l
(
quô
, 0);

646 if(
t
[
dtyp
] =
ç¨
) {

647 if(
t1
 = 
t
[
d•r
])

648 
t1
[
dÊg
] =| 
f
&
föt
;

649 
	`execuã
(
t1
);

650 
	`exô
();

652 
	`˛o£
(
ac˘f
);

653 
gÊg
 = 0;

654 
	`sˇn
(
t
, &
tglob
);

655 if(
gÊg
) {

656 
t
[
d•r
] = "/etc/glob";

657 
	`execv
(
t
[
d•r
],Å+dspr);

658 
	`¥s
("glob: cannotÉxecute\n");

659 
	`exô
();

661 
	`sˇn
(
t
, &
åim
);

662 *
löï
 = 0;

663 
	`execv
(
t
[
dcom
],Å+dcom);

664 i‡(
î∫o
==
ENOEXEC
)

665 
runcom
;

666 
˝1
 = 
löï
;

667 
˝2
 = "/usr/bin/";

668 *
˝1
 = *
˝2
++)

669 
˝1
++;

670 
˝2
 = 
t
[
dcom
];

671 *
˝1
++ = *
˝2
++);

672 
	`execv
(
löï
+4, 
t
+
dcom
);

673 i‡(
î∫o
==
ENOEXEC
)

674 
runcom
;

675 
	`execv
(
löï
, 
t
+
dcom
);

676 i‡(
î∫o
==
ENOEXEC
)

677 
runcom
;

678 
	`¥s
(
t
[
dcom
]);

679 
	`îr
(":Çot found");

680 
	`exô
();

681 
runcom
:

682 i‡(*
löï
)

683 
t
[
dcom
] = 
löï
;

684 
t
[
d•r
] = "/bin/sh";

685 
	`execv
(
t
[
d•r
],Å+dspr);

686 
	`¥s
("No shell!\n");

687 
	`exô
();

689 
tfû
:

690 
f
 = 
t
[
dÊg
];

691 
	`pùe
(
pv
);

692 
t1
 = 
t
[
dÀf
];

693 
t1
[
dÊg
] =| 
Âou
 | (
f
&(
Âö
|
föt
));

694 
	`execuã
(
t1
, 
pf1
, 
pv
);

695 
t1
 = 
t
[
drô
];

696 
t1
[
dÊg
] =| 
Âö
 | (
f
&(
Âou
|
föt
|
Ánd
));

697 
	`execuã
(
t1
, 
pv
, 
pf2
);

700 
é°
:

701 
f
 = 
t
[
dÊg
]&
föt
;

702 if(
t1
 = 
t
[
dÀf
])

703 
t1
[
dÊg
] =| 
f
;

704 
	`execuã
(
t1
);

705 if(
t1
 = 
t
[
drô
])

706 
t1
[
dÊg
] =| 
f
;

707 
	`execuã
(
t1
);

711 
	}
}

713 
	$îr
(
s
)

714 *
s
;

717 
	`¥s
(
s
);

718 
	`¥s
("\n");

719 if(
¥omp
 == 0) {

720 
	`£ek
(0, 0, 2);

721 
	`exô
();

723 
	}
}

725 
	$¥s
(
as
)

726 *
as
;

728 *
s
;

730 
s
 = 
as
;

731 *
s
)

732 
	`putc
(*
s
++);

733 
	}
}

735 
	$putc
(
c
)

738 
	`wrôe
(2, &
c
, 1);

739 
	}
}

741 
	$¥n
(
n
)

742 
n
;

744 
a
;

746 if(
a
=
	`ldiv
(0,
n
,10))

747 
	`¥n
(
a
);

748 
	`putc
(
	`Ãem
(0,
n
,10)+'0');

749 
	}
}

751 
	$™y
(
c
, 
as
)

752 
c
;

753 *
as
;

755 *
s
;

757 
s
 = 
as
;

758 *
s
)

759 if(*
s
++ =
c
)

762 
	}
}

764 
	$equÆ
(
as1
, 
as2
)

765 *
as1
, *
as2
;

767 *
s1
, *
s2
;

769 
s1
 = 
as1
;

770 
s2
 = 
as2
;

771 *
s1
++ =*
s2
)

772 if(*
s2
++ == '\0')

775 
	}
}

777 
	$pwaô
(
i
, 
t
)

778 
i
, *
t
;

780 
p
, 
e
;

781 
s
;

783 if(
i
 != 0)

785 
	`times
(&
timeb
);

786 
	`time
(
timeb
.
¥o˘
);

787 
p
 = 
	`waô
(&
s
);

788 if(
p
 == -1)

790 
e
 = 
s
&0177;

791 if(
mesg
[
e
] != 0) {

792 if(
p
 !
i
) {

793 
	`¥n
(
p
);

794 
	`¥s
(": ");

796 
	`¥s
(
mesg
[
e
]);

797 if(
s
&0200)

798 
	`¥s
(" -- Core dumped");

800 if(
e
 != 0)

801 
	`îr
("");

802 if(
i
 =
p
) {

803 
	`ac˘
(
t
);

806 
	`ac˘
(0);

808 
	}
}

810 
	$ac˘
(
t
)

811 *
t
;

813 if(
t
 == 0)

814 
	`íac˘
("**gok"); 

815 if(*
t
 =
ç¨
)

816 
	`íac˘
("()"); 

817 
	`íac˘
(
t
[
dcom
]);

818 
	}
}

820 
	$íac˘
(
as
)

821 *
as
;

823 
°ime
 
timbuf
;

825 
˙ame
[14];

826 
fûl
;

827 
uid
;

828 
d©ë
[2];

829 
ªÆt
[2];

830 
b˝ut
[2];

831 
bsy°
[2];

832 } 
tbuf
;

833 
i
;

834 *
≈
, *
s
;

836 
s
 = 
as
;

837 
	`times
(&
timbuf
);

838 
	`time
(
timbuf
.
¥o˘
);

839 
	`lsub
(
tbuf
.
ªÆt
, 
timbuf
.
¥o˘
, 
timeb
.proct);

840 
	`lsub
(
tbuf
.
b˝ut
, 
timbuf
.
˝utim
, 
timeb
.cputim);

841 
	`lsub
(
tbuf
.
bsy°
, 
timbuf
.
sy°im
, 
timeb
.systim);

843 
≈
 = 
s
;

844 *
s
 != '\0' && *s != '/')

845 
s
++;

846 } *
s
++ != '\0');

847 
i
=0; i<14; i++) {

848 
tbuf
.
˙ame
[
i
] = *
≈
;

849 i‡(*
≈
)

850 
≈
++;

852 
tbuf
.
d©ë
[0] = 
timbuf
.
¥o˘
[0];

853 
tbuf
.
d©ë
[1] = 
timbuf
.
¥o˘
[1];

854 
tbuf
.
uid
 = uid;

855 
	`£ek
(
ac˘f
, 0, 2);

856 
	`wrôe
(
ac˘f
, &
tbuf
, (tbuf));

857 
	}
}

	@usr/source/s2/size.c

6 
	$maö
(
¨gc
, 
¨gv
)

7 **
¨gv
;

9 
buf
[010], 
f
, 
ac
, 
sum
;

11 
ac
 = 
¨gc
;

12 i‡(
ac
==1) {

13 *
¨gv
 = "a.out";

14 
ac
++;

15 --
¨gv
;

17 --
ac
) {

18 ++
¨gv
;

19 if((
f
=
	`›í
(*
¨gv
, 0))<0) {

20 
	`¥ötf
("%†nŸ found\n", *
¨gv
);

23 
	`ªad
(
f
, 
buf
, 0020);

24 if(
buf
[0]!=0410 && buf[0]!=0407) {

25 
	`¥ötf
("Bad f‹m©: %s\n", *
¨gv
);

26 
	`˛o£
(
f
);

29 i‡(
¨gc
>2)

30 
	`¥ötf
("%s: ", *
¨gv
);

31 
	`¥ötf
("%l+%l+%l=", 
buf
[1],buf[2],buf[3]);

32 
sum
 = 
buf
[1]+buf[2]+buf[3];

33 
	`¥ötf
("%»(%o)\n", 
sum
, sum);

34 
	`˛o£
(
f
);

36 
	}
}

	@usr/source/s2/sleep.c

1 
	$maö
(
¨gc
, 
¨gv
)

2 **
¨gv
;

4 
c
, 
n
;

5 *
s
;

7 
n
 = 0;

8 if(
¨gc
 < 2) {

9 
	`¥ötf
("arg count\n");

10 
	`exô
();

12 
s
 = 
¨gv
[1];

13 
c
 = *
s
++) {

14 if(
c
<'0' || c>'9') {

15 
	`¥ötf
("bad character\n");

16 
	`exô
();

18 
n
 =Ç*10 + 
c
 - '0';

20 
	`¶ìp
(
n
);

21 
	}
}

	@usr/source/s2/sort.c

1 
	#L
 512

	)

2 
	#N
 7

	)

3 
	#C
 20

	)

4 
	#MEM
 (16*2048)

	)

5 
	#NF
 10

	)

7 
	gibuf
[259];

8 
	gobuf
[259];

9 *
	gfûe
;

10 *
	gfûï
;

11 
	gnfûes
;

12 
	g∆öes
;

13 
	g¡ext
;

14 *
	gl•a˚
;

15 *
	gt•a˚
;

16 
cmp
();

17 
ãrm
();

18 
	gmÊg
;

19 *
	goutfû
;

20 
	gèbch¨
;

21 
	górgc
;

22 **
	górgv
;

24 
	gfﬁd
[128] {

42 
	gnofﬁd
[128];

43 
	gdi˘
[128] {

53 
	gnodi˘
[128] { 1 };

55 
	sfõld
 {

56 *
	mcode
;

57 *
	mign‹e
;

58 
	mnÊg
;

59 
	mrÊg
;

60 
	mbÊg
;

61 *
	mm
[2];

62 *
	mn
[2];

63 } 
	gfõlds
[
NF
];

64 
	g¥Ÿo
[9] {

65 &
	gfﬁd
,

66 &
	gnodi˘
,

73 
	gnfõlds
;

74 
	gîr‹
 1;

76 
	$maö
(
¨gc
, 
¨gv
)

77 **
¨gv
;

79 
a
, 
i
;

80 *
¨g
;

81 *
p
;

82 *
q
;

84 
a
=0;á<128;á++)

85 
nofﬁd
[
a
] =á;

86 
nodi˘
[127] = 1;

87 
	`c›y¥Ÿo
();

88 
órgv
 = 
¨gv
;

89 --
¨gc
 > 0) {

90 if(**++
¨gv
 ='-'Ë
¨g
 = *argv;;) {

91 *++
¨g
) {

93 if(
¨g
[-1] == '-')

94 
órgv
[
órgc
++] = "-";

98 
mÊg
++;

102 if(--
¨gc
 > 0)

103 
outfû
 = *++
¨gv
;

107 
	`fõld
(++*
¨gv
,1);

111 } i‡(**
¨gv
 == '+') {

112 if(++
nfõlds
>=
NF
) {

113 
	`mess
("Too many keys\n");

114 
	`exô
(1);

116 
	`c›y¥Ÿo
();

117 
	`fõld
(++*
¨gv
,0);

119 
órgv
[
órgc
++] = *
¨gv
;

121 
q
 = &
fõlds
[0];

122 
a
=1;á<=
nfõlds
;á++) {

123 
p
 = &
fõlds
[
a
];

124 
i
=0; i<5; i++)

125 if(
p
[
i
] !
¥Ÿo
[i])

126 
√xt
;

127 
i
=0; i<5; i++)

128 
p
[
i
] = 
q
[i];

129 
√xt
: ;

131 if(
órgc
 == 0)

132 
órgv
[
órgc
++] = "-";

134 
a
 = 
MEM
;

135 
i
 = 
l•a˚
 = 
	`sbrk
(0);

136 
	`brk
(
a
) == -1)

137 
a
 =- 512;

138 
	`brk
(
a
 =- 512);

139 
a
 =- 
i
;

140 
∆öes
 = ((
a
-
L
)>>1) & 077777;

141 
∆öes
 =/ 5;

142 
¡ext
 = 
∆öes
*8;

143 
t•a˚
 = 
l•a˚
+
∆öes
;

144 
fûe
 = "/usr/tmp/stmXaa";

145 
lo›
:

146 
fûï
 = 
fûe
;

147 *
fûï
 != 'X')

148 
fûï
++;

149 *
fûï
 = 'a';;(*filep)++) {

150 if(
	`°©
(
fûe
, 
l•a˚
) < 0) {

151 
a
 = 
	`¸ót
(
fûe
, 0600);

152 if(
a
 >= 0)

155 if(*
fûï
 == 'z') {

156 if(
fûe
[1] != 't') {

157 
fûe
 = "/tmp/stmXaa";

158 
lo›
;

160 
	`mess
("CannotÜocateÅemp\n");

161 
	`exô
(1);

164 
	`˛o£
(
a
);

165 
fûï
++;

166 i‡((
	`sig«l
(2, 1) & 01) == 0)

167 
	`sig«l
(2, 
ãrm
);

168 
nfûes
 = 
órgc
;

169 if(!
mÊg
) {

170 
ibuf
[0] = -1;

171 
	`s‹t
();

172 
	`˛o£
(0);

174 
a
 = 
mÊg
?0:
órgc
;á+
N
 < 
nfûes
;á=+N) {

175 
	`√wfûe
();

176 
	`mîge
(
a
,á+
N
);

178 if(
a
 !
nfûes
) {

179 
	`ﬁdfûe
();

180 
	`mîge
(
a
, 
nfûes
);

182 
îr‹
 = 0;

183 
	`ãrm
();

184 
	}
}

186 
	$s‹t
()

188 *
˝
;

189 *
Õ
, 
c
;

190 
d⁄e
;

191 
i
;

192 
f
;

194 
d⁄e
 = 0;

195 
i
 = 0;

197 
˝
 = 
t•a˚
;

198 
Õ
 = 
l•a˚
;

199 
Õ
 < 
l•a˚
+
∆öes
 && 
˝
 < 
t•a˚
+
¡ext
) {

200 *
Õ
++ = 
˝
;

201 (*
˝
++ = 
c
 = 
	`gëc
(
ibuf
)) != '\n') {

202 if(
c
 >= 0) ;

203 
˝
--;

204 
	`˛o£
(
ibuf
[0]);

205 if(
i
 < 
órgc
) {

206 if((
f
 = 
	`£tfû
(
i
++)) == 0)

207 
ibuf
[0] = 0;

208 if(
	`f›í
(
f
, 
ibuf
) < 0)

209 
	`ˇ¡
(
f
);

213 if(
c
 < 0) {

214 
d⁄e
++;

215 
Õ
--;

219 
	`qs‹t
(
l•a˚
, 
Õ
-l•a˚, 2, 
cmp
);

220 if(
d⁄e
 =0 || 
nfûes
 !
órgc
)

221 
	`√wfûe
(); 

222 
	`ﬁdfûe
();

223 
Õ
 > 
l•a˚
) {

224 
˝
 = *--
Õ
;

226 
	`putc
(*
˝
, 
obuf
);

227 *
˝
++ != '\n');

229 
	`fÊush
(
obuf
);

230 
	`˛o£
(
obuf
[0]);

231 } 
d⁄e
 == 0);

232 
	}
}

234 
	smîg


236 
	ml
[
L
];

237 
	mb
[259];

240 
	$mîge
(
a
, 
b
)

242 
mîg
 *
p
;

243 *
˝
;

244 
i
;

245 °ru˘ { *
ù
;};

246 
f
;

247 
j
;

249 
p
 = 
l•a˚
;

250 
j
 = 0;

251 
i
=
a
; i<
b
; i++) {

252 
f
 = 
	`£tfû
(
i
);

253 if(
f
 == 0)

254 
p
->
b
[0] = 
	`dup
(0);

255 if(
	`f›í
(
f
, 
p
->
b
) < 0)

256 
	`ˇ¡
(
f
);

257 
ibuf
[
j
] = 
p
;

258 if(!
	`æöe
(
p
)Ë
j
++;

259 
p
++;

261 
i
 = 
j
;

262 
	`qs‹t
(
ibuf
, 
i
, 2, 
cmp
);

263 if(
i
 > 0) ;;) {

264 
˝
 = 
ibuf
[
i
-1];

266 
	`putc
(*
˝
, 
obuf
);

267 *
˝
++ != '\n');

268 if(
	`æöe
(
ibuf
[
i
-1])) {

269 
i
--;

270 if(
i
 == 0)

273 
˝
 = &
ibuf
[
i
];

274 --
˝
.
ù
 > 
ibuf
 && 
	`cmp
(cp.ip, cp.ip-1) < 0) {

275 
p
 = *
˝
.
ù
;

276 *
˝
.
ù
 = *(cp.ip-1);

277 *(
˝
.
ù
-1Ë
p
;

280 
p
 = 
l•a˚
;

281 
i
=
a
; i<
b
; i++) {

282 
	`˛o£
(
p
->
b
[0]);

283 
p
++;

284 if(
i
 >
órgc
)

285 
	`˛o£
(
	`¸ót
(
	`£tfû
(
i
)));

287 
	`fÊush
(
obuf
);

288 
	`˛o£
(
obuf
[0]);

289 
	}
}

291 
	$æöe
(
mp
)

292 
mîg
 *
mp
;

294 *
˝
;

295 *
bp
, 
c
;

297 
bp
 = 
mp
->
b
;

298 
˝
 = 
mp
->
l
;

300 
c
 = 
	`gëc
(
bp
);

301 if(
c
 < 0)

303 *
˝
++ = 
c
;

304 } 
c
 != '\n');

306 
	}
}

308 
	$√wfûe
()

311 if(
	`f¸ót
(
	`£tfû
(
nfûes
), 
obuf
) < 0) {

312 
	`mess
("Can't createÅemp\n");

313 
	`ãrm
();

315 
nfûes
++;

316 
	}
}

319 
	$£tfû
(
i
)

322 if(
i
 < 
órgc
)

323 if(
órgv
[
i
][0] == '-' &&Éargv[i][1] == '\0')

326 (
órgv
[
i
]);

327 
i
 =- 
órgc
;

328 
fûï
[0] = 
i
/26 + 'a';

329 
fûï
[1] = 
i
%26 + 'a';

330 (
fûe
);

331 
	}
}

333 
	$ﬁdfûe
()

336 if(
outfû
) {

337 if(
	`f¸ót
(
outfû
, 
obuf
) < 0) {

338 
	`mess
("Can't create output\n");

339 
	`ãrm
();

342 
obuf
[0] = 1;

343 
	}
}

345 
	$ˇ¡
(
f
)

347 
	`mess
("Can't open ");

348 
	`mess
(
f
);

349 
	`mess
("\n");

350 
	`ãrm
();

351 
	}
}

353 
	$ãrm
()

355 
i
;

357 if(
nfûes
 == 0)

358 
nfûes
++;

359 
i
=
órgc
; i<
nfûes
; i++) {

360 
	`u∆ök
(
	`£tfû
(
i
));

362 
	`exô
(
îr‹
);

363 
	}
}

365 
	$cmp
(
i
, 
j
)

366 *
i
, *
j
;

368 *
∑
, *
pb
;

369 *
code
, *
ign‹e
;

370 
a
, 
b
;

371 
k
;

372 *
œ
, *
lb
;

373 
ß
;

374 
sb
;

375 *
ùa
, *
ùb
, *
j∑
, *
jpb
;

376 
fõld
 *
Â
;

378 
k
 = 
nfõlds
>0; k<=nfields; k++) {

379 
Â
 = &
fõlds
[
k
];

380 
∑
 = *
i
;

381 
pb
 = *
j
;

382 if(
k
) {

383 
œ
 = 
	`skù
(
∑
, 
Â
, 1);

384 
∑
 = 
	`skù
’a, 
Â
, 0);

385 
lb
 = 
	`skù
(
pb
, 
Â
, 1);

386 
pb
 = 
	`skù
’b, 
Â
, 0);

388 
œ
 = -1;

389 
lb
 = -1;

391 if(
Â
->
nÊg
) {

392 
	`bœnk
(*
∑
))

393 
∑
++;

394 
	`bœnk
(*
pb
))

395 
pb
++;

396 
ß
 = 
sb
 = 
Â
->
rÊg
;

397 if(*
∑
 == '-') {

398 
∑
++;

399 
ß
 = -sa;

401 if(*
pb
 == '-') {

402 
pb
++;

403 
sb
 = -sb;

405 if(
ß
 !
sb
)

406 
ß
 = 0;

407 
ùa
 = 
∑
; i∑<
œ
&&
	`digô
(*ipa); ipa++);

408 
ùb
 = 
pb
; ipb<
lb
&&
	`digô
(*ipb); ipb++);

409 
j∑
 = 
ùa
;

410 
jpb
 = 
ùb
;

411 
a
 = 0;

412 if(
ß
Ë
ùa
 > 
∑
 && 
ùb
 > 
pb
)

413 if(
b
 = *--
ùb
 - *--
ùa
)

414 
a
 = 
b
;

415 
ùa
 > 
∑
)

416 if(*--
ùa
 != '0')

417 (
ß
 ? -ß : 
sb
);

418 
ùb
 > 
pb
)

419 if(*--
ùb
 != '0')

420 (
ß
 ? s®: 
sb
);

421 if(
a
Ë◊*
ß
);

422 if(*(
∑
=
j∑
) == '.')

423 
∑
++;

424 if(*(
pb
=
jpb
) == '.')

425 
pb
++;

426 
∑
<
œ
 && 
	`digô
(*pa))

427 if(
pb
<
lb
 &&
	`digô
(*pb)) {

428 if(
a
 = *
pb
++ - *
∑
++)

429 (
ß
 ? 
a
*ß : 
sb
);

430 } if(*
∑
++ != '0')

431 (
ß
 ? -ß : 
sb
);

432 
pb
<
lb
 && 
	`digô
(*pb))

433 if(*
pb
++ != '0')

434 (
ß
 ? s®: 
sb
);

437 
code
 = 
Â
->code;

438 
ign‹e
 = 
Â
->ignore;

439 
lo›
:

440 *
∑
<0 || 
ign‹e
[*pa])

441 
∑
++;

442 *
pb
<0 || 
ign‹e
[*pb])

443 
pb
++;

444 if(
∑
>=
œ
 || *pa=='\n')

445 if(
pb
<
lb
 && *pb!='\n')

446 (
Â
->
rÊg
);

448 if(
pb
>=
lb
 || *pb=='\n')

449 (-
Â
->
rÊg
);

450 if((
ß
 = 
code
[*
pb
++]-code[*
∑
++]) == 0)

451 
lo›
;

452 (
ß
*
Â
->
rÊg
);

454 
∑
 = *
i
;

455 
pb
 = *
j
;

456 *
∑
 != '\n') {

457 if(*
∑
 =*
pb
) {

458 
∑
++;

459 
pb
++;

462 if(*
pb
 == '\n')

464 (*
pb
 - *
∑
);

466 (*
pb
 != '\n');

467 
	}
}

469 
	$skù
(
µ
, 
Â
, 
j
)

470 
fõld
 *
Â
;

471 *
µ
;

473 
i
;

474 *
p
;

476 
p
 = 
µ
;

477 if–(
i
=
Â
->
m
[
j
]) < 0)

479 
i
-- > 0) {

480 if(
èbch¨
 != 0) {

481 *
p
 !
èbch¨
)

482 if(*
p
 != '\n')

483 
p
++;

484 
ªt
;

485 
p
++;

487 
	`bœnk
(*
p
))

488 
p
++;

489 !
	`bœnk
(*
p
))

490 if(*
p
 != '\n')

491 
p
++;

492 
ªt
;

495 if(
Â
->
bÊg
)

496 
	`bœnk
(*
p
))

497 
p
++;

498 
i
 = 
Â
->
n
[
j
];

499 
i
-- > 0) {

500 if(*
p
 != '\n')

501 
p
++;

502 
ªt
;

504 
ªt
:

505 (
p
);

506 
	}
}

508 
	$digô
(
c
)

511 (
c
 <= '9' && c >= '0');

512 
	}
}

514 
	$mess
(
s
)

515 *
s
;

517 *
s
)

518 
	`wrôe
(2, 
s
++, 1);

519 
	}
}

521 
	$c›y¥Ÿo
()

523 
i
, *
p
, *
q
;

525 
p
 = 
¥Ÿo
;

526 
q
 = &
fõlds
[
nfõlds
];

527 
i
=0; i<(
¥Ÿo
)/2; i++)

528 *
q
++ = *
p
++;

529 
	}
}

531 
	$fõld
(
s
,
k
)

532 *
s
;

534 
fõld
 *
p
;

535 
p
 = &
fõlds
[
nfõlds
];

536 ; *
s
!=0; s++) {

537 *
s
) {

542 
p
->
code
 = 
nofﬁd
;

546 
p
->
bÊg
++;

550 
p
->
ign‹e
 = 
di˘
;

554 
p
->
nÊg
++;

557 
èbch¨
 = *++
s
;

558 if(
èbch¨
 =0Ë
s
--;

562 
p
->
rÊg
 = -1;

566 
p
->
m
[
k
] = 
	`numbî
(&
s
);

567 if(*
s
 == '.')

568 
s
++;

569 
p
->
n
[
k
] = 
	`numbî
(&
s
);

570 
s
--;

573 
	}
}

575 
	$numbî
(
µa
)

576 **
µa
;

578 
n
;

579 *
∑
;

580 
∑
 = *
µa
;

581 
n
 = 0;

582 
	`digô
(*
∑
))

583 
n
 =Ç*10 + *
∑
++ - '0';

584 *
µa
 = 
∑
;

585 (
n
);

586 
	}
}

588 
	$bœnk
(
c
)

590 if(
c
==' ' || c=='\t')

593 
	}
}

	@usr/source/s2/split.c

1 
	gcou¡
 1000;

2 
	g‚umbî
;

3 
	gibuf
[259];

4 
	gobuf
[259];

5 
	g‚ame
[100];

6 *
	gifû
;

7 *
	gofû
;

9 
	$maö
(
¨gc
, 
¨gv
)

10 *
¨gv
[];

12 
i
, 
c
, 
f
;

14 
i
=1; i<
¨gc
; i++)

15 if(
¨gv
[
i
][0] == '-')

16 
¨gv
[
i
][1]) {

19 
ifû
 = 1;

32 
cou¡
 = 
	`numbî
(
¨gv
[
i
]+1);

36 if(
ifû
)

37 
ofû
 = 
¨gv
[
i
]; 

38 
ifû
 = 
¨gv
[
i
];

39 if(
ifû
 != 0 && ifil != 1)

40 if(
	`f›í
(
ifû
, 
ibuf
) < 0) {

41 
	`wrôe
(2, "cannot open input\n", 18);

42 
	`exô
();

44 if(
ofû
 == 0)

45 
ofû
 = "x";

47 
lo›
:

48 
f
 = 1;

49 
i
=0; i<
cou¡
; i++)

51 
c
 = 
	`gëc
(
ibuf
);

52 if(
c
 < 0) {

53 if(
f
 == 0)

54 
	`fÊush
(
obuf
);

55 
	`exô
();

57 if(
f
) {

58 
f
=0; 
ofû
[f]; f++)

59 
‚ame
[
f
] = 
ofû
[f];

60 
‚ame
[
f
++] = 
‚umbî
/26 + 'a';

61 
‚ame
[
f
++] = 
‚umbî
%26 + 'a';

62 
‚ame
[
f
] = '\0';

63 
‚umbî
++;

64 if(
	`f¸ót
(
‚ame
, 
obuf
) < 0) {

65 
	`wrôe
(2, "Cannot create output\n", 20);

66 
	`exô
();

68 
f
 = 0;

70 
	`putc
(
c
, 
obuf
);

71 } 
c
 != '\n');

72 
	`fÊush
(
obuf
);

73 
	`˛o£
(
obuf
[0]);

74 
lo›
;

75 
	}
}

77 
	$numbî
(
°r
)

78 *
°r
;

80 
n
;

81 *
s
;

83 
n
 = 0;

84 
s
 = 
°r
; *s; s++)

85 if(*
s
>='0' && *s<='9')

86 
n
 =Ç*10 + *
s
-'0';

87 (
n
);

88 
	}
}

	@usr/source/s2/stty.c

1 *
	g¨g
;

2 
	gmode
[3];

4 
	$maö
(
¨gc
, 
¨gv
)

5 *
¨gv
[];

7 
i
;

9 
	`gây
(1, 
mode
);

10 --
¨gc
 > 0) {

12 
¨g
 = *++
¨gv
;

13 if(
	`eq
("erase") ||Éq("kill") ||Éq("ek"))

14 
mode
[1] = '#@';

15 if(
	`eq
("even"))

16 
	`£t
(0200);

17 if(
	`eq
("-even"))

18 
	`ª£t
(0200);

19 if(
	`eq
("odd"))

20 
	`£t
(0100);

21 if(
	`eq
("-odd"))

22 
	`ª£t
(0100);

23 if(
	`eq
("raw"))

24 
	`£t
(040);

25 if(
	`eq
("-raw") ||Éq("cooked"))

26 
	`ª£t
(040);

27 if(
	`eq
("-nl"))

28 
	`£t
(020);

29 if(
	`eq
("nl"))

30 
	`ª£t
(020);

31 if(
	`eq
("echo"))

32 
	`£t
(010);

33 if(
	`eq
("-echo"))

34 
	`ª£t
(010);

35 if(
	`eq
("lcase"))

36 
	`£t
(04);

37 if(
	`eq
("-lcase"))

38 
	`ª£t
(04);

39 if(
	`eq
("-tabs"))

40 
	`£t
(02);

41 if(
	`eq
("tabs"))

42 
	`ª£t
(02);

43 if(
	`eq
("-delay"))

44 
	`£t
(01);

45 if(
	`eq
("delay"))

46 
	`ª£t
(01);

47 if(
	`eq
("hup"))

48 
	`£t
(0400);

49 if(
	`eq
("-hup"))

50 
	`ª£t
(0400);

51 if(
	`eq
("tdelay"))

52 
	`ª£t
(010000);

53 if(
	`eq
("-tdelay"))

54 
	`£t
(010000);

55 if(
¨g
)

56 
	`¥ötf
("unknow¿mode: %s\n", 
¨g
);

58 
	`°ty
(1,
mode
);

59 
	}
}

61 
	$eq
(
°rög
)

62 *
°rög
;

64 
i
;

66 if(!
¨g
)

68 
i
 = 0;

69 
lo›
:

70 if(
¨g
[
i
] !
°rög
[i])

72 if(
¨g
[
i
++] != '\0')

73 
lo›
;

74 
¨g
 = 0;

76 
	}
}

78 
	$£t
(
b
)

81 
mode
[2] =| 
b
;

82 
	}
}

84 
	$ª£t
(
b
)

87 
mode
[2] =& ~
b
;

88 
	}
}

	@usr/source/s2/su.c

3 
	g∑ssw‹d
[100];

4 
	gpwbuf
[100];

5 
	gâybuf
[3];

6 
	$maö
()

8 *
p
, *
q
;

9 
fö
;

11 if(
	`gëpw
(0, 
pwbuf
))

12 
badpw
;

13 (&
fö
)[1] = 0;

14 
p
 = 
pwbuf
;

15 *
p
 != ':')

16 if(*
p
++ == '\0')

17 
badpw
;

18 if(*++
p
 == ':')

19 
ok
;

20 
	`gây
(0, 
âybuf
);

21 
âybuf
[2] =& ~010;

22 
	`°ty
(0, 
âybuf
);

23 
	`¥ötf
("password: ");

24 
q
 = 
∑ssw‹d
;

25 (*
q
 = 
	`gëch¨
()) != '\n')

26 if(*
q
++ == '\0')

28 *
q
 = '\0';

29 
âybuf
[2] =| 010;

30 
	`°ty
(0, 
âybuf
);

31 
	`¥ötf
("\n");

32 
q
 = 
	`¸y±
(
∑ssw‹d
);

33 *
q
++ =*
p
++);

34 if(*--
q
 ='\0' && *--
p
 == ':')

35 
ok
;

36 
îr‹
;

38 
badpw
:

39 
	`¥ötf
("badÖassword file\n");

40 
ok
:

41 
	`£tuid
(0);

42 
	`exe˛
("/bin/sh", "-", 0);

43 
	`¥ötf
("cannotÉxecute shell\n");

44 
îr‹
:

45 
	`¥ötf
("sorry\n");

46 
	}
}

	@usr/source/s2/sync.c

1 
	$maö
()

4 
	`sync
();

5 
	}
}

	@usr/source/s2/tee.c

1 
	g›í
[9] { 1 };

2 
	gn
 1;

3 
	gt
 0;

5 
	gö
[512];

7 
	gout
[512];

9 
	$maö
(
¨gc
,
¨gv
)

10 **
¨gv
;

12 
r
,
w
,
p
;

13 °ru˘ { 
x1
[2], 
ty≥
, 
x2
[15]; } 
buf
;

14 
	`f°©
(1,&
buf
);

15 
t
 = (
buf
.
ty≥
&060000)==020000;

16 
¨gc
-->1) {

17 
›í
[
n
++] = 
	`¸ót
(
¨gv
[1],0666);

18 if(
	`°©
(
¨gv
[1],&
buf
)>=0)

19 if((
buf
.
ty≥
&060000)==020000)

20 
t
++;

21 
¨gv
++;

23 
r
 = 
w
 = 0;

25 
p
=0;p<512;) {

26 if(
r
>=
w
) {

27 if(
t
>0&&
p
>0) ;

28 
w
 = 
	`ªad
(0,
ö
,512);

29 
r
 = 0;

30 if(
w
<=0) {

31 
	`°ash
(
p
);

35 
out
[
p
++] = 
ö
[
r
++];

37 
	`°ash
(
p
);

39 
	}
}

41 
	$°ash
(
p
)

43 
k
;

44 
i
;

45 
d
;

46 
d
 = 
t
 ? 10 : 
p
;

47 
i
=0; i<
p
; i=+
d
)

48 
k
=0;k<
n
;k++)

49 
	`wrôe
(
›í
[
k
], 
out
+
i
, 
d
<
p
-i?d:p-i);

50 
	}
}

	@usr/source/s2/tr.c

1 
	gdÊag
 0;

2 
	gsÊag
 0;

3 
	gcÊag
 0;

4 
	gßve
 0;

5 
	gcode
[256];

6 
	gsquìz
[256];

7 
	gve˘
[256];

8 
	s°rög
 { 
	mœ°
, 
	mmax
, 
	mªp
; *
	mp
; } 
	g°rög1
, 
	g°rög2
;

9 
	göbuf
[259];

11 
	$maö
(
¨gc
,
¨gv
)

12 **
¨gv
;

14 
i
, 
j
;

15 
c
, 
d
;

16 *
com∂
;

17 
fout
;

19 
°rög1
.
œ°
 = 
°rög2
.last = 0;

20 
°rög1
.
max
 = 
°rög2
.max = 0;

21 
°rög1
.
ªp
 = 
°rög2
.rep = 0;

22 
°rög1
.
p
 = 
°rög2
.p = "";

24 if(--
¨gc
>0) {

25 
¨gv
++;

26 if(*
¨gv
[0]=='-'&&argv[0][1]!=0) {

27 *++
¨gv
[0])

28 *
¨gv
[0]) {

30 
cÊag
++;

33 
dÊag
++;

36 
sÊag
++;

39 
¨gc
--;

40 
¨gv
++;

43 if(
¨gc
>0Ë
°rög1
.
p
 = 
¨gv
[0];

44 if(
¨gc
>1Ë
°rög2
.
p
 = 
¨gv
[1];

45 
i
=0; i<256; i++)

46 
code
[
i
] = 
ve˘
[i] = 0;

47 if(
cÊag
) {

48 
c
 = 
	`√xt
(&
°rög1
))

49 
ve˘
[
c
&0377] = 1;

50 
j
 = 0;

51 
i
=1; i<256; i++)

52 if(
ve˘
[
i
]==0Ëve˘[
j
++] = i;

53 
ve˘
[
j
] = 0;

54 
com∂
 = 
ve˘
;

56 
i
=0; i<256; i++)

57 
squìz
[
i
] = 0;

59 if(
cÊag
Ë
c
 = *
com∂
++;

60 
c
 = 
	`√xt
(&
°rög1
);

61 if(
c
==0) ;

62 
d
 = 
	`√xt
(&
°rög2
);

63 if(
d
==0Ëd = 
c
;

64 
code
[
c
&0377] = 
d
;

65 
squìz
[
d
&0377] = 1;

67 
d
 = 
	`√xt
(&
°rög2
))

68 
squìz
[
d
&0377] = 1;

69 
squìz
[0] = 1;

70 
i
=0;i<256;i++) {

71 if(
code
[
i
]==0) code[i] = i;

72 if(
dÊag
Ë
code
[
i
] = 0;

75 
öbuf
[0] = 0;

76 
fout
 = 
	`dup
(1);

77 
	`˛o£
(1);

78 (
c
=
	`gëc
(
öbuf
)) >=0 ) {

79 if(
c
 == 0) ;

80 if(
c
 = 
code
[c&0377]&0377)

81 if(!
sÊag
 || 
c
!=
ßve
 || !
squìz
[c&0377])

82 
	`putch¨
(
ßve
 = 
c
);

84 
	`Êush
();

85 
	}
}

87 
	$√xt
(
s
)

88 
°rög
 *
s
;

90 
a
, 
b
, 
c
, 
n
;

91 
ba£
;

93 if(--
s
->
ªp
 > 0Ë(s->
œ°
);

94 if(
s
->
œ°
 < s->
max
) (++s->last);

95 if(*
s
->
p
=='[') {

96 
	`√xtc
(
s
);

97 
s
->
œ°
 = 
a
 = 
	`√xtc
(s);

98 
s
->
max
 = 0;

99 
	`√xtc
(
s
)) {

101 
b
 = 
	`√xtc
(
s
);

102 if(
b
<
a
 || *
s
->
p
++!=']')

103 
îr‹
;

104 
s
->
max
 = 
b
;

105 (
a
);

107 
ba£
 = (*
s
->
p
=='0')?8:10;

108 
n
 = 0;

109 (
c
 = *
s
->
p
)>='0' && c<'0'+
ba£
) {

110 
n
 = 
ba£
*¿+ 
c
 - '0';

111 
s
->
p
++;

113 if(*
s
->
p
++!=']'Ë
îr‹
;

114 if(
n
==0)Ç = 1000;

115 
s
->
ªp
 = 
n
;

116 (
a
);

118 
îr‹
:

119 
	`wrôe
(1,"Bad string\n",11);

120 
	`exô
();

123 (
	`√xtc
(
s
));

124 
	}
}

126 
	$√xtc
(
s
)

127 
°rög
 *
s
;

129 
c
, 
i
, 
n
;

131 
c
 = *
s
->
p
++;

132 if(
c
=='\\') {

133 
i
 = 
n
 = 0;

134 
i
<3 && (
c
 = *
s
->
p
)>='0' && c<='7') {

135 
n
 =Ç*8 + 
c
 - '0';

136 
i
++;

137 
s
->
p
++;

139 if(
i
>0Ë
c
 = 
n
;

140 
c
 = *
s
->
p
++;

142 if(
c
==0Ë*--
s
->
p
 = 0;

143 (
c
&0377);

144 
	}
}

	@usr/source/s2/typo.c

1 
	~"pöhód.h
"

2 
	gsqÊg
 0;

3 
	g¢
 -1;

4 
	ghﬁe
[26];

5 
	gnumbî
[3];

6 
	geÊg
;

7 
	gw2006
[100];

8 
	gÊg
 0;

9 
	gªÆwd
[100];

10 *
	gwd
 {&
	gªÆwd
[1]};

11 *
	gÂå
;

12 *
	gfÂå
 &
	gffbuf
;

13 
	gffbuf
[36];

14 
	g√ng
;

15 
	g≈r
;

16 
	gèbÀ
[2];

17 
	gèb1
[26];

18 
	gèb2
[730];

19 
	gèb3
[19684];

20 
	glogèb
[256];

21 
	gö˘ab
[256];

22 
	gnwd
[100];

23 
	gtŸ
;

24 
	gwtŸ
;

25 *
	gbuf
[3];

26 
	gfûe
[3];

27 
	g±r
[3];

28 *
	g«me
[3];

29 
	gb•
[768];

31 
	$maö
(
¨gc
,
¨gv
) argc; *argv[]; {

32 
Àt
,
…
;

33 autÿ
¨g
,
t
,
sw
,
i
,
j
,
ß…
,
î
,
c
;

34 
k
,
l
,
m
;

35 
junk
;

36 
	`u∆
();

37 
ii
;

38 
	`log
(), 
	`exp
(), 
	`pow
();

40 
	`ni˚
(-20);

41 
ö˘ab
[0] = 1;

42 
logèb
[0] = -10;

43 
ii
=1; ii<256; ii++){

44 
ö˘ab
[
ii
] = 
	`exp
(-ii/30.497);

45 
logèb
[
ii
] = 
	`log
(30.*
	`pow
(1.0333,ii+0.) - 30.) + .5;

47 
logèb
[1] = -10;

49 
numbî
[2] = ' ';

50 
buf
[0] = 
b•
;

51 
buf
[1] = 
b•
 + 0400;

52 
buf
[2] = 
b•
 + 01000;

53 
±r
[0] = 0;Ötr[1] = 0;

54 
±r
[2] = 1;

55 
¨g
 = 1;

56 
¨gc
>1 && 
¨gv
[
¨g
][0] == '-') {

57 
¨gv
[
¨g
][1]) {

59 
	`¥ötf
("UƒecognizabÀárgumít: %c\n",
¨gv
[
¨g
][1]);

60 
	`exô
();

63 
√ng
++;

66 
≈r
++;

68 
¨g
++;

69 --
¨gc
;

71 if(!
√ng
) {

72 
ß…
 = 
	`›í
("/usr/lib/salt",0);

73 
î
 = 
	`ªad
(
ß…
,
èbÀ
,21200);

74 if(
î
 !21200)
	`îr
("read salt");

75 
	`˛o£
(
ß…
);

77 if((
	`sig«l
(2,1) & 1) != 1)

78 
	`sig«l
(2,
u∆
);

79 
«me
[0] = "/usr/tmp/ttmpa1";

80 
«me
[1] = "/usr/tmp/ttmpa2";

81 
«me
[2] = "/usr/tmp/ttmpa3";

82 (
fûe
[0] = 
	`›í
(
«me
[0],1)) > 0){

83 
	`˛o£
(
fûe
[0]);

84 
j
=0; j < 3; j++)
«me
[j][13]++;

85 if(
«me
[0][13] ='z')
	`îr
("creatÅmp file");

87 
fûe
[0] = 
	`¸ót
(
«me
[0],0666);

88 
Âå
 = 
¨gv
[
¨g
];

89 if(
¨gc
 =1Ë{¨g¯2; 
¨g
 = 0;}

90 --
¨gc
){

91 if(
¨g
 == 0){

92 
fûe
[2] = 0;

94 
fûe
[2] = 
	`›í
(
¨gv
[
¨g
++],0);

95 if(
fûe
[2] < 0)
	`îr
("open input file");

97 
eÊg
 = 1;

98 (
j
 = 
	`wdvÆ
(2)) != 0){

99 
	`put
(0,
nwd
,
j
);

100 
k
 = -1;

101 
l
 = 0;

102 
m
 = 1;

103 if(
ö˘ab
[
èbÀ
[0]] > (
junk
=
	`ønd
()/32768.))Åable[0]++;

104 
m
 <
j
){

105 
c
 = 27*
wd
[
k
++] + wd[
l
++];

106 if(
ö˘ab
[
èb2
[
c
]] > 
junk
)Åab2[c]++;

107 
c
 = 27*¯+ 
wd
[
m
++];

108 if(
ö˘ab
[
èb3
[
c
]] > 
junk
)Åab3[c]++;

110 
c
 = 27*
wd
[
k
] + wd[
l
];

111 if(
ö˘ab
[
èb2
[
c
]] > 
junk
)Åab2[c]++;

113 if(
fûe
[2]Ë
	`˛o£
(file[2]);

115 
	`Êsh
(0,0);

116 
	`˛o£
(
fûe
[0]);

117 
sw
 = 
	`f‹k
();

118 if(
sw
 =0){
	`exe˛
("/u§/bö/us‹t","us‹t","-o",
«me
[2],name[0],0);

119 
	`îr
("sort"); }

120 if(
sw
 < 0)
	`îr
("fork");

121 
î
 = 
	`waô
();

122 if(
î
 !
sw
)
	`îr
("probs");

123 
fûe
[0] = 
	`¸ót
(
«me
[0],0666);

124 if(
fûe
[0] < 0)
	`îr
("creatÅmp");

125 
fûe
[1] = 
	`›í
("/usr/lib/sq2006",0);

126 if(
fûe
[1] < 0)
	`îr
("open w2006");

127 
±r
[1] = 1;

128 
j
 = 
	`gësq
(1);

129 
fûe
[2] = 
	`›í
(
«me
[2],0);

130 if(
fûe
[2] < 0)
	`îr
("openÅmp");

131 
±r
[2] = 1;

133 
±r
[2]){

134 
l
=0;

135 
k
=0;((
c
 = 
wd
[k] = 
	`gë
(2)) != '\n');k++)

136 if(
c
 =-1)
d⁄e
;

137 
i
=0; i<=
k
;i++){

138 if(
wd
[
i
] < 
w2006
[
l
]){

139 
	`put
(0,
wd
,
k
);

142 if(
wd
[
i
] > 
w2006
[
l
]){

143 
l
 = 
	`gësq
(1);

144 if(
l
 == -1){

145 
	`put
(0,
wd
,
k
);

146 
k
=0;((
c
 = 
wd
[k] =
	`gë
(2))!= -1);k++){

147 
	`put
(0,
wd
,
k
);

148 
k
 = -1;

150 
d⁄e
;

152 
i
 = -1;

153 
l
=0;

156 
l
++;

159 
d⁄e
:

160 
	`˛o£
(
fûe
[2]);

161 
	`u∆ök
(
«me
[2]);

162 
	`Êsh
(0,0);

163 
	`˛o£
(
fûe
[1]);

164 
	`˛o£
(
fûe
[0]);

165 
±r
[1] = 1;

166 
fûe
[1] = 
	`›í
(
«me
[0],0);

167 if(
fûe
[1] < 0)
	`îr
("openÅmp ");

168 
fûe
[0] = 
	`¸ót
(
«me
[1],0666);

169 if(
fûe
[0] < 0)
	`îr
("createÅmp");

170 (
j
 = 
	`nwdvÆ
(1)) != 0){

171 
wtŸ
 = 0;

172 
Êg
 = 0;

173 
k
 = -1; 
l
 = 0; 
m
 = 1;

174 
m
 <
j
){

175 
tŸ
 = 0;

176 
c
 = 
wd
[
k
++]*27 + wd[
l
++];

177 
tŸ
 =+ (
logèb
[
èb2
[
c
]]+logèb[èb2[
wd
[
k
]*27+wd[
l
]]]);

178 
tŸ
 =>> 1;

179 
c
 = c*27 + 
wd
[
m
++];

180 
tŸ
 =- 
logèb
[
èb3
[
c
] & 0377];

181 if(
tŸ
 > 
wtŸ
) wtot =Åot;

183 if(
wtŸ
 < 0) wtot = 0;

184 
t
 = 
	`c⁄f
(
wtŸ
,2,
numbî
);

185 
	`put
(0,
numbî
,2);

186 
	`put
(0,
nwd
,
j
);

188 
	`Êsh
(0,0);

189 
	`˛o£
(
fûe
[1]);

190 
	`˛o£
(
fûe
[0]);

192 
sw
 = 
	`f‹k
();

193 if(
sw
 =0){
	`exe˛
("/bö/s‹t","s‹t","+0ƒ", "+1","-o",
«me
[1],name[1]

195 
	`îr
("sort"); }

196 if(
sw
 < 0)
	`îr
("fork");

197 
î
 = 
	`waô
();

198 if(
î
 !
sw
)
	`îr
("prob");

200 
sw
 = 
	`f‹k
();

201 if(
sw
 == 0){

202 if(
≈r
) {

203 
	`exe˛
("/bö/ˇt","ˇt",
«me
[1],0);

205 
i
 = 0 ;

206 (
c
 = "PossibÀÅypo'†ö "[
i
++])!=0)

207 *
fÂå
++ = 
c
;

208 
i
 = 0;

209 (
c
 = 
Âå
[
i
++]) != 0)

210 *
fÂå
++ = 
c
;

211 *
fÂå
 = 0;

212 
	`exe˛
("/bin/pr","pr","-3", "-h",

213 
ffbuf
,
«me
[1],0);

214 
	`îr
("pr");

217 if(
sw
 < 0)
	`îr
("fork");

218 
î
 = 
	`waô
();

219 if(
î
 !
sw
)
	`îr
("prob");

220 
	`u∆
();

221 
	}
}

223 
	$u∆
() {

224 
j
;

225 
j
 = 2;

226 
j
--)
	`u∆ök
(
«me
[j]);

227 
	`exô
();

228 
	}
}

231 
	$îr
(
c
) c[];{

232 
j
;

233 
	`¥ötf
("ˇ¬Ÿ %s\n",
c
);

234 
	`u∆
();

235 
	}
}

237 
	$gë
(
ifûe
) ifile;{

238 *
ibuf
[10];

239 if(--
±r
[
ifûe
]){

240 (*
ibuf
[
ifûe
]++ & 0377);}

241 if(
±r
[
ifûe
] = 
	`ªad
(
fûe
[ifûe],
buf
[ifile],512)){

242 if(
±r
[
ifûe
] < 0)
¥ob
;

243 
ibuf
[
ifûe
] = 
buf
[ifile];

244 (*
ibuf
[
ifûe
]++ & 0377);

246 
±r
[
ifûe
] = 1;

249 
¥ob
:

250 
±r
[
ifûe
] = 1;

251 
	`¥ötf
("readÉrror\n");

253 
	}
}

255 
	$put
(
ofûe
,
s
,
›å
) s[]; {

256 
i
;

258 
›å
-- >= 0)

259 
buf
[
ofûe
][(
±r
[ofûe] < 512)?±r[ofûe]++:
	`Êsh
(ofûe,1)] = *
s
++;

261 
	}
}

263 
	$Êsh
(
ofûe
,
i
){

264 
îr‹
;

265 
îr‹
 = 
	`wrôe
(
fûe
[
ofûe
],
buf
[ofûe],
±r
[ofile]);

266 if(
îr‹
 < 0)
¥ob
;

268 
±r
[
ofûe
] = 
i
;

270 
¥ob
:

271 
	`¥ötf
("wrôêîr‹ o¿t.%d\n",
fûe
[
ofûe
]);

272 
	`u∆
();

273 
	}
}

275 
	$wdvÆ
(
wfûe
) wfile; {

276 
Àt
,
wÊg
;

277 
j
;

278 
beg
:

279 
j
 = -1;

280 if(
wÊg
 == 1){wflg = 0;

281 
°
; }

282 (
Àt
 = 
	`gë
(
wfûe
)) != '\n'){

283 
°
:

284 
Àt
){

286 '%': if(
j
 != -1);

287 
ªt
;

289 if((
Àt
 = 
	`gë
(
wfûe
)) == '\n'){

290 (
Àt
 = 
	`gë
(
wfûe
)) == '\n')if(let == -1)(0);

291 
°
; }

292 {
wÊg
 = 1;

293 
ªt
; }

295 if(
eÊg
 != 1){

296 if(
j
 < 1)
beg
;

300 if(
eÊg
 == 1){

301 (
Àt
 = 
	`gë
(
wfûe
)) != '\n')if(let == -1)(0);

302 
°
; }

303 
ªt
;

305 
eÊg
 = 0;

306 if(
Àt
 < 'A')
ªt
;

307 if(
Àt
 <'Z'){ 
wd
[++
j
] =Üet - 0100;

308 
nwd
[
j
] = 
Àt
 + ' ';

310 if(
Àt
 < 'a' ||Üë > 'z')
ªt
;

311 
wd
[++
j
] = 
Àt
 - 0140;

312 
nwd
[
j
] = 
Àt
;

314 
eÊg
 = 0; }

316 
eÊg
 = 1;

317 
wÊg
 = 1;

318 
ªt
:

319 if(
j
 < 1)
beg
;

320 
nwd
[++
j
] = '\n';

321 
wd
[
j
] = 0;

322 (
j
);

323 
	}
}

325 
	$nwdvÆ
(
wfûe
) wfile;{

326 
j
;

327 
c
;

328 
j
 = -1;

330 if(–
c
 = 
nwd
[++
j
] = 
	`gë
(
wfûe
)) == -1)(0);

331 
wd
[
j
] = 
c
 - 0140;

333 
c
 != '\n');

334 
wd
[
j
] = '\0';

335 (
j
);

336 
	}
}

337 
	$c⁄f
(
n
,
width
,
cbuf
) cbuf[]; {

338 
i
,
a
;

340 
i
 = 
width
;

341 
i
--)
cbuf
[i] = ' ';

343 
cbuf
[(
a
 = 
n
/10)?
	`c⁄f
◊,--
width
,cbuf):--width] =Ç%10 + '0';

345 (++
width
);

346 
	}
}

347 
	$ønd
(){

348 
g‹p
;

349 
g‹p
 = (gorp + 625) & 077777;

350 (
g‹p
);

351 
	}
}

353 
	$gësq
(
ifûe
) ifile;

355 *
p
, *
˝
;

356 
c
;

357 
n
, 
f
;

359 if(
sqÊg
 == 0){

360 
c
=7; c<16; c++)

361 
hﬁe
[
nib
[
c
]-'a'] = c+64-1+26;

362 
n
=0; 
˝
=
su·ab
[n];Ç++) {

363 
p
 = 
w2006
;

364 *
p
++ = *
˝
++)

366 
p
--;

367 
˝
 = 
su·ab
[
n
];

368 
p
 > 
w2006
)

369 *
˝
++ = *--
p
;

371 
sqÊg
 = 1;

374 
cou¡
:

375 
f
 = 0;

376 if((
c
 = 
	`gën
(
ifûe
)) < 0)(-1);

377 if(
c
 < 10) {

378 if(
c
 == 9) {

379 if((
c
 = 
	`gën
(
ifûe
)) < 0)(-1);

380 if(
c
 > 2)

381 
c
 =+ 9;

383 
c
 =+ 3;

385 
f
++;

386 if(
c
 == 15) {

387 if((
c
 = 
	`gën
(
ifûe
)) < 0)(-1);

388 if(
c
 > 2)

389 
c
 =+ 5;

391 
c
 =- 7;

393 
p
 = 
w2006
+
c
;

395 
chr
:

396 if((
c
 = 
	`gën
(
ifûe
)) < 0)(-1);

397 
n
 = 
nib
[
c
];

398 if(
n
) {

399 if(
n
 == '\n')

400 
out
;

401 *
p
++ = 
n
;

402 
chr
;

404 
c
 = c*16 + 
	`gën
(
ifûe
);

405 if(
c
 < 26) {

406 if(
hﬁe
[
c
] == 0) {

407 *
p
++ = 
c
+'a';

408 
chr
;

410 
c
 = 
hﬁe
[c];

412 
˝
 = 
su·ab
[
c
-26];

413 *
˝
)

414 *
p
++ = *
˝
++;

416 
out
:

417 
w2006
[0] =| 040;

418 if(
f
)

419 
w2006
[0] =& ~040;

420 *
p
++ = '\n';

422 
	}
}

424 
	$gën
(
ifûe
) ifile;

426 
c
;

428 
c
 = 
¢
;

429 if(
c
 < 0) {

430 
c
 = 
	`gë
(
ifûe
);

431 if(
c
 == -1) (-1);

432 
¢
 = 
c
 >> 4;

433 (
c
&017);

435 
¢
 = -1;

436 (
c
);

437 
	}
}

	@usr/source/s2/umount.c

1 
	#NMOUNT
 16

	)

2 
	#NAMSIZ
 32

	)

4 
	smèb
 {

5 
	mfûe
[
NAMSIZ
];

6 
	m•ec
[
NAMSIZ
];

7 } 
	gmèb
[
NMOUNT
];

9 
	$maö
(
¨gc
, 
¨gv
)

10 **
¨gv
;

12 
mèb
 *
mp
;

13 *
p1
, *
p2
;

14 
mf
;

16 
mf
 = 
	`›í
("/etc/mtab", 0);

17 
	`ªad
(
mf
, 
mèb
, 
NMOUNT
*2*
NAMSIZ
);

18 if(
¨gc
 != 2) {

19 
	`¥ötf
("arg count\n");

22 i‡(
	`umou¡
(
¨gv
[1]) < 0) {

23 
	`≥º‹
("umount");

26 
p1
 = 
¨gv
[1];

27 *
p1
++)

29 
p1
--;

30 *--
p1
 == '/')

31 *
p1
 = '\0';

32 
p1
 > 
¨gv
[1] && *--p1 != '/')

34 if(*
p1
 == '/')

35 
p1
++;

36 
¨gv
[1] = 
p1
;

37 
mp
 = 
mèb
; m∞< &mèb[
NMOUNT
]; mp++) {

38 
p1
 = 
¨gv
[1];

39 
p2
 = &
mp
->
•ec
[0];

40 *
p1
++ =*
p2
)

41 i‡(*
p2
++ == 0) {

42 
p1
 = 
mp
->
fûe
;Ö1 < &mp->fûe[
NAMSIZ
*2];)

43 *
p1
++ = 0;

44 
mp
 = &
mèb
[
NMOUNT
];

45 (--
mp
)->
fûe
[0] == 0);

46 
mf
 = 
	`¸ót
("/etc/mtab", 0644);

47 
	`wrôe
(
mf
, 
mèb
, (
mp
-mèb+1)*2*
NAMSIZ
);

51 
	`¥ötf
("%†nŸ i¿mou¡ÅabÀ\n", 
¨gv
[1]);

52 
	}
}

	@usr/source/s2/uniq.c

1 
	gfõlds
 0;

2 
	gÀâîs
 0;

3 
	glöec
;

4 
	gmode
;

5 
	guniq
;

7 
	$maö
(
¨gc
, 
¨gv
)

8 
¨gc
;

9 *
¨gv
[];

11 
fö
, 
fout
;

12 
f
;

13 
b1
[1000], 
b2
[1000];

15 
lo›
:

16 if(
¨gc
 > 1) {

17 if(*
¨gv
[1] == '-') {

18 if(
¨gv
[1][1] <= '9')

19 
fõlds
 = 
	`c⁄v
(&
¨gv
[1][1]);

20 
mode
 = 
¨gv
[1][1];

21 
¨gc
--;

22 
¨gv
++;

23 
lo›
;

25 if(*
¨gv
[1] == '+') {

26 
Àâîs
 = 
	`c⁄v
(&
¨gv
[1][1]);

27 
¨gc
--;

28 
¨gv
++;

29 
lo›
;

31 
f
 = 
	`›í
(
¨gv
[1], 0);

32 if(
f
 < 0) {

33 
	`¥ötf
("ˇ¬Ÿ o≥¿%s\n", 
¨gv
[1]);

34 
	`exô
();

36 
fö
 = 
f
;

38 
fö
 = 
	`dup
(0);

39 if(
¨gc
 > 2) {

40 
f
 = 
	`¸ót
(
¨gv
[2], 0666);

41 if(
f
 < 0) {

42 
	`¥ötf
("ˇ¬Ÿ cª©ê%s\n", 
¨gv
[2]);

43 
	`exô
();

45 
fout
 = 
f
;

47 
fout
 = 
	`dup
(1);

48 
	`˛o£
(0);

49 
	`˛o£
(1);

50 
	`glöe
(
b1
);

51 
l1
:

52 
löec
++;

53 if(
	`glöe
(
b2
)) {

54 
	`∂öe
(
b1
);

55 
	`Êush
();

56 
	`exô
();

58 if(
	`equÆ
(
b1
, 
b2
)Ë
l1
;

59 
	`∂öe
(
b1
);

60 
löec
 = 0;

61 
l2
:

62 
löec
++;

63 if(
	`glöe
(
b1
)) {

64 
	`∂öe
(
b2
);

65 
	`Êush
();

66 
	`exô
();

68 if(
	`equÆ
(
b1
, 
b2
)Ë
l2
;

69 
	`∂öe
(
b2
);

70 
löec
 = 0;

71 
l1
;

72 
	}
}

74 
	$glöe
(
buf
)

75 
buf
[];

77 
c
;

79 (
c
 = 
	`gëch¨
()) != '\n') {

80 if(
c
 == '\0')

82 *
buf
++ = 
c
;

84 *
buf
 = 0;

86 
	}
}

88 
	$∂öe
(
buf
)

89 
buf
[];

91 
c
;

93 
mode
) {

96 if(
uniq
) {;

97 
uniq
 = 0;

103 if(
uniq
) ;

107 
	`¥ötf
("%4d ", 
löec
);

109 
uniq
 = 0;

110 (
c
 = *
buf
++) != 0)

111 
	`putch¨
(
c
);

112 
	`putch¨
('\n');

113 
	}
}

115 
	$equÆ
(
b1
, 
b2
)

116 
b1
[], 
b2
[];

118 
c
;

120 
b1
 = 
	`skù
(b1);

121 
b2
 = 
	`skù
(b2);

122 (
c
 = *
b1
++) != 0)

123 if(
c
 !*
b2
++) (0);

124 if(*
b2
 != 0)

126 
uniq
++;

128 
	}
}

131 
	$skù
(
s
)

132 *
s
;

134 
nf
, 
∆
;

136 
nf
 = 
∆
 = 0;

137 
nf
++ < 
fõlds
) {

138 *
s
==' ' || *s=='\t')

139 
s
++;

140  !(*
s
==' ' || *s=='\t') )

141 if(*
s
 == 0) (s);

142 
s
++;

144 
∆
++ < 
Àâîs
)

145 if(*
s
 == 0) (s);

146 
s
++;

147 (
s
);

148 
	}
}

150 
	$c⁄v
(
s
)

151 *
s
;

153 
d
, 
n
;

155 
n
 = 0;

157 
d
 = *
s
++ - '0';

158 if(0>
d
 || d>9) ;

159 
n
 =Ç*10 + 
d
;

161 (
n
);

162 
	}
}

	@usr/source/s2/wc.c

3 
	gbuf
[518];

4 
	gw‹d˘
[2];

5 
	glöe˘
[2];

7 
	$maö
(
¨gc
,
¨gv
)

8 **
¨gv
;

10 
i
;

11 
c
;

12 
tokí
;

14 
i
 = 1;

16 if(
¨gc
<=1Ë
buf
[0] = 0;

17 if(
	`f›í
(
¨gv
[
i
],
buf
)<0) {

18 
	`düg
(
¨gv
[
i
]);

19 
	`düg
(": cannot open\n");

22 
löe˘
[0] =Üinect[1] = 0;

23 
w‹d˘
[0] = wordct[1] = 0;

24 
tokí
 = 0;

25 (
c
=
	`gëc
(
buf
))>=0) {

26 if(' '<
c
&&c<0177) {

27 if(!
tokí
++) {

28 if(++
w‹d˘
[0]==0)

29 
w‹d˘
[1]++;

32 if(
c
=='\n') {

33 if(++
löe˘
[0]==0)

34 
löe˘
[1]++;

36 if(
c
!=' '&&c!='\t')

38 
tokí
 = 0;

41 
	`¥ötf
("%7†",
	`locv
(
löe˘
[1],linect[0]));

42 
	`¥ötf
("%7†",
	`locv
(
w‹d˘
[1],wordct[0]));

43 
	`¥ötf
("%s\n", 
¨gc
<=1?"":
¨gv
[
i
]);

44 
	`˛o£
(
buf
[0]);

45 } ++
i
<
¨gc
);

46 
	}
}

48 
	$düg
(
s
)

49 *
s
;

51 *
s
)

52 
	`wrôe
(2,
s
++,1);

53 
	}
}

	@usr/source/s2/who.c

5 
	gfout
;

6 
	gbuf
[256];

8 
	$maö
(
¨gc
, 
¨gv
)

9 **
¨gv
;

11 *
s
, *
cbuf
;

12 
n
, 
fi
, 
i
;

14 
«me
[8];

15 
ây
;

16 
∑d1
;

17 
time
[2];

18 
∑d2
[2];

19 } *
p
;

21 
s
 = "/etc/utmp";

22 if(
¨gc
 > 1)

23 
s
 = 
¨gv
[1];

24 
fi
 = 
	`›í
(
s
, 0);

25 if(
fi
 < 0) {

26 
	`wrôe
("cannot open wtmp\n", 17);

27 
	`exô
();

29 
fout
 = 
	`dup
(1);

30 
	`˛o£
(1);

32 
lo›
:

33 
n
 = 
	`ªad
(
fi
, 
buf
, 512);

34 if(
n
 == 0) {

35 
	`Êush
();

36 
	`exô
();

39 
p
 = &
buf
;

40 
p
 = &
buf
; (
n
 =- 16)>=0;Ö++) {

41 if(
p
->
«me
[0] ='\0' && 
¨gc
==1)

43 
i
=0; i<8; i++) {

44 if(
p
->
«me
[
i
] == '\0')

45 
p
->
«me
[
i
] = ' ';

46 
	`putch¨
(
p
->
«me
[
i
]);

48 
i
=0; i<3; i++)

49 
	`putch¨
("ây"[
i
]);

50 
	`putch¨
(
p
->
ây
);

51 
cbuf
 = 
	`˘ime
(
p
->
time
);

52 
i
=3; i<16; i++)

53 
	`putch¨
(
cbuf
[
i
]);

54 
	`putch¨
('\n');

56 
lo›
;

57 
	}
}

	@usr/source/s3/ctime.c

42 
	gcbuf
[26];

43 
	gdmsize
[12]

59 
	gtimez⁄e
 5*60*60;

60 
	gtz«me
[]

65 
	gdaylight
 1;

66 
	gnix⁄Êg
 0;

68 
	#SEC
 0

	)

69 
	#MIN
 1

	)

70 
	#HOUR
 2

	)

71 
	#MDAY
 3

	)

72 
	#MON
 4

	)

73 
	#YEAR
 5

	)

74 
	#WDAY
 6

	)

75 
	#YDAY
 7

	)

76 
	#ISDAY
 8

	)

78 
	$˘ime
(
©
)

79 *
©
;

81 (
	`as˘ime
(
	`loˇ…ime
(
©
)));

82 
	}
}

84 
	$loˇ…ime
(
tim
)

85 
tim
[];

87 *
t
, *
˘
, 
dayno
;

88 
daylbegö
, 
dayÀnd
;

89 
c›yt
[2];

91 
t
 = 
c›yt
;

92 
t
[0] = 
tim
[0];

93 
t
[1] = 
tim
[1];

94 
	`d∑dd
(
t
, -
timez⁄e
);

95 
˘
 = 
	`gmtime
(
t
);

96 
dayno
 = 
˘
[
YDAY
];

97 i‡(
nix⁄Êg
 && (
˘
[
YEAR
]>74 || ct[YEAR]==74 && (
dayno
 > 5 ||

98 
dayno
==5 && 
˘
[
HOUR
]>=2))) {

99 
daylight
 =| 1;

100 
daylbegö
 = -1;

101 
dayÀnd
 = 367;

103 
daylbegö
 = 
	`sunday
(
˘
, 119);

104 
dayÀnd
 = 
	`sunday
(
˘
, 303);

106 i‡(
daylight
 &&

107 (
dayno
>
daylbegö
 || (dayno==daylbegö && 
˘
[
HOUR
]>=2)) &&

108 (
dayno
<
dayÀnd
 || (dayno==dayÀnd && 
˘
[
HOUR
]<1))) {

109 
	`d∑dd
(
t
, 1*60*60);

110 
˘
 = 
	`gmtime
(
t
);

111 
˘
[
ISDAY
]++;

113 (
˘
);

114 
	}
}

116 
	$sunday
(
©
, 
ad
)

117 *
©
;

119 *
t
, 
d
;

121 
t
 = 
©
;

122 
d
 = 
ad
;

123 
d
 = 
ad
 + 
	`dysize
(
t
[
YEAR
]) - 365;

124 (
d
 - (d - 
t
[
YDAY
] +Å[
WDAY
] + 700) % 7);

125 
	}
}

127 
	$gmtime
(
tim
)

128 
tim
[];

130 
d0
, 
d1
;

131 *
ç
;

132 
xtime
[9];

133 
ldivr
;

141 
d0
 = 
	`ldiv
(
tim
[0],Åim[1], 28800);

142 
d1
 = 
ldivr
;

143 
ç
 = &
xtime
[0];

149 *
ç
++ = 
d1
%60;

150 
d1
 =/ 60;

151 *
ç
++ = 
d1
%60;

152 
d1
 =/ 60;

153 
d1
 =+ (
d0
%3)*8;

154 
d0
 =/ 3;

155 *
ç
++ = 
d1
;

162 
xtime
[
WDAY
] = (
d0
+4)%7;

167 
d1
=70; 
d0
 >
	`dysize
(d1); d1++)

168 
d0
 =- 
	`dysize
(
d1
);

169 
xtime
[
YEAR
] = 
d1
;

170 
xtime
[
YDAY
] = 
d0
;

176 i‡(
	`dysize
(
d1
)==366)

177 
dmsize
[1] = 29;

178 
d1
=0; 
d0
 >
dmsize
[d1]; d1++)

179 
d0
 =- 
dmsize
[
d1
];

180 
dmsize
[1] = 28;

181 *
ç
++ = 
d0
+1;

182 *
ç
++ = 
d1
;

183 
xtime
[
ISDAY
] = 0;

184 (
xtime
);

185 
	}
}

187 
	$as˘ime
(
t
)

188 *
t
;

190 *
˝
, *
n˝
;

191 *
ç
;

193 
˝
 = 
cbuf
;

194 
n˝
 = "Day M⁄ 00 00:00:00 1900\n"; *
˝
++ = *ncp++;);

195 
n˝
 = &"SunM⁄TueWedThuFriS©"[3*
t
[6]];

196 
˝
 = 
cbuf
;

197 *
˝
++ = *
n˝
++;

198 *
˝
++ = *
n˝
++;

199 *
˝
++ = *
n˝
++;

200 
˝
++;

201 
ç
 = &
t
[4];

202 
n˝
 = &"J™FebM¨A¥MayJunJulAugSïO˘NovDec"[(*
ç
)*3];

203 *
˝
++ = *
n˝
++;

204 *
˝
++ = *
n˝
++;

205 *
˝
++ = *
n˝
++;

206 
˝
 = 
	`numb
(˝, *--
ç
);

207 
˝
 = 
	`numb
(˝, *--
ç
+100);

208 
˝
 = 
	`numb
(˝, *--
ç
+100);

209 
˝
 = 
	`numb
(˝, *--
ç
+100);

210 
˝
 =+ 2;

211 
˝
 = 
	`numb
(˝, 
t
[
YEAR
]);

212 (
cbuf
);

213 
	}
}

215 
	$dysize
(
y
)

217 if((
y
%4) == 0)

220 
	}
}

222 
	$numb
(
a˝
, 
n
)

224 *
˝
;

226 
˝
 = 
a˝
;

227 
˝
++;

228 i‡(
n
>=10)

229 *
˝
++ = (
n
/10)%10 + '0';

231 *
˝
++ = ' ';

232 *
˝
++ = 
n
%10 + '0';

233 (
˝
);

234 
	}
}

	@usr/source/s4/errlst.c

1 
	gsys_√º
 31;

2 *
	gsys_îæi°
[] {

	@usr/source/s4/getpw.c

1 
	$gëpw
(
uid
, 
buf
)

2 
uid
;

3 
buf
[];

5 autÿ
pbuf
[259];

6 
pwf
;

7 
n
, 
c
;

8 *
bp
;

10 if(
pwf
 == 0) {

11 
	`f›í
("/ëc/∑sswd", 
pbuf
);

12 
pwf
 = 
pbuf
[0];

14 
pbuf
[0] = 
pwf
;

15 if(
pwf
 < 0)

17 
	`£ek
(
pwf
, 0, 0);

18 
pbuf
[1] = 0;

19 
pbuf
[2] = 0;

22 
bp
 = 
buf
;

23 (
c
=
	`gëc
(
pbuf
)) != '\n') {

24 if(
c
 == '\0')

26 *
bp
++ = 
c
;

28 *
bp
++ = '\0';

29 
bp
 = 
buf
;

30 
n
 = 3;

31 --
n
)

32 (
c
 = *
bp
++) != ':')

33 if(
c
 == '\n')

35 (
c
 = *
bp
++) != ':') {

36 if(
c
<'0' || c>'9')

38 
n
 =Ç*10+
c
-'0';

40 if(
n
 =
uid
)

44 
	}
}

	@usr/source/s4/mon.c

1 
	$m⁄ô‹
(
lowpc
, 
highpc
, 
buf
, 
bufsiz
, 
˙tsiz
)

2 *
lowpc
, *
highpc
;

3 *
buf
, 
bufsiz
;

5 *
o
;

6 *
sbuf
, 
ssiz
;

8 i‡(
lowpc
 == 0) {

9 
	`¥ofû
(0, 0, 0, 0);

10 
o
 = 
	`¸ót
("mon.out", 0666);

11 
	`wrôe
(
o
, 
sbuf
, 
ssiz
<<1);

12 
	`˛o£
(
o
);

15 i‡(
	`«rgs
() <= 4)

16 
˙tsiz
 = 0;

17 
ssiz
 = 
bufsiz
;

18 
buf
[0] = 
lowpc
;

19 
buf
[1] = 
highpc
;

20 
buf
[2] = 
˙tsiz
;

21 
sbuf
 = 
buf
;

22 
buf
 =+ 3*(
˙tsiz
+1);

23 
bufsiz
 =- 3*(
˙tsiz
+1);

24 i‡(
bufsiz
<=0)

26 
o
 = ((
highpc
 - 
lowpc
)>>1) & 077777;

27 if(
bufsiz
 < 
o
)

28 
o
 = 
	`ldiv
(
bufsiz
, 0, o<<1); 

29 
o
 = 077777;

30 
	`¥ofû
(
buf
, 
bufsiz
<<1, 
lowpc
, 
o
<<1);

31 
	}
}

	@usr/source/s4/perror.c

1 
	gî∫o
;

2 
	gsys_√º
;

3 *
	gsys_îæi°
[];

4 
	$≥º‹
(
s
)

5 *
s
;

7 *
c
;

9 
c
 = "UnknownÉrror";

10 if(
î∫o
 < 
sys_√º
)

11 
c
 = 
sys_îæi°
[
î∫o
];

12 if(*
s
 == '\0')

13 
	`¥ötf
("%s", 
c
); 

14 
	`¥ötf
("%s: %s\n", 
s
, 
c
);

15 
	}
}

	@usr/source/s4/qsort.c

2 (*
	gqscmp
)();

3 
	gq£s
;

5 
	$qs‹t
(
a
, 
n
, 
es
, 
fc
)

6 *
a
;

7 
n
, 
es
;

8 (*
fc
)();

10 
qscmp
 = 
fc
;

11 
q£s
 = 
es
;

12 
	`qs1
(
a
,á+
n
*
es
);

13 
	}
}

15 
	$qs1
(
a
, 
l
)

16 *
a
, *
l
;

18 *
i
, *
j
, *
es
;

19 *
Õ
, *
hp
;

20 
n
, 
c
;

23 
es
 = 
q£s
;

25 
°¨t
:

26 if((
n
=
l
-
a
Ë<
es
)

30 
n
 = (“/(2*
es
))*es) & 077777;

31 
hp
 = 
Õ
 = 
a
+
n
;

32 
i
 = 
a
;

33 
j
 = 
l
-
es
;

37 if(
i
 < 
Õ
) {

38 if((
c
 = (*
qscmp
)(
i
, 
Õ
)) == 0) {

39 
	`q£xc
(
i
, 
Õ
 =- 
es
);

42 if(
c
 < 0) {

43 
i
 =+ 
es
;

48 
lo›
:

49 if(
j
 > 
hp
) {

50 if((
c
 = (*
qscmp
)(
hp
, 
j
)) == 0) {

51 
	`q£xc
(
hp
 =+ 
es
, 
j
);

52 
lo›
;

54 if(
c
 > 0) {

55 if(
i
 =
Õ
) {

56 
	`q°exc
(
i
, 
hp
 =+ 
es
, 
j
);

57 
i
 = 
Õ
 =+ 
es
;

58 
lo›
;

60 
	`q£xc
(
i
, 
j
);

61 
j
 =- 
es
;

62 
i
 =+ 
es
;

65 
j
 =- 
es
;

66 
lo›
;

70 if(
i
 =
Õ
) {

71 if(
Õ
-
a
 >
l
-
hp
) {

72 
	`qs1
(
hp
+
es
, 
l
);

73 
l
 = 
Õ
;

75 
	`qs1
(
a
, 
Õ
);

76 
a
 = 
hp
+
es
;

78 
°¨t
;

82 
	`q°exc
(
j
, 
Õ
 =- 
es
, 
i
);

83 
j
 = 
hp
 =- 
es
;

85 
	}
}

87 
	$q£xc
(
i
, 
j
)

88 *
i
, *
j
;

90 *
ri
, *
rj
, 
c
;

91 
n
;

93 
n
 = 
q£s
;

94 
ri
 = 
i
;

95 
rj
 = 
j
;

97 
c
 = *
ri
;

98 *
ri
++ = *
rj
;

99 *
rj
++ = 
c
;

100 } --
n
);

101 
	}
}

103 
	$q°exc
(
i
, 
j
, 
k
)

104 *
i
, *
j
, *
k
;

106 *
ri
, *
rj
, *
rk
;

107 
c
;

108 
n
;

110 
n
 = 
q£s
;

111 
ri
 = 
i
;

112 
rj
 = 
j
;

113 
rk
 = 
k
;

115 
c
 = *
ri
;

116 *
ri
++ = *
rk
;

117 *
rk
++ = *
rj
;

118 *
rj
++ = 
c
;

119 } --
n
);

120 
	}
}

	@usr/source/s4/rin.c

1 
	$rö
()

3 
n
, 
c
, 
f
;

5 
f
 = 1;

6 
n
 = 0;

7 
lo›
:

8 
c
 = 
	`gëch¨
();

9 if(
c
 == '\0')

10 
	`exô
();

11 if(
c
 == '-') {

12 
f
 = -f;

13 
lo›
;

15 if(
c
>='0' && c<='9') {

16 
n
 =Ç*10+
c
-'0';

17 
lo›
;

19 (
n
*
f
);

20 
	}
}

	@usr/sys/buf.h

1 
	sbuf
 {

2 
	mb_Êags
;

3 
buf
 *
	mb_f‹w
;

4 
buf
 *
	mb_back
;

5 
buf
 *
	mav_f‹w
;

6 
buf
 *
	mav_back
;

7 
	mb_dev
;

8 
	mb_wcou¡
;

9 *
	mb_addr
;

10 *
	mb_blkno
;

11 
	mb_îr‹
;

12 *
	mb_ªsid
;

13 } 
	gbuf
[
NBUF
];

18 
	sdevèb
 {

19 
	md_a˘ive
;

20 
	md_îr˙t
;

21 
buf
 *
	mb_f‹w
;

22 
buf
 *
	mb_back
;

23 
buf
 *
	md_a˘f
;

24 
buf
 *
	md_a˘l
;

27 
buf
 
	gb‰ìli°
;

29 
	#B_WRITE
 0

	)

30 
	#B_READ
 01

	)

31 
	#B_DONE
 02

	)

32 
	#B_ERROR
 04

	)

33 
	#B_BUSY
 010

	)

34 
	#B_XMEM
 060

	)

35 
	#B_WANTED
 0100

	)

36 
	#B_RELOC
 0200

	)

37 
	#B_ASYNC
 0400

	)

38 
	#B_DELWRI
 01000

	)

	@usr/sys/conf.h

3 
	md_mö‹
;

4 
	md_maj‹
;

7 
	sbdevsw


9 (*
	md_›í
)();

10 (*
	md_˛o£
)();

11 (*
	md_°øãgy
)();

12 *
	md_èb
;

13 } 
	gbdevsw
[];

14 
	gnblkdev
;

16 
	scdevsw


18 (*
	md_›í
)();

19 (*
	md_˛o£
)();

20 (*
	md_ªad
)();

21 (*
	md_wrôe
)();

22 (*
	md_sgây
)();

23 } 
	gcdevsw
[];

24 
	gnchrdev
;

	@usr/sys/conf/conf.c

5 (*
bdevsw
[])()

7 &
nuŒdev
, &nuŒdev, &
rk°øãgy
, &
rkèb
,

9 
	}
};

11 (*
cdevsw
[])()

13 &
kl›í
, &
kl˛o£
, &
kÃód
, &
klwrôe
, &
klsgây
,

14 &
nuŒdev
, &nuŒdev, &
mmªad
, &
mmwrôe
, &
nodev
,

15 &
nuŒdev
, &nuŒdev, &
rkªad
, &
rkwrôe
, &
nodev
,

16 &
pc›í
, &
pc˛o£
, &
p¸ód
, &
pcwrôe
, &
nodev
,

17 &
dc›í
, &
dc˛o£
, &
d¸ód
, &
dcwrôe
, &
dcsgây
,

19 
	}
};

21 
	groŸdev
 {(0<<8)|0};

22 
	gsw≠dev
 {(0<<8)|0};

23 
	gsw∂o
 4000;

24 
	gnsw≠
 872;

	@usr/sys/conf/mkconf.c

1 
	#CHAR
 01

	)

2 
	#BLOCK
 02

	)

3 
	#INTR
 04

	)

4 
	#EVEN
 010

	)

5 
	#KL
 020

	)

6 
	gèbp
[20];

7 
	gèbµ
;

8 
	sèb


10 *
	m«me
;

11 
	mcou¡
;

12 
	maddªss
;

13 
	mkey
;

14 *
	mcodó
;

15 *
	mcodeb
;

16 *
	mcodec
;

17 *
	mcoded
;

18 *
	mcodì
;

19 } 
	gèbÀ
[]

22 -1, 60, 
	gCHAR
+
	gINTR
+
	gKL
,

29 -1, 300, 
	gCHAR
,

38 0, 70, 
	gCHAR
+
	gINTR
,

46 -2, 100, 
	gINTR
,

66 0, 200, 
	gCHAR
+
	gINTR
,

74 0, 204, 
	gBLOCK
+
	gCHAR
+
	gINTR
,

86 0, 214, 
	gBLOCK
+
	gINTR
,

94 0, 220, 
	gBLOCK
+
	gCHAR
+
	gINTR
,

102 0, 224, 
	gBLOCK
+
	gCHAR
+
	gINTR
,

110 0, 230, 
	gCHAR
+
	gINTR
,

122 0, 254, 
	gBLOCK
+
	gCHAR
+
	gINTR
,

135 0, 308, 
	gCHAR
+
	gINTR
,

143 0, 308, 
	gINTR
+
	gKL
,

151 0, 308, 
	gCHAR
+
	gINTR
,

163 0, 304, 
	gCHAR
+
	gINTR
,

171 0, 304, 
	gINTR
,

188 0, 308, 
	gINTR
+
	gKL
,

200 0, 308, 
	gCHAR
+
	gINTR
+
	gEVEN
,

216 *
	g°ø
[]

247 *
	g°rb
[]

257 *
	g°rc
[]

265 *
	g°rd
[]

276 *
	g°ª
[]

287 *
	g°rf
[]

297 *
	g°rg
[]

309 
	gfout
;

311 
	$maö
()

313 
èb
 *
p
;

314 
i
, 
n
, 
ev
, 
nkl
;

315 
Êagf
, 
Êagb
;

317 
èbp
[
èbµ
++] = 
èbÀ
;

318 
èbp
[
èbµ
++] = 
èbÀ
+1;

319 
	`öput
());

324 
nkl
 = 0;

325 
Êagf
 = 
Êagb
 = 1;

326 
fout
 = 
	`¸ót
("l.s", 0666);

327 
	`puke
(
°ø
);

328 
p
=
èbÀ
;Ö->
«me
;Ö++)

329 if(
p
->
cou¡
 !0 &&Ö->
key
 & 
INTR
) {

330 if(
p
->
addªss
>240 && 
Êagb
) {

331 
Êagb
 = 0;

332 
	`puke
(
°rb
);

334 if(
p
->
addªss
 >= 300) {

335 if(
Êagf
) {

336 
ev
 = 0;

337 
Êagf
 = 0;

338 
	`puke
(
°rc
);

340 if(
p
->
key
 & 
EVEN
 && 
ev
 & 07) {

341 
	`¥ötf
("\t.=.+4\n");

342 
ev
 =+ 4;

344 
ev
 =+ 
p
->
addªss
 - 300;

346 
	`¥ötf
("\n. = %d^.\n", 
p
->
addªss
);

347 
n
 = 
p
->
cou¡
;

348 if(
n
 < 0)

349 
n
 = -n;

350 
i
=0; i<
n
; i++)

351 if(
p
->
key
 & 
KL
) {

352 
	`¥ötf
(
p
->
codó
, 
nkl
,Çkl);

353 
nkl
++;

355 
	`¥ötf
(
p
->
codó
, 
i
, i);

357 if(
Êagb
)

358 
	`puke
(
°rb
);

359 
	`puke
(
°rd
);

360 
p
=
èbÀ
;Ö->
«me
;Ö++)

361 if(
p
->
cou¡
 !0 &&Ö->
key
 & 
INTR
)

362 
	`¥ötf
("\n%s%s", 
p
->
codeb
,Ö->
codec
);

363 
	`Êush
();

364 
	`˛o£
(
fout
);

370 
fout
 = 
	`¸ót
("c.c", 0666);

371 
	`puke
(
°ª
);

372 
i
=0; 
p
=
èbp
[i]; i++)

373 if(
p
->
key
 & 
BLOCK
)

374 
	`¥ötf
("%s\n", 
p
->
coded
);

375 
	`puke
(
°rf
);

376 
i
=0; 
p
=
èbp
[i]; i++)

377 if(
p
->
key
 & 
CHAR
)

378 
	`¥ötf
("%s\n", 
p
->
codì
);

379 
	`puke
(
°rg
);

380 
	`Êush
();

381 
	`˛o£
(
fout
);

382 
	}
}

384 
	$puke
(
s
)

385 **
s
;

387 *
c
;

389 
c
 = *
s
++)

390 
	`¥ötf
("%s\n", 
c
);

391 
	}
}

393 
	$öput
()

395 
löe
[100];

396 *
p
;

397 
èb
 *
q
;

398 
n
;

400 
p
 = 
löe
;

401 (
n
=
	`gëch¨
()) != '\n') {

402 if(
n
 == 0)

404 if(
n
 == ' ' ||Ç == '\t')

406 *
p
++ = 
n
;

408 *
p
++ = 0;

409 
n
 = 0;

410 
p
 = 
löe
;

411 *
p
>='0' && *p<='9') {

412 
n
 =* 10;

413 
n
 =+ *
p
++ - '0';

415 if(
n
 == 0)

416 
n
 = 1;

417 if(*
p
 == 0)

419 
q
=
èbÀ
; q->
«me
; q++)

420 if(
	`equÆ
(
q
->
«me
, 
p
)) {

421 if(
q
->
cou¡
 < 0) {

422 
	`¥ötf
("%s:Çÿm‹e,ÇÿÀss\n", 
p
);

425 
q
->
cou¡
 =+ 
n
;

426 if(
q
->
addªss
 < 300 && q->
cou¡
 > 1) {

427 
q
->
cou¡
 = 1;

428 
	`¥ötf
("%s: o∆y o√\n", 
p
);

430 
èbp
[
èbµ
++] = 
q
;

433 
	`¥ötf
("%s: c™nŸ föd\n", 
p
);

435 
	}
}

437 
	$equÆ
(
a
, 
b
)

438 *
a
, *
b
;

441 *
a
++ =*
b
)

442 if(*
b
++ == 0)

445 
	}
}

	@usr/sys/dmr/bio.c

5 
	~"../∑øm.h
"

6 
	~"../u£r.h
"

7 
	~"../buf.h
"

8 
	~"../c⁄f.h
"

9 
	~"../sy°m.h
"

10 
	~"../¥oc.h
"

11 
	~"../£g.h
"

13 
	gbuf„rs
[
NBUF
][514];

14 
buf
 
	gswbuf
;

17 
	#PS
 0177776

	)

18 
	gtmèb
;

19 
	gøÊag
 1;

21 
	$bªad
(
dev
, 
blkno
)

23 
buf
 *
rbp
;

25 
rbp
 = 
	`gëblk
(
dev
, 
blkno
);

26 i‡(
rbp
->
b_Êags
&
B_DONE
)

27 (
rbp
);

28 
rbp
->
b_Êags
 =| 
B_READ
;

29 
rbp
->
b_wcou¡
 = -256;

30 (*
bdevsw
[
dev
.
d_maj‹
].
d_°øãgy
)(
rbp
);

31 
	`iowaô
(
rbp
);

32 (
rbp
);

33 
	}
}

35 
	$bªada
(
adev
, 
blkno
, 
øblkno
)

37 
buf
 *
rbp
, *
øbp
;

38 
dev
;

40 
dev
 = 
adev
;

41 
rbp
 = 0;

42 i‡(!
	`öc‹e
(
dev
, 
blkno
)) {

43 
rbp
 = 
	`gëblk
(
dev
, 
blkno
);

44 i‡((
rbp
->
b_Êags
&
B_DONE
) == 0) {

45 
rbp
->
b_Êags
 =| 
B_READ
;

46 
rbp
->
b_wcou¡
 = -256;

47 (*
bdevsw
[
adev
.
d_maj‹
].
d_°øãgy
)(
rbp
);

50 i‡(
øblkno
 && !
	`öc‹e
(
dev
,ÑablknoË&& 
øÊag
) {

51 
øbp
 = 
	`gëblk
(
dev
, 
øblkno
);

52 i‡(
øbp
->
b_Êags
 & 
B_DONE
)

53 
	`bªl£
(
øbp
);

55 
øbp
->
b_Êags
 =| 
B_READ
|
B_ASYNC
;

56 
øbp
->
b_wcou¡
 = -256;

57 (*
bdevsw
[
adev
.
d_maj‹
].
d_°øãgy
)(
øbp
);

60 i‡(
rbp
==0)

61 (
	`bªad
(
dev
, 
blkno
));

62 
	`iowaô
(
rbp
);

63 (
rbp
);

64 
	}
}

66 
	$bwrôe
(
bp
)

67 
buf
 *
bp
;

69 
buf
 *
rbp
;

70 
Êag
;

72 
rbp
 = 
bp
;

73 
Êag
 = 
rbp
->
b_Êags
;

74 
rbp
->
b_Êags
 =& ~(
B_READ
 | 
B_DONE
 | 
B_ERROR
 | 
B_DELWRI
);

75 
rbp
->
b_wcou¡
 = -256;

76 (*
bdevsw
[
rbp
->
b_dev
.
d_maj‹
].
d_°øãgy
)(rbp);

77 i‡((
Êag
&
B_ASYNC
) == 0) {

78 
	`iowaô
(
rbp
);

79 
	`bªl£
(
rbp
);

80 } i‡((
Êag
&
B_DELWRI
)==0)

81 
	`gëîr‹
(
rbp
);

82 
	}
}

84 
	$bdwrôe
(
bp
)

85 
buf
 *
bp
;

87 
buf
 *
rbp
;

89 
rbp
 = 
bp
;

90 i‡(
bdevsw
[
rbp
->
b_dev
.
d_maj‹
].
d_èb
 =&
tmèb
)

91 
	`bawrôe
(
rbp
);

93 
rbp
->
b_Êags
 =| 
B_DELWRI
 | 
B_DONE
;

94 
	`bªl£
(
rbp
);

96 
	}
}

98 
	$bawrôe
(
bp
)

99 
buf
 *
bp
;

101 
buf
 *
rbp
;

103 
rbp
 = 
bp
;

104 
rbp
->
b_Êags
 =| 
B_ASYNC
;

105 
	`bwrôe
(
rbp
);

106 
	}
}

108 
	$bªl£
(
bp
)

109 
buf
 *
bp
;

111 
buf
 *
rbp
, **
backp
;

112 
•s
;

114 
rbp
 = 
bp
;

115 i‡(
rbp
->
b_Êags
&
B_WANTED
)

116 
	`wakeup
(
rbp
);

117 i‡(
b‰ìli°
.
b_Êags
&
B_WANTED
) {

118 
b‰ìli°
.
b_Êags
 =& ~
B_WANTED
;

119 
	`wakeup
(&
b‰ìli°
);

121 i‡(
rbp
->
b_Êags
&
B_ERROR
)

122 
rbp
->
b_dev
.
d_mö‹
 = -1;

123 
backp
 = &
b‰ìli°
.
av_back
;

124 
•s
 = 
PS
->;

125 
	`•l6
();

126 
rbp
->
b_Êags
 =& ~(
B_WANTED
|
B_BUSY
|
B_ASYNC
);

127 (*
backp
)->
av_f‹w
 = 
rbp
;

128 
rbp
->
av_back
 = *
backp
;

129 *
backp
 = 
rbp
;

130 
rbp
->
av_f‹w
 = &
b‰ìli°
;

131 
PS
->
•s
;

132 
	}
}

134 
	$öc‹e
(
adev
, 
blkno
)

136 
dev
;

137 
buf
 *
bp
;

138 
devèb
 *
dp
;

140 
dev
 = 
adev
;

141 
dp
 = 
bdevsw
[
adev
.
d_maj‹
].
d_èb
;

142 
bp
=
dp
->
b_f‹w
; bp != dp; bp = bp->b_forw)

143 i‡(
bp
->
b_blkno
==
blkno
 && bp->
b_dev
==
dev
)

144 (
bp
);

146 
	}
}

148 
	$gëblk
(
dev
, 
blkno
)

150 
buf
 *
bp
;

151 
devèb
 *
dp
;

152 
lbﬁt
;

154 if(
dev
.
d_maj‹
 >
nblkdev
)

155 
	`∑nic
("blkdev");

157 
lo›
:

158 i‡(
dev
 < 0)

159 
dp
 = &
b‰ìli°
;

161 
dp
 = 
bdevsw
[
dev
.
d_maj‹
].
d_èb
;

162 
bp
=
dp
->
b_f‹w
; bp != dp; bp = bp->b_forw) {

163 i‡(
bp
->
b_blkno
!=
blkno
 || bp->
b_dev
!=
dev
)

165 
	`•l6
();

166 i‡(
bp
->
b_Êags
&
B_BUSY
) {

167 
bp
->
b_Êags
 =| 
B_WANTED
;

168 
	`¶ìp
(
bp
, 
PRIBIO
);

169 
	`•l0
();

170 
lo›
;

172 
	`•l0
();

173 
	`nŸavaû
(
bp
);

174 (
bp
);

177 
	`•l6
();

178 i‡(
b‰ìli°
.
av_f‹w
 == &bfreelist) {

179 
b‰ìli°
.
b_Êags
 =| 
B_WANTED
;

180 
	`¶ìp
(&
b‰ìli°
, 
PRIBIO
);

181 
	`•l0
();

182 
lo›
;

184 
	`•l0
();

185 
	`nŸavaû
(
bp
 = 
b‰ìli°
.
av_f‹w
);

186 i‡(
bp
->
b_Êags
 & 
B_DELWRI
) {

187 
bp
->
b_Êags
 =| 
B_ASYNC
;

188 
	`bwrôe
(
bp
);

189 
lo›
;

191 
bp
->
b_Êags
 = 
B_BUSY
 | 
B_RELOC
;

192 
bp
->
b_back
->
b_f‹w
 = bp->b_forw;

193 
bp
->
b_f‹w
->
b_back
 = bp->b_back;

194 
bp
->
b_f‹w
 = 
dp
->b_forw;

195 
bp
->
b_back
 = 
dp
;

196 
dp
->
b_f‹w
->
b_back
 = 
bp
;

197 
dp
->
b_f‹w
 = 
bp
;

198 
bp
->
b_dev
 = 
dev
;

199 
bp
->
b_blkno
 = 
blkno
;

200 (
bp
);

201 
	}
}

203 
	$iowaô
(
bp
)

204 
buf
 *
bp
;

206 
buf
 *
rbp
;

208 
rbp
 = 
bp
;

209 
	`•l6
();

210 (
rbp
->
b_Êags
&
B_DONE
)==0)

211 
	`¶ìp
(
rbp
, 
PRIBIO
);

212 
	`•l0
();

213 
	`gëîr‹
(
rbp
);

214 
	}
}

216 
	$nŸavaû
(
bp
)

217 
buf
 *
bp
;

219 
buf
 *
rbp
;

220 
•s
;

222 
rbp
 = 
bp
;

223 
•s
 = 
PS
->;

224 
	`•l6
();

225 
rbp
->
av_back
->
av_f‹w
 =Ñbp->av_forw;

226 
rbp
->
av_f‹w
->
av_back
 =Ñbp->av_back;

227 
rbp
->
b_Êags
 =| 
B_BUSY
;

228 
PS
->
•s
;

229 
	}
}

231 
	$iod⁄e
(
bp
)

232 
buf
 *
bp
;

234 
buf
 *
rbp
;

236 
rbp
 = 
bp
;

237 
rbp
->
b_Êags
 =| 
B_DONE
;

238 i‡(
rbp
->
b_Êags
&
B_ASYNC
)

239 
	`bªl£
(
rbp
);

241 
rbp
->
b_Êags
 =& ~
B_WANTED
;

242 
	`wakeup
(
rbp
);

244 
	}
}

246 
	$˛rbuf
(
bp
)

247 *
bp
;

249 *
p
;

250 
c
;

252 
p
 = 
bp
->
b_addr
;

253 
c
 = 256;

255 *
p
++ = 0;

256 --
c
);

257 
	}
}

259 
	$böô
()

261 
buf
 *
bp
;

262 
devèb
 *
dp
;

263 
i
;

264 
bdevsw
 *
bdp
;

266 
b‰ìli°
.
b_f‹w
 = b‰ìli°.
b_back
 =

267 
b‰ìli°
.
av_f‹w
 = b‰ìli°.
av_back
 = &bfreelist;

268 
i
=0; i<
NBUF
; i++) {

269 
bp
 = &
buf
[
i
];

270 
bp
->
b_dev
 = -1;

271 
bp
->
b_addr
 = 
buf„rs
[
i
];

272 
bp
->
b_back
 = &
b‰ìli°
;

273 
bp
->
b_f‹w
 = 
b‰ìli°
.b_forw;

274 
b‰ìli°
.
b_f‹w
->
b_back
 = 
bp
;

275 
b‰ìli°
.
b_f‹w
 = 
bp
;

276 
bp
->
b_Êags
 = 
B_BUSY
;

277 
	`bªl£
(
bp
);

279 
i
 = 0;

280 
bdp
 = 
bdevsw
; bdp->
d_›í
; bdp++) {

281 
dp
 = 
bdp
->
d_èb
;

282 
dp
->
b_f‹w
 = dp;

283 
dp
->
b_back
 = dp;

284 
i
++;

286 
nblkdev
 = 
i
;

287 
	}
}

292 
	#IENABLE
 0100

	)

293 
	#WCOM
 02

	)

294 
	#RCOM
 04

	)

295 
	#GO
 01

	)

296 
	$dev°¨t
(
bp
, 
devloc
, 
devblk
, 
hbcom
)

297 
buf
 *
bp
;

298 *
devloc
;

300 *
dp
;

301 
buf
 *
rbp
;

302 
com
;

304 
dp
 = 
devloc
;

305 
rbp
 = 
bp
;

306 *
dp
 = 
devblk
;

307 *--
dp
 = 
rbp
->
b_addr
;

308 *--
dp
 = 
rbp
->
b_wcou¡
;

309 
com
 = (
hbcom
<<8Ë| 
IENABLE
 | 
GO
 | 
rbp
->
b_Êags
&
B_XMEM
;

310 i‡(
rbp
->
b_Êags
&
B_READ
)

311 
com
 =| 
RCOM
;

313 
com
 =| 
WCOM
;

314 *--
dp
 = 
com
;

315 
	}
}

320 
	$sw≠
(
blkno
, 
c‹óddr
, 
cou¡
, 
rdÊg
)

322 *
Â
;

324 
Â
 = &
swbuf
.
b_Êags
;

325 
	`•l6
();

326 *
Â
&
B_BUSY
) {

327 *
Â
 =| 
B_WANTED
;

328 
	`¶ìp
(
Â
, 
PSWP
);

330 *
Â
 = 
B_BUSY
 | 
rdÊg
 | (
c‹óddr
>>6)&
B_XMEM
;

331 
swbuf
.
b_dev
 = 
sw≠dev
;

332 
swbuf
.
b_wcou¡
 = - (
cou¡
<<5);

333 
swbuf
.
b_blkno
 = 
blkno
;

334 
swbuf
.
b_addr
 = 
c‹óddr
<<6;

335 (*
bdevsw
[
sw≠dev
>>8].
d_°øãgy
)(&
swbuf
);

336 
	`•l6
();

337 (*
Â
&
B_DONE
)==0)

338 
	`¶ìp
(
Â
, 
PSWP
);

339 i‡(*
Â
&
B_WANTED
)

340 
	`wakeup
(
Â
);

341 
	`•l0
();

342 *
Â
 =& ~(
B_BUSY
|
B_WANTED
);

343 (*
Â
&
B_ERROR
);

344 
	}
}

351 
	$bÊush
(
dev
)

353 
buf
 *
bp
;

355 
lo›
:

356 
	`•l6
();

357 
bp
 = 
b‰ìli°
.
av_f‹w
; bp != &bfreelist; bp = bp->av_forw) {

358 i‡(
bp
->
b_Êags
&
B_DELWRI
 && (
dev
 =
NODEV
||dev==bp->
b_dev
)) {

359 
bp
->
b_Êags
 =| 
B_ASYNC
;

360 
	`nŸavaû
(
bp
);

361 
	`bwrôe
(
bp
);

362 
lo›
;

365 
	`•l0
();

366 
	}
}

368 
	$physio
(
°øt
, 
abp
, 
dev
, 
rw
)

369 
buf
 *
abp
;

370 (*
°øt
)();

372 
buf
 *
bp
;

373 *
ba£
;

374 
nb
;

375 
ts
;

377 
bp
 = 
abp
;

378 
ba£
 = 
u
.
u_ba£
;

379 i‡(
ba£
&01 || 
u
.
u_cou¡
&01 || base>=base+u.u_count)

380 
bad
;

381 
ts
 = (
u
.
u_tsize
+127) & ~0177;

382 
nb
 = (
ba£
>>6) & 01777;

383 i‡(
nb
 < 
ts
)

384 
bad
;

385 i‡((((
ba£
+
u
.
u_cou¡
)>>6)&01777Ë>
ts
+u.
u_dsize


386 && 
nb
 < 1024-
u
.
u_ssize
)

387 
bad
;

388 
	`•l6
();

389 
bp
->
b_Êags
&
B_BUSY
) {

390 
bp
->
b_Êags
 =| 
B_WANTED
;

391 
	`¶ìp
(
bp
, 
PRIBIO
);

393 
bp
->
b_Êags
 = 
B_BUSY
 | 
rw
;

394 
bp
->
b_dev
 = 
dev
;

395 
bp
->
b_addr
 = 
ba£
&077;

396 
ba£
 = 
UISA
->
r
[
nb
>>7] + (nb&0177);

397 
bp
->
b_Êags
 =| (
ba£
>>6Ë& 
B_XMEM
;

398 
bp
->
b_blkno
 = 
	`lshi·
(
u
.
u_off£t
, -9);

399 
bp
->
b_addr
 =+ 
ba£
<<6;

400 
bp
->
b_wcou¡
 = -((
u
.
u_cou¡
>>1) & 077777);

401 
bp
->
b_îr‹
 = 0;

402 
u
.
u_¥o˝
->
p_Êag
 =| 
SLOCK
;

403 (*
°øt
)(
bp
);

404 
	`•l6
();

405 (
bp
->
b_Êags
&
B_DONE
) == 0)

406 
	`¶ìp
(
bp
, 
PRIBIO
);

407 
u
.
u_¥o˝
->
p_Êag
 =& ~
SLOCK
;

408 i‡(
bp
->
b_Êags
&
B_WANTED
)

409 
	`wakeup
(
bp
);

410 
	`•l0
();

411 
bp
->
b_Êags
 =& ~(
B_BUSY
|
B_WANTED
);

412 
u
.
u_cou¡
 = (-
bp
->
b_ªsid
)<<1;

413 
	`gëîr‹
(
bp
);

415 
bad
:

416 
u
.
u_îr‹
 = 
EFAULT
;

417 
	}
}

419 
	$gëîr‹
(
abp
)

420 
buf
 *
abp
;

422 
buf
 *
bp
;

424 
bp
 = 
abp
;

425 i‡(
bp
->
b_Êags
&
B_ERROR
)

426 i‡((
u
.
u_îr‹
 = 
bp
->
b_îr‹
)==0)

427 
u
.
u_îr‹
 = 
EIO
;

428 
	}
}

	@usr/sys/dmr/cat.c

9 
	~"../∑øm.h
"

10 
	~"../u£r.h
"

11 
	~"../ây.h
"

13 
	#CATADDR
 0167750

	)

14 
	#PCAT
 9

	)

15 
	#CATHIWAT
 60

	)

16 
	#CATLOWAT
 15

	)

19 
	mˇéock
;

20 
˛i°
 
	moq
;

21 } 
	gˇt
;

24 
	mˇtc§
;

25 
	mˇtbuf
;

28 
	$˘›í
(
dev
)

30 i‡(
ˇt
.
ˇéock
==0) {

31 
ˇt
.
ˇéock
++;

32 
CATADDR
->
ˇtc§
 =| 
IENABLE
;

34 
u
.
u_îr‹
 = 
ENXIO
;

35 
	}
}

37 
	$˘˛o£
()

39 
ˇt
.
ˇéock
 = 0;

40 
	}
}

42 
	$˘wrôe
(
dev
)

44 
c
;

45 
lbﬁt
;

47 (
c
=
	`˝ass
()) >= 0) {

48 
	`•l5
();

49 
ˇt
.
oq
.
c_cc
 > 
CATHIWAT
)

50 
	`¶ìp
(&
ˇt
.
oq
, 
PCAT
);

51 
	`putc
(
c
, &
ˇt
.
oq
) < 0)

52 
	`¶ìp
(&
lbﬁt
, 
PCAT
);

53 
	`ˇtöå
();

54 
	`•l0
();

56 
	}
}

58 
	$ˇtöå
()

60 
c
;

62 i‡(
CATADDR
->
ˇtc§
&
DONE
 && (
c
=
	`gëc
(&
ˇt
.
oq
))>=0) {

63 
CATADDR
->
ˇtbuf
 = 
c
;

64 i‡(
ˇt
.
oq
.
c_cc
==0 || c©.oq.c_cc==
CATLOWAT
)

65 
	`wakeup
(&
ˇt
.
oq
);

67 i‡(
ˇt
.
ˇéock
==0)

68 
CATADDR
->
ˇtc§
 = 0;

70 
	}
}

	@usr/sys/dmr/dc.c

8 
	~"../∑øm.h
"

9 
	~"../c⁄f.h
"

10 
	~"../u£r.h
"

11 
	~"../ây.h
"

12 
	~"../¥oc.h
"

15 
	#DCADDR
 0174000

	)

16 
	#NDC11
 14

	)

19 
	#CDLEAD
 01

	)

20 
	#CARRIER
 04

	)

21 
	#SPEED1
 010

	)

22 
	#STOP1
 0400

	)

23 
	#RQSEND
 01

	)

24 
	#PARITY
 040

	)

25 
	#ERROR
 0100000

	)

26 
	#CTRANS
 040000

	)

27 
	#RINGIND
 020000

	)

30 
ây
 
	gdc11
[
NDC11
];

32 
	sd¸egs
 {

33 
	md¸c§
;

34 
	md¸buf
;

35 
	md˘c§
;

36 
	md˘buf
;

39 
	gd¸°ab
[] {

58 
	gd˘°ab
[] {

77 
	$dc›í
(
dev
, 
Êag
)

79 
ây
 *
πp
;

80 *
addr
;

82 i‡(
dev
.
d_mö‹
 >
NDC11
) {

83 
u
.
u_îr‹
 = 
ENXIO
;

86 
πp
 = &
dc11
[
dev
.
d_mö‹
];

87 
πp
->
t_addr
 = 
addr
 = 
DCADDR
 + 
dev
.
d_mö‹
*8;

88 
πp
->
t_°©e
 =| 
WOPEN
;

89 
addr
->
d¸c§
 =| 
IENABLE
|
CDLEAD
;

90 i‡((
πp
->
t_°©e
&
ISOPEN
) == 0) {

91 
πp
->
t_îa£
 = 
CERASE
;

92 
πp
->
t_kûl
 = 
CKILL
;

93 
addr
->
d¸c§
 = 
IENABLE
|
CDLEAD
|
SPEED1
;

94 
addr
->
d˘c§
 = 
IENABLE
|
SPEED1
|
STOP1
|
RQSEND
;

95 
πp
->
t_°©e
 = 
ISOPEN
 | 
WOPEN
;

96 
πp
->
t_Êags
 = 
ODDP
|
EVENP
|
ECHO
;

98 i‡(
addr
->
d¸c§
 & 
CARRIER
)

99 
πp
->
t_°©e
 =| 
CARR_ON
;

100 (
πp
->
t_°©e
 & 
CARR_ON
) == 0)

101 
	`¶ìp
(&
πp
->
t_øwq
, 
TTIPRI
);

102 
πp
->
t_°©e
 =& ~
WOPEN
;

103 i‡(
u
.
u_¥o˝
->
p_âyp
 == 0)

104 
u
.
u_¥o˝
->
p_âyp
 = 
πp
;

105 
	}
}

107 
	$dc˛o£
(
dev
)

109 
ây
 *
ç
;

111 (
ç
 = &
dc11
[
dev
.
d_mö‹
])->
t_°©e
 = 0;

112 i‡(
ç
->
t_Êags
&
HUPCL
)

113 
ç
->
t_addr
->
d¸c§
 =& ~
CDLEAD
;

114 
	`wÊushây
(
ç
);

115 
	}
}

117 
	$d¸ód
(
dev
)

119 
ây
 *
ç
;

121 
ç
 = &
dc11
[
dev
.
d_mö‹
];

122 i‡((
ç
->
t_addr
->
d¸c§
&
CARRIER
) != 0)

123 
	`âªad
(
ç
);

124 
	}
}

126 
	$dcwrôe
(
dev
)

128 
ây
 *
ç
;

130 
ç
 = &
dc11
[
dev
.
d_mö‹
];

131 i‡((
ç
->
t_addr
->
d¸c§
 & 
CARRIER
) != 0)

132 
	`âwrôe
(
ç
);

133 
	}
}

135 
	$dcxöt
(
dev
)

137 
ây
 *
ç
;

139 
	`â°¨t
(
ç
 = &
dc11
[
dev
.
d_mö‹
]);

140 i‡(
ç
->
t_outq
.
c_cc
 =0 ||Åp->t_outq.c_c¯=
TTLOWAT
)

141 
	`wakeup
(&
ç
->
t_outq
);

142 
	}
}

144 
	$d¸öt
(
dev
)

146 
ây
 *
ç
;

147 
c
, 
c§
;

149 
ç
 = &
dc11
[
dev
.
d_mö‹
];

150 
c
 = 
ç
->
t_addr
->
d¸buf
;

151 i‡(((
c§
 = 
ç
->
t_addr
->
d¸c§
Ë& 
CARRIER
) == 0) {

152 i‡((
ç
->
t_°©e
&
WOPEN
) == 0) {

153 
ç
->
t_addr
->
d¸c§
 =& ~
CDLEAD
;

154 i‡(
ç
->
t_°©e
 & 
CARR_ON
)

155 
	`sig«l
(
ç
, 
SIGHUP
);

156 
	`Êushây
(
ç
);

158 
ç
->
t_°©e
 =& ~
CARR_ON
;

161 i‡(
c§
&
ERROR
 || (
ç
->
t_°©e
&
ISOPEN
)==0) {

162 i‡(
ç
->
t_°©e
&
WOPEN
 && 
c§
&
CARRIER
)

163 
ç
->
t_°©e
 =| 
CARR_ON
;

164 
	`wakeup
(
ç
);

167 
c§
 =& 
PARITY
;

168 i‡(
c§
&&(
ç
->
t_Êags
&
ODDP
Ë|| !c§&&—p->t_Êags&
EVENP
))

169 
	`âyöput
(
c
, 
ç
);

170 
	}
}

172 
	$dcsgây
(
dev
, 
av
)

173 *
av
;

175 
ây
 *
ç
;

176 
r
;

178 
ç
 = &
dc11
[
dev
.
d_mö‹
];

179 i‡(
	`ây°ty
(
ç
, 
av
))

181 i‡(
r
 = 
d¸°ab
[
ç
->
t_•ìds
.
lobyã
&017])

182 
ç
->
t_addr
->
d¸c§
 = 
r
;

183 i‡(
r
 = 
d˘°ab
[
ç
->
t_•ìds
.
hibyã
&017])

184 
ç
->
t_addr
->
d˘c§
 = 
r
;

185 
	}
}

	@usr/sys/dmr/dh.c

13 
	~"../∑øm.h
"

14 
	~"../c⁄f.h
"

15 
	~"../u£r.h
"

16 
	~"../ây.h
"

17 
	~"../¥oc.h
"

19 
	#DHADDR
 0160020

	)

20 
	#NDH11
 16

	)

22 
ây
 
	gdh11
[
NDH11
];

23 
ndh11
 
	gNDH11
;

25 
	#BITS6
 01

	)

26 
	#BITS7
 02

	)

27 
	#BITS8
 03

	)

28 
	#TWOSB
 04

	)

29 
	#PENABLE
 020

	)

30 
	#OPAR
 040

	)

31 
	#HDUPLX
 040000

	)

33 
	#IENABLE
 030100

	)

34 
	#PERROR
 010000

	)

35 
	#FRERROR
 020000

	)

36 
	#SSPEED
 7

	)

38 
	#PS
 0177776

	)

40 
	gdhßr
;

41 
	sdhªgs
 {

42 
	mdhc§
;

43 
	mdhnxch
;

44 
	mdhÕr
;

45 
	mdhˇr
;

46 
	mdhb¸
;

47 
	mdhb¨
;

48 
	mdhbªak
;

49 
	mdhsûo
;

52 
	$dh›í
(
dev
, 
Êag
)

54 
ây
 *
ç
;

55 
	`dh°¨t
();

57 i‡(
dev
.
d_mö‹
 >
NDH11
) {

58 
u
.
u_îr‹
 = 
ENXIO
;

61 
ç
 = &
dh11
[
dev
.
d_mö‹
];

62 
ç
->
t_addr
 = 
dh°¨t
;

63 
DHADDR
->
dhc§
 =| 
IENABLE
;

64 
ç
->
t_°©e
 =| 
WOPEN
|
SSTART
;

65 i‡((
ç
->
t_°©e
&
ISOPEN
) == 0) {

66 
ç
->
t_îa£
 = 
CERASE
;

67 
ç
->
t_kûl
 = 
CKILL
;

68 
ç
->
t_•ìds
 = 
SSPEED
 | (SSPEED<<8);

69 
ç
->
t_Êags
 = 
ODDP
|
EVENP
|
ECHO
;

70 
	`dh∑øm
(
ç
);

72 
	`dm›í
(
dev
);

73 
ç
->
t_°©e
 =& ~
WOPEN
;

74 
ç
->
t_°©e
 =| 
ISOPEN
;

75 i‡(
u
.
u_¥o˝
->
p_âyp
 == 0)

76 
u
.
u_¥o˝
->
p_âyp
 = 
ç
;

77 
	}
}

79 
	$dh˛o£
(
dev
)

81 
ây
 *
ç
;

83 
ç
 = &
dh11
[
dev
.
d_mö‹
];

84 
	`dm˛o£
(
dev
);

85 
ç
->
t_°©e
 =& (
CARR_ON
|
SSTART
);

86 
	`wÊushây
(
ç
);

87 
	}
}

89 
	$dhªad
(
dev
)

91 
ây
 *
ç
;

93 
ç
 = &
dh11
[
dev
.
d_mö‹
];

94 i‡((
ç
->
t_°©e
&
CARR_ON
) != 0)

95 
	`âªad
(
ç
);

96 
	}
}

98 
	$dhwrôe
(
dev
)

100 
ây
 *
ç
;

102 
ç
 = &
dh11
[
dev
.
d_mö‹
];

103 i‡((
ç
->
t_°©e
&
CARR_ON
) != 0)

104 
	`âwrôe
(
ç
);

105 
	}
}

107 
	$dhröt
()

109 
ây
 *
ç
;

110 
c
;

112 (
c
 = 
DHADDR
->
dhnxch
) < 0) {

113 
ç
 = &
dh11
[(
c
>>8)&017];

114 i‡(
ç
 >&
dh11
[
NDH11
])

116 if((
ç
->
t_°©e
&
ISOPEN
)==0 || (
c
&
PERROR
)) {

117 
	`wakeup
(
ç
);

120 i‡(
c
&
FRERROR
)

121 i‡(
ç
->
t_Êags
&
RAW
)

122 
c
 = 0;

124 
c
 = 0177;

125 
	`âyöput
(
c
, 
ç
);

127 
	}
}

129 
	$dhsgây
(
dev
, 
av
)

130 *
av
;

132 
ây
 *
ç
;

133 
r
;

135 
ç
 = &
dh11
[
dev
.
d_mö‹
];

136 i‡(
	`ây°ty
(
ç
, 
av
))

138 
	`dh∑øm
(
ç
);

139 
	}
}

141 
	$dh∑øm
(
©p
)

142 
ây
 *
©p
;

144 
ây
 *
ç
;

145 
Õr
;

147 
ç
 = 
©p
;

148 
	`•l5
();

149 
DHADDR
->
dhc§
.
lobyã
 = (
ç
 - 
dh11
Ë| 
IENABLE
;

150 
Õr
 = (
ç
->
t_•ìds
.
hibyã
<<10Ë| (ç->t_•ìds.
lobyã
<<6);

151 i‡(
ç
->
t_•ìds
.
lobyã
 == 4)

152 
Õr
 =| 
BITS6
|
PENABLE
|
HDUPLX
; 

153 i‡(
ç
->
t_Êags
&
EVENP
)

154 i‡(
ç
->
t_Êags
&
ODDP
)

155 
Õr
 =| 
BITS8
; 

156 
Õr
 =| 
BITS7
|
PENABLE
; 

157 
Õr
 =| 
BITS7
|
OPAR
|
PENABLE
;

158 i‡(
ç
->
t_•ìds
.
lobyã
 == 3)

159 
Õr
 =| 
TWOSB
;

160 
DHADDR
->
dhÕr
 = 
Õr
;

161 
	`•l0
();

162 
	}
}

164 
	$dhxöt
()

166 
ây
 *
ç
;

167 
âybô
, 
b¨
;

169 
b¨
 = 
DHADDR
->
dhb¨
;

170 
DHADDR
->
dhc§
 =& ~0101060;

171 
b¨
 = (b¨|
dhßr
)^bar;

172 
âybô
 = 1;

173 
ç
 = 
dh11
;Å∞< &dh11[
NDH11
];Åp++) {

174 if(
b¨
&
âybô
) {

175 
dhßr
 =& ~
âybô
;

176 
ç
->
t_°©e
 =& ~
BUSY
;

177 
	`dh°¨t
(
ç
);

179 
âybô
 =<< 1;

181 
	}
}

183 
	$dh°¨t
(
©p
)

184 
ây
 *
©p
;

186 
	`âr°π
();

187 
löío
, 
c
;

188 
ây
 *
ç
;

189 
•s
;

192 
•s
 = 
PS
->;

193 
	`•l5
();

194 
ç
 = 
©p
;

195 i‡(
ç
->
t_°©e
&(
TIMEOUT
|
BUSY
Ë|| (ç->
t_outq
.
c_cc
==0))

197 i‡((
c
 = 
	`gëc
(&
ç
->
t_outq
))<=0177) {

198 
ç
->
t_ch¨
 = 
c
;

199 
löío
 = 
ç
-
dh11
;

200 
DHADDR
->
dhc§
.
lobyã
 = 
löío
 | 
IENABLE
;

201 
DHADDR
->
dhˇr
 = &
ç
->
t_ch¨
;

202 
DHADDR
->
dhb¸
 = -1;

203 
löío
 = 1<<lineno;

204 
DHADDR
->
dhb¨
 =| 
löío
;

205 
dhßr
 =| 
löío
;

206 
ç
->
t_°©e
 =| 
BUSY
;

208 
	`timeout
(
âr°π
, 
ç
, (
c
&0177)+6);

209 
ç
->
t_°©e
 =| 
TIMEOUT
;

211 i‡(
ç
->
t_outq
.
c_cc
 =0 ||Åp->t_outq.c_c¯=
TTLOWAT
)

212 
	`wakeup
(&
ç
->
t_outq
);

213 
PS
->
•s
;

214 
	}
}

	@usr/sys/dmr/dhdm.c

8 
	~"../∑øm.h
"

9 
	~"../ây.h
"

10 
	~"../c⁄f.h
"

12 
	#DMADDR
 0170500

	)

14 
ây
 
	gdh11
[];

15 
	gndh11
;

17 
	#DONE
 0200

	)

18 
	#SCENABL
 040

	)

19 
	#CLSCAN
 01000

	)

20 
	#TURNON
 07

	)

21 
	#TURNOFF
 0

	)

22 
	#CARRIER
 0100

	)

24 
	sdmªgs
 {

25 
	mdmc§
;

26 
	mdml°©
;

29 
	$dm›í
(
dev
)

31 
ây
 *
ç
;

33 
ç
 = &
dh11
[
dev
.
d_mö‹
];

34 
DMADDR
->
dmc§
 = 
dev
.
d_mö‹
;

35 
DMADDR
->
dml°©
 = 
TURNON
;

36 i‡(
DMADDR
->
dml°©
&
CARRIER
)

37 
ç
->
t_°©e
 =| 
CARR_ON
;

38 
DMADDR
->
dmc§
 = 
IENABLE
|
SCENABL
;

39 
	`•l5
();

40 (
ç
->
t_°©e
&
CARR_ON
)==0)

41 
	`¶ìp
(&
ç
->
t_øwq
, 
TTIPRI
);

42 
	`•l0
();

43 
	}
}

45 
	$dm˛o£
(
dev
)

47 
ây
 *
ç
;

49 
ç
 = &
dh11
[
dev
.
d_mö‹
];

50 i‡(
ç
->
t_Êags
&
HUPCL
) {

51 
DMADDR
->
dmc§
 = 
dev
.
d_mö‹
;

52 
DMADDR
->
dml°©
 = 
TURNOFF
;

53 
DMADDR
->
dmc§
 = 
IENABLE
|
SCENABL
;

55 
	}
}

57 
	$dmöt
()

59 
ây
 *
ç
;

61 i‡(
DMADDR
->
dmc§
&
DONE
) {

62 
ç
 = &
dh11
[
DMADDR
->
dmc§
&017];

63 i‡(
ç
 < &
dh11
[
ndh11
]) {

64 
	`wakeup
(
ç
);

65 i‡((
DMADDR
->
dml°©
&
CARRIER
)==0) {

66 i‡((
ç
->
t_°©e
&
WOPEN
)==0) {

67 
	`sig«l
(
ç
, 
SIGHUP
);

68 
DMADDR
->
dml°©
 = 0;

69 
	`Êushây
(
ç
);

71 
ç
->
t_°©e
 =& ~
CARR_ON
;

73 
ç
->
t_°©e
 =| 
CARR_ON
;

75 
DMADDR
->
dmc§
 = 
IENABLE
|
SCENABL
;

77 
	}
}

	@usr/sys/dmr/dhfdm.c

8 
	~"../ây.h
"

9 
	~"../c⁄f.h
"

11 
ây
 
	gdh11
[];

13 
	$dm›í
(
dev
)

15 
ây
 *
ç
;

17 
ç
 = &
dh11
[
dev
.
d_mö‹
];

18 
ç
->
t_°©e
 =| 
CARR_ON
;

19 
	}
}

21 
	$dm˛o£
(
dev
)

23 
	}
}

	@usr/sys/dmr/dn.c

9 
	~"../∑øm.h
"

10 
	~"../c⁄f.h
"

11 
	~"../u£r.h
"

13 
	sdn
 {

15 
	mdn_°©
;

16 
	mdn_ªg
;

17 } 
	mdn11
[3];

20 
	#DNADDR
 0175200

	)

22 
	#PWI
 00200

	)

23 
	#ACR
 00100

	)

24 
	#DLO
 0020

	)

25 
	#DONE
 0200

	)

26 
	#IENABLE
 0100

	)

27 
	#DSS
 040

	)

28 
	#PND
 020

	)

29 
	#MENABLE
 04

	)

30 
	#DPR
 02

	)

31 
	#CRQ
 01

	)

33 
	#DNPRI
 5

	)

35 
	$dn›í
(
dev
, 
Êag
)

37 
dn
 *
dp
;

38 
rdev
;

40 
rdev
 = 
dev
.
d_mö‹
;

41 
dp
 = &
DNADDR
->
dn11
[
rdev
];

42 i‡(
dp
->
dn_ªg
&(
PWI
|
DLO
))

43 
u
.
u_îr‹
 = 
ENXIO
;

45 
DNADDR
->
dn11
[0].
dn_°©
 =| 
MENABLE
;

46 
dp
->
dn_°©
 = 
IENABLE
|
MENABLE
|
CRQ
;

48 
	}
}

50 
	$dn˛o£
(
dev
)

52 
DNADDR
->
dn11
[
dev
.
d_mö‹
].
dn_°©
 =& 
MENABLE
;

53 
	}
}

55 
	$dnwrôe
(
dev
)

57 
dn
 *
dp
;

58 
c
;

59 
lbﬁt
;

61 
dp
 = &
DNADDR
->
dn11
[
dev
.
d_mö‹
];

63 (
dp
->
dn_°©
&
DONE
)==0)

64 
	`¶ìp
(
DNADDR
, 
DNPRI
);

65 
dp
->
dn_°©
 =& ~
DONE
;

66 
c⁄tö
:

67 i‡(
dp
->
dn_ªg
&(
PWI
|
ACR
)) {

68 
u
.
u_îr‹
 = 
EIO
;

71 i‡(
dp
->
dn_°©
&
DSS
)

73 
c
 = 0;

74 i‡(
u
.
u_cou¡
==0 || (
dp
->
dn_°©
&
PND
)==0 || (
c
=
	`˝ass
())<0)

76 i‡(
c
=='-') {

77 
	`¶ìp
(&
lbﬁt
, 
DNPRI
);

78 
	`¶ìp
(&
lbﬁt
, 
DNPRI
);

79 
c⁄tö
;

81 
dp
->
dn_ªg
 = 
c
-'0';

82 
dp
->
dn_°©
 =| 
DPR
;

84 
	}
}

86 
	$dnöt
(
dev
)

88 
	`wakeup
(
DNADDR
);

89 
	}
}

	@usr/sys/dmr/dp.c

9 
	~"../∑øm.h
"

10 
	~"../c⁄f.h
"

11 
	~"../u£r.h
"

12 
	~"../buf.h
"

16 *
	mdp_buf
;

17 *
	mdp_buÂ
;

18 
	mdp_nxmô
;

19 
	mdp_°©e
;

20 
	mdp_timî
;

21 
	mdp_¥oc
;

22 } 
	gdp11
;

26 
	md¥c§
;

27 
	md¥buf
;

28 
	mdpsyn0
;

29 
	md±c§
;

30 
	md±buf
;

31 
	mdpsyn1
;

35 
	#ODDPAR
 010000

	)

36 
	#IENABLE
 0100

	)

37 
	#HDUPLX
 02

	)

39 
	#CTRANS
 0100000

	)

40 
	#RORUN
 040000

	)

41 
	#RING
 020000

	)

42 
	#DSRDY
 010000

	)

43 
	#CARRIER
 04000

	)

44 
	#DONE
 0200

	)

45 
	#IENABLE
 0100

	)

46 
	#SIENABL
 040

	)

48 
	#WRITE
 1

	)

49 
	#READ
 0

	)

51 
	#DTRDY
 01

	)

52 
	#RCVACT
 04000

	)

54 
	#DPADDR
 0174770

	)

55 
	#DPPRI
 5

	)

57 
	$dp›í
(
dev
, 
Êag
)

59 
	`d±imeout
();

61 i‡(
dp11
.
dp_¥oc
!=0 && dp11.dp_¥oc!=
u
.
u_¥o˝
) {

62 
u
.
u_îr‹
 = 
ENXIO
;

65 
dp11
.
dp_¥oc
 = 
u
.
u_¥o˝
;

66 
dp11
.
dp_°©e
 = 
READ
;

67 i‡(
dp11
.
dp_buf
==0) {

68 
dp11
.
dp_buf
 = 
	`gëblk
(
NODEV
);

69 
dp11
.
dp_buÂ
 = dp11.
dp_buf
->
b_addr
;

70 
dp11
.
dp_timî
 = 60;

71 
	`timeout
(
d±imeout
, 0, 60);

73 
DPADDR
->
dpsyn0
 = 026;

74 
DPADDR
->
d¥c§
 = 
HDUPLX
|
IENABLE
;

75 
DPADDR
->
d±c§
 = 
IENABLE
|
SIENABL
|
DTRDY
;

76 
	}
}

78 
	$dp˛o£
()

80 
DPADDR
->
d¥c§
 = 0;

81 
DPADDR
->
d±c§
 = 0;

82 
dp11
.
dp_timî
 = 0;

83 
dp11
.
dp_¥oc
 = 0;

84 i‡(
dp11
.
dp_buf
 != 0) {

85 
	`bªl£
(
dp11
.
dp_buf
);

86 
dp11
.
dp_buf
 = 0;

88 
	}
}

90 
	$d¥ód
()

92 *
bp
, **
ïp
;

94 
bp
 = 
dp11
.
dp_buf
->
b_addr
;

95 
ïp
 = &
dp11
.
dp_buÂ
;

97 if(
	`dpwaô
())

99 i‡(*
ïp
 > 
bp
)

101 
	`•l6
();

102 i‡(
dp11
.
dp_timî
 <= 1) {

103 
	`•l0
();

106 
	`¶ìp
(&
dp11
, 
DPPRI
);

107 
	`•l0
();

109 
	`iomove
(
dp11
.
dp_buf
, 0, 
	`mö
(
u
.
u_cou¡
, *
ïp
-
bp
), 
B_READ
);

110 
	}
}

112 
	$dpwrôe
()

114 *
bp
;

116 i‡(
u
.
u_cou¡
==0 ||
	`dpwaô
())

118 
dp11
.
dp_°©e
 = 
WRITE
;

119 
bp
 = 
dp11
.
dp_buf
->
b_addr
;

120 
dp11
.
dp_buÂ
 = 
bp
;

121 i‡(
u
.
u_cou¡
>512)

122 
u
.
u_cou¡
 = 512;

123 
dp11
.
dp_nxmô
 = 
u
.
u_cou¡
;

124 
	`iomove
(
dp11
.
dp_buf
, 0, 
u
.
u_cou¡
, 
B_WRITE
);

125 
	`dp°¨t
();

126 
	}
}

128 
	$dpwaô
()

131 i‡((
DPADDR
->
d±c§
&
DSRDY
)==0 || 
dp11
.
dp_buf
==0) {

132 
u
.
u_îr‹
 = 
EIO
;

135 
	`•l6
();

136 i‡(
dp11
.
dp_°©e
==
READ
 && (
DPADDR
->
d±c§
&
CARRIER
)==0) {

137 
	`•l0
();

140 
	`¶ìp
(&
dp11
, 
DPPRI
);

141 
	`•l0
();

143 
	}
}

145 
	$dp°¨t
()

147 
c
;

148 
∑πab
[];

150 
dp11
.
dp_timî
 = 5;

151 i‡(--
dp11
.
dp_nxmô
 >= 0) {

152 
c
 = (*
dp11
.
dp_buÂ
++) & 0177;

153 
DPADDR
->
d±buf
 = 
c
 | ~
∑πab
[c]&0200;

155 
dp11
.
dp_buÂ
 = dp11.
dp_buf
->
b_addr
;

156 
dp11
.
dp_°©e
 = 
READ
;

158 
	}
}

160 
	$d±imeout
()

162 i‡(
dp11
.
dp_timî
==0)

164 i‡(--
dp11
.
dp_timî
==0) {

165 
	`d±u∫¨ound
();

166 
dp11
.
dp_timî
 = 1;

168 
	`timeout
(
d±imeout
, 0, 60);

169 
	}
}

171 
	$d¥öt
()

173 
c
;

175 
c
 = 
DPADDR
->
d¥buf
 & 0177;

176 i‡(
dp11
.
dp_°©e
==
READ
) {

177 i‡((
DPADDR
->
d¥c§
&
ODDPAR
) == 0)

178 
c
 =| 0200;

179 i‡(
dp11
.
dp_buÂ
 < dp11.
dp_buf
->
b_addr
+512)

180 *
dp11
.
dp_buÂ
++ = 
c
;

182 
	}
}

184 
	$dpxöt
()

186 
dp°©
;

188 
dp°©
 = 
DPADDR
->
d±c§
;

189 
DPADDR
->
d±c§
 =& ~(
CTRANS
|
RORUN
|
RING
|
DONE
);

190 i‡(
dp°©
 & (
CTRANS
|
RORUN
))

191 
	`d±u∫¨ound
();

192 i‡(
dp°©
&
DONE
 && 
dp11
.
dp_°©e
==
WRITE
)

193 
	`dp°¨t
();

194 
	}
}

196 
	$d±u∫¨ound
()

198 
DPADDR
->
d¥c§
 =& ~
RCVACT
;

199 i‡(
dp11
.
dp_°©e
==
WRITE
) {

200 
dp11
.
dp_timî
 = 5;

201 
dp11
.
dp_°©e
 = 
READ
;

202 
dp11
.
dp_buÂ
 = dp11.
dp_buf
->
b_addr
;

204 
	`wakeup
(&
dp11
);

205 
	}
}

	@usr/sys/dmr/kl.c

8 
	~"../∑øm.h
"

9 
	~"../c⁄f.h
"

10 
	~"../u£r.h
"

11 
	~"../ây.h
"

12 
	~"../¥oc.h
"

15 
	#KLADDR
 0177560

	)

16 
	#KLBASE
 0176500

	)

17 
	#DLBASE
 0175610

	)

18 
	#NKL11
 4

	)

19 
	#NDL11
 0

	)

20 
	#DSRDY
 02

	)

21 
	#RDRENB
 01

	)

23 
ây
 
	gkl11
[
NKL11
+
NDL11
];

25 
	skÃegs
 {

26 
	mkÃc§
;

27 
	mkÃbuf
;

28 
	mk…c§
;

29 
	mk…buf
;

32 
	$kl›í
(
dev
, 
Êag
)

34 *
addr
;

35 
ây
 *
ç
;

37 if(
dev
.
d_mö‹
 >
NKL11
+
NDL11
) {

38 
u
.
u_îr‹
 = 
ENXIO
;

41 
ç
 = &
kl11
[
dev
.
d_mö‹
];

42 i‡(
u
.
u_¥o˝
->
p_âyp
 == 0)

43 
u
.
u_¥o˝
->
p_âyp
 = 
ç
;

49 
addr
 = 
KLADDR
 + 8*
dev
.
d_mö‹
;

50 if(
dev
.
d_mö‹
)

51 
addr
 =+ 
KLBASE
-
KLADDR
-8;

52 if(
dev
.
d_mö‹
 >
NKL11
)

53 
addr
 =+ 
DLBASE
-
KLBASE
-8*
NKL11
+8;

54 
ç
->
t_addr
 = 
addr
;

55 i‡((
ç
->
t_°©e
&
ISOPEN
) == 0) {

56 
ç
->
t_°©e
 = 
ISOPEN
|
CARR_ON
;

57 
ç
->
t_Êags
 = 
XTABS
|
LCASE
|
ECHO
|
CRMOD
;

58 
ç
->
t_îa£
 = 
CERASE
;

59 
ç
->
t_kûl
 = 
CKILL
;

61 
addr
->
kÃc§
 =| 
IENABLE
|
DSRDY
|
RDRENB
;

62 
addr
->
k…c§
 =| 
IENABLE
;

63 
	}
}

65 
	$kl˛o£
(
dev
)

67 
ây
 *
ç
;

69 
ç
 = &
kl11
[
dev
.
d_mö‹
];

70 
	`wÊushây
(
ç
);

71 
ç
->
t_°©e
 = 0;

72 
	}
}

74 
	$kÃód
(
dev
)

76 
	`âªad
(&
kl11
[
dev
.
d_mö‹
]);

77 
	}
}

79 
	$klwrôe
(
dev
)

81 
	`âwrôe
(&
kl11
[
dev
.
d_mö‹
]);

82 
	}
}

84 
	$klxöt
(
dev
)

86 
ây
 *
ç
;

88 
ç
 = &
kl11
[
dev
.
d_mö‹
];

89 
	`â°¨t
(
ç
);

90 i‡(
ç
->
t_outq
.
c_cc
 =0 ||Åp->t_outq.c_c¯=
TTLOWAT
)

91 
	`wakeup
(&
ç
->
t_outq
);

92 
	}
}

94 
	$kÃöt
(
dev
)

96 
c
, *
addr
;

97 
ây
 *
ç
;

99 
ç
 = &
kl11
[
dev
.
d_mö‹
];

100 
addr
 = 
ç
->
t_addr
;

101 
c
 = 
addr
->
kÃbuf
;

102 
addr
->
kÃc§
 =| 
RDRENB
;

103 i‡((
c
&0177)==0)

104 
addr
->
k…buf
 = 
c
;

105 
	`âyöput
(
c
, 
ç
);

106 
	}
}

108 
	$klsgây
(
dev
, 
v
)

109 *
v
;

111 
ây
 *
ç
;

113 
ç
 = &
kl11
[
dev
.
d_mö‹
];

114 
	`ây°ty
(
ç
, 
v
);

115 
	}
}

	@usr/sys/dmr/lp.c

9 
	~"../∑øm.h
"

10 
	~"../c⁄f.h
"

11 
	~"../u£r.h
"

13 
	#LPADDR
 0177514

	)

15 
	#IENABLE
 0100

	)

16 
	#DONE
 0200

	)

18 
	#LPPRI
 10

	)

19 
	#LPLWAT
 50

	)

20 
	#LPHWAT
 100

	)

21 
	#EJLINE
 60

	)

22 
	#MAXCOL
 80

	)

25 
	mÕ§
;

26 
	mÕbuf
;

30 
	mcc
;

31 
	mcf
;

32 
	m˛
;

33 
	mÊag
;

34 
	mmcc
;

35 
	mccc
;

36 
	mmlc
;

37 } 
	gÕ11
;

39 
	#CAP
 01

	)

40 
	#EJECT
 02

	)

41 
	#OPEN
 04

	)

43 
	#FORM
 014

	)

45 
	$Õ›í
(
dev
, 
Êag
)

48 if(
Õ11
.
Êag
 & 
OPEN
 || 
LPADDR
->
Õ§
 < 0) {

49 
u
.
u_îr‹
 = 
EIO
;

52 
Õ11
.
Êag
 =| (
CAP
|
EJECT
|
OPEN
);

53 
LPADDR
->
Õ§
 =| 
IENABLE
;

54 
	`Õˇn⁄
(
FORM
);

55 
	}
}

57 
	$Õ˛o£
(
dev
, 
Êag
)

59 
	`Õˇn⁄
(
FORM
);

60 
Õ11
.
Êag
 = 0;

61 
	}
}

63 
	$Õwrôe
()

65 
c
;

67 (
c
=
	`˝ass
())>=0)

68 
	`Õˇn⁄
(
c
);

69 
	}
}

71 
	$Õˇn⁄
(
c
)

73 
c1
, 
c2
;

75 
c1
 = 
c
;

76 if(
Õ11
.
Êag
&
CAP
) {

77 if(
c1
>='a' && c1<='z')

78 
c1
 =+ 'A'-'a'; 

79 
c1
) {

82 
c2
 = '(';

83 
esc
;

86 
c2
 = ')';

87 
esc
;

90 
c2
 = '\'';

91 
esc
;

94 
c2
 = '!';

95 
esc
;

98 
c2
 = '^';

100 
esc
:

101 
	`Õˇn⁄
(
c2
);

102 
Õ11
.
ccc
--;

103 
c1
 = '-';

107 
c1
) {

110 
Õ11
.
ccc
 = (lp11.ccc+8) & ~7;

113 
FORM
:

115 if((
Õ11
.
Êag
&
EJECT
) == 0 ||

116 
Õ11
.
mcc
!=0 ||Üp11.
mlc
!=0) {

117 
Õ11
.
mcc
 = 0;

118 
Õ11
.
mlc
++;

119 if(
Õ11
.
mlc
 >
EJLINE
 &&Üp11.
Êag
&
EJECT
)

120 
c1
 = 
FORM
;

121 
	`Õouçut
(
c1
);

122 if(
c1
 =
FORM
)

123 
Õ11
.
mlc
 = 0;

127 
Õ11
.
ccc
 = 0;

131 if(
Õ11
.
ccc
 > 0)

132 
Õ11
.
ccc
--;

136 
Õ11
.
ccc
++;

140 if(
Õ11
.
ccc
 <Üp11.
mcc
) {

141 
	`Õouçut
('\r');

142 
Õ11
.
mcc
 = 0;

144 if(
Õ11
.
ccc
 < 
MAXCOL
) {

145 
Õ11
.
ccc
 >Üp11.
mcc
) {

146 
	`Õouçut
(' ');

147 
Õ11
.
mcc
++;

149 
	`Õouçut
(
c1
);

150 
Õ11
.
mcc
++;

152 
Õ11
.
ccc
++;

154 
	}
}

156 
	$Õ°¨t
()

158 
c
;

160 
LPADDR
->
Õ§
&
DONE
 && (
c
 = 
	`gëc
(&
Õ11
)) >= 0)

161 
LPADDR
->
Õbuf
 = 
c
;

162 
	}
}

164 
	$Õöt
()

166 
c
;

168 
	`Õ°¨t
();

169 i‡(
Õ11
.
cc
 =
LPLWAT
 ||Üp11.cc == 0)

170 
	`wakeup
(&
Õ11
);

171 
	}
}

173 
	$Õouçut
(
c
)

175 i‡(
Õ11
.
cc
 >
LPHWAT
)

176 
	`¶ìp
(&
Õ11
, 
LPPRI
);

177 
	`putc
(
c
, &
Õ11
);

178 
	`•l4
();

179 
	`Õ°¨t
();

180 
	`•l0
();

181 
	}
}

	@usr/sys/dmr/mem.c

12 
	~"../∑øm.h
"

13 
	~"../u£r.h
"

14 
	~"../c⁄f.h
"

15 
	~"../£g.h
"

17 
	$mmªad
(
dev
)

19 
c
, 
bn
, 
⁄
;

20 
a
;

22 if(
dev
.
d_mö‹
 == 2)

25 
bn
 = 
	`lshi·
(
u
.
u_off£t
, -6);

26 
⁄
 = 
u
.
u_off£t
[1] & 077;

27 
a
 = 
UISA
->
r
[0];

28 
	`•l7
();

29 
UISA
->
r
[0] = 
bn
;

30 if(
dev
.
d_mö‹
 == 1)

31 
UISA
->
r
[0] = 
KISA
->r[(
bn
>>7)&07] + (bn & 0177);

32 
c
 = 
	`fubyã
(
⁄
);

33 
UISA
->
r
[0] = 
a
;

34 
	`•l0
();

35 } 
u
.
u_îr‹
==0 && 
	`∑ssc
(
c
)>=0);

36 
	}
}

38 
	$mmwrôe
(
dev
)

40 
c
, 
bn
, 
⁄
;

41 
a
;

43 if(
dev
.
d_mö‹
 == 2) {

44 
c
 = 
u
.
u_cou¡
;

45 
u
.
u_cou¡
 = 0;

46 
u
.
u_ba£
 =+ 
c
;

47 
	`d∑dd
(
u
.
u_off£t
, 
c
);

51 
bn
 = 
	`lshi·
(
u
.
u_off£t
, -6);

52 
⁄
 = 
u
.
u_off£t
[1] & 077;

53 i‡((
c
=
	`˝ass
())<0 || 
u
.
u_îr‹
!=0)

55 
a
 = 
UISA
->
r
[0];

56 
	`•l7
();

57 
UISA
->
r
[0] = 
bn
;

58 if(
dev
.
d_mö‹
 == 1)

59 
UISA
->
r
[0] = 
KISA
->r[(
bn
>>7)&07] + (bn & 0177);

60 
	`subyã
(
⁄
, 
c
);

61 
UISA
->
r
[0] = 
a
;

62 
	`•l0
();

64 
	}
}

	@usr/sys/dmr/partab.c

5 
	g∑πab
[] {

	@usr/sys/dmr/pc.c

9 
	~"../∑øm.h
"

10 
	~"../c⁄f.h
"

11 
	~"../u£r.h
"

13 
	#PCADDR
 0177550

	)

15 
	#CLOSED
 0

	)

16 
	#WAITING
 1

	)

17 
	#READING
 2

	)

18 
	#EOF
 3

	)

20 
	#RDRENB
 01

	)

21 
	#IENABLE
 0100

	)

22 
	#DONE
 0200

	)

23 
	#BUSY
 04000

	)

24 
	#ERROR
 0100000

	)

26 
	#PCIPRI
 30

	)

27 
	#PCOPRI
 40

	)

28 
	#PCOLWAT
 50

	)

29 
	#PCOHWAT
 100

	)

30 
	#PCIHWAT
 250

	)

33 
	mp¸c§
;

34 
	mp¸buf
;

35 
	mp˝c§
;

36 
	mp˝buf
;

39 
	s˛i°
 {

40 
	mcc
;

41 
	mcf
;

42 
	m˛
;

45 
	spc11
 {

46 
	mpc°©e
;

47 
˛i°
 
	mpcö
;

48 
˛i°
 
	mpcout
;

49 } 
	gpc11
;

51 
	$pc›í
(
dev
, 
Êag
)

53 
lbﬁt
;

55 i‡(
Êag
==0) {

56 i‡(
pc11
.
pc°©e
!=
CLOSED
) {

57 
u
.
u_îr‹
 = 
ENXIO
;

60 
pc11
.
pc°©e
 = 
WAITING
;

61 
pc11
.
pc°©e
==
WAITING
) {

62 
PCADDR
->
p¸c§
 = 
IENABLE
|
RDRENB
;

63 
	`¶ìp
(&
lbﬁt
, 
PCIPRI
);

66 
PCADDR
->
p˝c§
 =| 
IENABLE
;

67 
	`p˛ódî
();

69 
	}
}

71 
	$pc˛o£
(
dev
, 
Êag
)

73 i‡(
Êag
==0) {

74 
	`•l4
();

75 
	`gëc
(&
pc11
.
pcö
) >= 0);

76 
PCADDR
->
p¸c§
 = 0;

77 
pc11
.
pc°©e
 = 
CLOSED
;

78 
	`•l0
();

80 
	`p˛ódî
();

81 
	}
}

83 
	$p¸ód
()

85 
c
;

87 
	`•l4
();

89 (
c
 = 
	`gëc
(&
pc11
.
pcö
)) < 0) {

90 i‡(
pc11
.
pc°©e
==
EOF
)

91 
out
;

92 i‡((
PCADDR
->
p¸c§
&(
ERROR
|
BUSY
|
DONE
))==0)

93 
PCADDR
->
p¸c§
 =| 
IENABLE
|
RDRENB
;

94 
	`¶ìp
(&
pc11
.
pcö
, 
PCIPRI
);

96 } 
	`∑ssc
(
c
)>=0);

97 
out
:

98 
	`•l0
();

99 
	}
}

101 
	$pcwrôe
()

103 
c
;

105 (
c
=
	`˝ass
())>=0)

106 
	`pcouçut
(
c
);

107 
	}
}

109 
	$pc°¨t
()

111 
c
;

113 i‡(
PCADDR
->
p˝c§
&
DONE
 && (
c
 = 
	`gëc
(&
pc11
.
pcout
)) >= 0)

114 
PCADDR
->
p˝buf
 = 
c
;

115 
	}
}

117 
	$p¸öt
()

119 i‡(
pc11
.
pc°©e
==
WAITING
) {

120 i‡(
PCADDR
->
p¸c§
&
ERROR
)

122 
pc11
.
pc°©e
 = 
READING
;

124 i‡(
pc11
.
pc°©e
==
READING
) {

125 i‡(
PCADDR
->
p¸c§
&
ERROR
)

126 
pc11
.
pc°©e
 = 
EOF
;

128 
	`putc
(
PCADDR
->
p¸buf
, &
pc11
.
pcö
);

129 i‡(
pc11
.
pcö
.
cc
 < 
PCIHWAT
)

130 
PCADDR
->
p¸c§
 =| 
IENABLE
|
RDRENB
;

132 
	`wakeup
(&
pc11
.
pcö
);

134 
	}
}

136 
	$p˝öt
()

138 
c
;

140 i‡((
c
=
	`gëc
(&
pc11
.
pcout
)) >= 0)

141 
PCADDR
->
p˝buf
 = 
c
;

142 i‡(
pc11
.
pcout
.
cc
 <
PCOLWAT
)

143 
	`wakeup
(&
pc11
.
pcout
);

144 
	}
}

146 
	$pcouçut
(
c
)

148 i‡(
PCADDR
->
p˝c§
&
ERROR
) {

149 
u
.
u_îr‹
 = 
EIO
;

152 i‡(
pc11
.
pcout
.
cc
 >
PCOHWAT
)

153 
	`¶ìp
(&
pc11
.
pcout
, 
PCOPRI
);

154 
	`putc
(
c
, &
pc11
.
pcout
);

155 
	`pc°¨t
();

156 
	}
}

158 
	$p˛ódî
()

160 
i
;

162 
i
 = 100;

164 
	`pcouçut
(0);

165 --
i
);

166 
	}
}

	@usr/sys/dmr/rf.c

9 
	~"../∑øm.h
"

10 
	~"../buf.h
"

11 
	~"../c⁄f.h
"

12 
	~"../u£r.h
"

15 
	mrfcs
;

16 
	mrfwc
;

17 
	mrfba
;

18 
	mrfda
;

19 
	mrfd´
;

22 
devèb
 
	gr·ab
;

23 
buf
 
	gºfbuf
;

25 
	#NRFBLK
 1024

	)

26 
	#RFADDR
 0177460

	)

28 
	#GO
 01

	)

29 
	#RCOM
 02

	)

30 
	#WCOM
 04

	)

31 
	#IENABLE
 0100

	)

33 
	$rf°øãgy
(
abp
)

34 
buf
 *
abp
;

36 
buf
 *
bp
;

38 
bp
 = 
abp
;

39 i‡(
bp
->
b_blkno
 >
NRFBLK
*(bp->
b_dev
.
d_mö‹
+1)) {

40 
bp
->
b_Êags
 =| 
B_ERROR
;

41 
	`iod⁄e
(
bp
);

44 
bp
->
av_f‹w
 = 0;

45 
	`•l5
();

46 i‡(
r·ab
.
d_a˘f
==0)

47 
r·ab
.
d_a˘f
 = 
bp
;

49 
r·ab
.
d_a˘l
->
av_f‹w
 = 
bp
;

50 
r·ab
.
d_a˘l
 = 
bp
;

51 i‡(
r·ab
.
d_a˘ive
==0)

52 
	`rf°¨t
();

53 
	`•l0
();

54 
	}
}

56 
	$rf°¨t
()

58 
buf
 *
bp
;

60 i‡((
bp
 = 
r·ab
.
d_a˘f
) == 0)

62 
r·ab
.
d_a˘ive
++;

63 
RFADDR
->
rfd´
 = 
bp
->
b_blkno
.
hibyã
;

64 
	`dev°¨t
(
bp
, &
RFADDR
->
rfda
, bp->
b_blkno
<<8, 0);

65 
	}
}

67 
	$rföå
()

69 
buf
 *
bp
;

71 i‡(
r·ab
.
d_a˘ive
 == 0)

73 
bp
 = 
r·ab
.
d_a˘f
;

74 
r·ab
.
d_a˘ive
 = 0;

75 i‡(
RFADDR
->
rfcs
 < 0) {

76 
	`devîr‹
(
bp
, 
RFADDR
->
rfcs
);

77 i‡(++
r·ab
.
d_îr˙t
 <= 10) {

78 
	`rf°¨t
();

81 
bp
->
b_Êags
 =| 
B_ERROR
;

83 
r·ab
.
d_îr˙t
 = 0;

84 
r·ab
.
d_a˘f
 = 
bp
->
av_f‹w
;

85 
	`iod⁄e
(
bp
);

86 
	`rf°¨t
();

87 
	}
}

89 
	$r‰ód
(
dev
)

92 
	`physio
(
rf°øãgy
, &
ºfbuf
, 
dev
, 
B_READ
);

93 
	}
}

95 
	$rfwrôe
(
dev
)

98 
	`physio
(
rf°øãgy
, &
ºfbuf
, 
dev
, 
B_WRITE
);

99 
	}
}

	@usr/sys/dmr/rk.c

9 
	~"../∑øm.h
"

10 
	~"../buf.h
"

11 
	~"../c⁄f.h
"

12 
	~"../u£r.h
"

14 
	#RKADDR
 0177400

	)

15 
	#NRK
 4

	)

16 
	#NRKBLK
 4872

	)

18 
	#RESET
 0

	)

19 
	#GO
 01

	)

20 
	#DRESET
 014

	)

21 
	#IENABLE
 0100

	)

22 
	#DRY
 0200

	)

23 
	#ARDY
 0100

	)

24 
	#WLO
 020000

	)

25 
	#CTLRDY
 0200

	)

28 
	mrkds
;

29 
	mrkî
;

30 
	mrkcs
;

31 
	mrkwc
;

32 
	mrkba
;

33 
	mrkda
;

36 
devèb
 
	grkèb
;

37 
buf
 
	gºkbuf
;

39 
	$rk°øãgy
(
abp
)

40 
buf
 *
abp
;

42 
buf
 *
bp
;

43 *
qc
, *
ql
;

44 
d
;

46 
bp
 = 
abp
;

47 
d
 = 
bp
->
b_dev
.
d_mö‹
-7;

48 if(
d
 <= 0)

49 
d
 = 1;

50 i‡(
bp
->
b_blkno
 >
NRKBLK
*
d
) {

51 
bp
->
b_Êags
 =| 
B_ERROR
;

52 
	`iod⁄e
(
bp
);

55 
bp
->
av_f‹w
 = 0;

56 
	`•l5
();

57 i‡(
rkèb
.
d_a˘f
==0)

58 
rkèb
.
d_a˘f
 = 
bp
;

60 
rkèb
.
d_a˘l
->
av_f‹w
 = 
bp
;

61 
rkèb
.
d_a˘l
 = 
bp
;

62 i‡(
rkèb
.
d_a˘ive
==0)

63 
	`rk°¨t
();

64 
	`•l0
();

65 
	}
}

67 
	$rkaddr
(
bp
)

68 
buf
 *
bp
;

70 
buf
 *
p
;

71 
b
;

72 
d
, 
m
;

74 
p
 = 
bp
;

75 
b
 = 
p
->
b_blkno
;

76 
m
 = 
p
->
b_dev
.
d_mö‹
 - 7;

77 if(
m
 <= 0)

78 
d
 = 
p
->
b_dev
.
d_mö‹
;

80 
d
 = 
	`Ãem
(
b
, 
m
);

81 
b
 = 
	`ldiv
(b, 
m
);

83 (
d
<<13 | (
b
/12)<<4 | b%12);

84 
	}
}

86 
	$rk°¨t
()

88 
buf
 *
bp
;

90 i‡((
bp
 = 
rkèb
.
d_a˘f
) == 0)

92 
rkèb
.
d_a˘ive
++;

93 
	`dev°¨t
(
bp
, &
RKADDR
->
rkda
, 
	`rkaddr
(bp), 0);

94 
	}
}

96 
	$rköå
()

98 
buf
 *
bp
;

100 i‡(
rkèb
.
d_a˘ive
 == 0)

102 
bp
 = 
rkèb
.
d_a˘f
;

103 
rkèb
.
d_a˘ive
 = 0;

104 i‡(
RKADDR
->
rkcs
 < 0) {

105 
	`devîr‹
(
bp
, 
RKADDR
->
rkî
);

106 
RKADDR
->
rkcs
 = 
RESET
|
GO
;

107 (
RKADDR
->
rkcs
&
CTLRDY
) == 0) ;

108 i‡(++
rkèb
.
d_îr˙t
 <= 10) {

109 
	`rk°¨t
();

112 
bp
->
b_Êags
 =| 
B_ERROR
;

114 
rkèb
.
d_îr˙t
 = 0;

115 
rkèb
.
d_a˘f
 = 
bp
->
av_f‹w
;

116 
	`iod⁄e
(
bp
);

117 
	`rk°¨t
();

118 
	}
}

120 
	$rkªad
(
dev
)

123 
	`physio
(
rk°øãgy
, &
ºkbuf
, 
dev
, 
B_READ
);

124 
	}
}

126 
	$rkwrôe
(
dev
)

129 
	`physio
(
rk°øãgy
, &
ºkbuf
, 
dev
, 
B_WRITE
);

130 
	}
}

	@usr/sys/dmr/rp.c

9 
	~"../∑øm.h
"

10 
	~"../buf.h
"

11 
	~"../c⁄f.h
"

12 
	~"../u£r.h
"

15 
	mΩds
;

16 
	mΩî
;

17 
	mΩcs
;

18 
	mΩwc
;

19 
	mΩba
;

20 
	mΩˇ
;

21 
	mΩda
;

23 °ru˘ { 
	mlbyã
, 
	mhbyã
; };

25 
	#RPADDR
 0176710

	)

26 
	#NRP
 8

	)

29 *
	mnblocks
;

30 
	mcyloff
;

31 } 
	gΩ_sizes
[] {

42 
devèb
 
	gΩèb
;

43 
buf
 
	gºpbuf
;

45 
	#GO
 01

	)

46 
	#RESET
 0

	)

47 
	#RCOM
 02

	)

48 
	#WCOM
 04

	)

49 
	#HSEEK
 014

	)

51 
	#IENABLE
 0100

	)

52 
	#READY
 0200

	)

54 
	#SUFU
 01000

	)

55 
	#SUSU
 02000

	)

56 
	#SUSI
 04000

	)

57 
	#HNF
 010000

	)

64 
	#åk£c
 
av_back


	)

65 
	#cylö
 
b_ªsid


	)

67 
	$Ω°øãgy
(
abp
)

68 
buf
 *
abp
;

70 
buf
 *
bp
;

71 *
p1
, *
p2
;

73 
bp
 = 
abp
;

74 
p1
 = &
Ω_sizes
[
bp
->
b_dev
.
d_mö‹
&07];

75 i‡(
bp
->
b_dev
.
d_mö‹
 >(
NRP
<<3) ||

76 
bp
->
b_blkno
 >
p1
->
nblocks
) {

77 
bp
->
b_Êags
 =| 
B_ERROR
;

78 
	`iod⁄e
(
bp
);

81 
bp
->
av_f‹w
 = 0;

82 
bp
->
cylö
 = 
p1
->
cyloff
;

83 
p1
 = 
bp
->
b_blkno
;

84 
p2
 = 
	`Ãem
(
p1
, 10);

85 
p1
 = 
	`ldiv
(p1, 10);

86 
bp
->
åk£c
 = (
p1
%20)<<8 | 
p2
;

87 
bp
->
cylö
 =+ 
p1
/20;

88 
	`•l5
();

89 i‡((
p1
 = 
Ωèb
.
d_a˘f
)==0)

90 
Ωèb
.
d_a˘f
 = 
bp
;

92 ; 
p2
 = 
p1
->
av_f‹w
;Ö1 =Ö2) {

93 i‡(
p1
->
cylö
 <
bp
->cylin

94 && 
bp
->
cylö
 < 
p2
->cylin

95 || 
p1
->
cylö
 >
bp
->cylin

96 && 
bp
->
cylö
 > 
p2
->cylin)

99 
bp
->
av_f‹w
 = 
p2
;

100 
p1
->
av_f‹w
 = 
bp
;

102 i‡(
Ωèb
.
d_a˘ive
==0)

103 
	`Ω°¨t
();

104 
	`•l0
();

105 
	}
}

107 
	$Ω°¨t
()

109 
buf
 *
bp
;

111 i‡((
bp
 = 
Ωèb
.
d_a˘f
) == 0)

113 
Ωèb
.
d_a˘ive
++;

114 
RPADDR
->
Ωda
 = 
bp
->
åk£c
;

115 
	`dev°¨t
(
bp
, &
RPADDR
->
Ωˇ
, bp->
cylö
, bp->
b_dev
.
d_mö‹
>>3);

116 
	}
}

118 
	$Ωöå
()

120 
buf
 *
bp
;

121 
˘r
;

123 i‡(
Ωèb
.
d_a˘ive
 == 0)

125 
bp
 = 
Ωèb
.
d_a˘f
;

126 
Ωèb
.
d_a˘ive
 = 0;

127 i‡(
RPADDR
->
Ωcs
 < 0) {

128 
	`devîr‹
(
bp
, 
RPADDR
->
Ωî
);

129 if(
RPADDR
->
Ωds
 & (
SUFU
|
SUSI
|
HNF
)) {

130 
RPADDR
->
Ωcs
.
lbyã
 = 
HSEEK
|
GO
;

131 
˘r
 = 0;

132 (
RPADDR
->
Ωds
&
SUSU
Ë&& --
˘r
);

134 
RPADDR
->
Ωcs
 = 
RESET
|
GO
;

135 
˘r
 = 0;

136 (
RPADDR
->
Ωcs
&
READY
Ë=0 && --
˘r
);

137 i‡(++
Ωèb
.
d_îr˙t
 <= 10) {

138 
	`Ω°¨t
();

141 
bp
->
b_Êags
 =| 
B_ERROR
;

143 
Ωèb
.
d_îr˙t
 = 0;

144 
Ωèb
.
d_a˘f
 = 
bp
->
av_f‹w
;

145 
bp
->
b_ªsid
 = 
RPADDR
->
Ωwc
;

146 
	`iod⁄e
(
bp
);

147 
	`Ω°¨t
();

148 
	}
}

150 
	$Ωªad
(
dev
)

153 if(
	`Ωphys
(
dev
))

154 
	`physio
(
Ω°øãgy
, &
ºpbuf
, 
dev
, 
B_READ
);

155 
	}
}

157 
	$Ωwrôe
(
dev
)

160 if(
	`Ωphys
(
dev
))

161 
	`physio
(
Ω°øãgy
, &
ºpbuf
, 
dev
, 
B_WRITE
);

162 
	}
}

164 
	$Ωphys
(
dev
)

166 
c
;

168 
c
 = 
	`lshi·
(
u
.
u_off£t
, -9);

169 
c
 =+ 
	`ldiv
(
u
.
u_cou¡
+511, 512);

170 if(
c
 > 
Ω_sizes
[
dev
.
d_mö‹
 & 07].
nblocks
) {

171 
u
.
u_îr‹
 = 
ENXIO
;

175 
	}
}

	@usr/sys/dmr/tc.c

9 
	~"../∑øm.h
"

10 
	~"../c⁄f.h
"

11 
	~"../buf.h
"

12 
	~"../u£r.h
"

15 
	mtcc§
;

16 
	mtccm
;

17 
	mtcwc
;

18 
	mtcba
;

19 
	mtcdt
;

22 
devèb
 
	gt˘ab
;

24 
	#TCADDR
 0177340

	)

25 
	#NTCBLK
 578

	)

27 
	#TAPERR
 0100000

	)

28 
	#TREV
 04000

	)

29 
	#READY
 0200

	)

30 
	#IENABLE
 0100

	)

31 
	#UPS
 0200

	)

32 
	#ENDZ
 0100000

	)

33 
	#BLKM
 02000

	)

34 
	#ILGOP
 010000

	)

35 
	#SELERR
 04000

	)

37 
	#SAT
 0

	)

38 
	#RNUM
 02

	)

39 
	#RDATA
 04

	)

40 
	#SST
 010

	)

41 
	#WDATA
 014

	)

42 
	#GO
 01

	)

44 
	#SFORW
 1

	)

45 
	#SREV
 2

	)

46 
	#SIO
 3

	)

48 
	$tc˛o£
(
dev
)

50 
	`bÊush
(
dev
);

51 
	}
}

53 
	$tc°øãgy
(
abp
)

54 
buf
 *
abp
;

56 
buf
 *
bp
;

58 
bp
 = 
abp
;

59 if(
bp
->
b_blkno
 >
NTCBLK
) {

60 
bp
->
b_Êags
 =| 
B_ERROR
;

61 
	`iod⁄e
(
bp
);

64 
bp
->
av_f‹w
 = 0;

65 
	`•l6
();

66 i‡(
t˘ab
.
d_a˘f
==0)

67 
t˘ab
.
d_a˘f
 = 
bp
;

69 
t˘ab
.
d_a˘l
->
av_f‹w
 = 
bp
;

70 
t˘ab
.
d_a˘l
 = 
bp
;

71 i‡(
t˘ab
.
d_a˘ive
==0)

72 
	`tc°¨t
();

73 
	`•l0
();

74 
	}
}

76 
	$tc°¨t
()

78 
buf
 *
bp
;

79 *
tccmp
, 
com
;

81 i‡((
bp
 = 
t˘ab
.
d_a˘f
) == 0)

83 
tccmp
 = &
TCADDR
->
tccm
;

84 i‡(((*
tccmp
).
hibyã
&07Ë!
bp
->
b_dev
.
d_mö‹
)

85 (*
tccmp
).
lobyã
 = 
SAT
|
GO
;

86 
t˘ab
.
d_îr˙t
 = 20;

87 
t˘ab
.
d_a˘ive
 = 
SFORW
;

88 
com
 = (
bp
->
b_dev
.
d_mö‹
<<8Ë| 
IENABLE
|
RNUM
|
GO
;

89 i‡((
TCADDR
->
tcc§
 & 
UPS
) == 0) {

90 
com
 =| 
TREV
;

91 
t˘ab
.
d_a˘ive
 = 
SREV
;

93 *
tccmp
 = 
com
;

94 
	}
}

96 
	$tcöå
()

98 
buf
 *
bp
;

99 *
tccmp
;

100 *
tcdç
;

102 
tccmp
 = &
TCADDR
->
tccm
;

103 
tcdç
 = &
TCADDR
->
tcc§
;

104 
bp
 = 
t˘ab
.
d_a˘f
;

105 i‡(*
tccmp
&
TAPERR
) {

106 if((*
tcdç
 & (
ENDZ
|
BLKM
)) == 0)

107 
	`devîr‹
(
bp
, *
tcdç
);

108 if(*
tcdç
 & (
ILGOP
|
SELERR
))

109 
t˘ab
.
d_îr˙t
 = 0;

110 *
tccmp
 =& ~
TAPERR
;

111 i‡(--
t˘ab
.
d_îr˙t
 <= 0) {

112 
bp
->
b_Êags
 =| 
B_ERROR
;

113 
d⁄e
;

115 i‡(*
tccmp
&
TREV
) {

116 
£tf‹w
:

117 
t˘ab
.
d_a˘ive
 = 
SFORW
;

118 *
tccmp
 =& ~
TREV
;

120 
£tback
:

121 
t˘ab
.
d_a˘ive
 = 
SREV
;

122 *
tccmp
 =| 
TREV
;

124 (*
tccmp
).
lobyã
 = 
IENABLE
|
RNUM
|
GO
;

127 
tcdç
 = &
TCADDR
->
tcdt
;

128 
t˘ab
.
d_a˘ive
) {

130 
SIO
:

131 
d⁄e
:

132 
t˘ab
.
d_a˘ive
 = 0;

133 i‡(
t˘ab
.
d_a˘f
 = 
bp
->
av_f‹w
)

134 
	`tc°¨t
();

136 
TCADDR
->
tccm
.
lobyã
 = 
SAT
|
GO
;

137 
	`iod⁄e
(
bp
);

140 
SFORW
:

141 i‡(*
tcdç
 > 
bp
->
b_blkno
)

142 
£tback
;

143 i‡(*
tcdç
 < 
bp
->
b_blkno
)

144 
£tf‹w
;

145 *--
tcdç
 = 
bp
->
b_addr
;

146 *--
tcdç
 = 
bp
->
b_wcou¡
;

147 
tccmp
->
lobyã
 = (
bp
->
b_Êags
&
B_XMEM
Ë| 
IENABLE
|
GO


148 | (
bp
->
b_Êags
&
B_READ
?
RDATA
:
WDATA
);

149 
t˘ab
.
d_a˘ive
 = 
SIO
;

152 
SREV
:

153 i‡(*
tcdç
+3 > 
bp
->
b_blkno
)

154 
£tback
;

155 
£tf‹w
;

157 
	}
}

	@usr/sys/dmr/tm.c

9 
	~"../∑øm.h
"

10 
	~"../buf.h
"

11 
	~"../c⁄f.h
"

12 
	~"../u£r.h
"

15 
	mtmî
;

16 
	mtmcs
;

17 
	mtmbc
;

18 
	mtmba
;

19 
	mtmdb
;

20 
	mtmrd
;

23 
devèb
 
	gtmèb
;

24 
buf
 
	gπmbuf
;

26 
	gt_›íf
[8];

27 *
	gt_blkno
[8];

28 *
	gt_nxªc
[8];

30 
	#TMADDR
 0172520

	)

32 
	#GO
 01

	)

33 
	#RCOM
 02

	)

34 
	#WCOM
 04

	)

35 
	#WEOF
 06

	)

36 
	#SFORW
 010

	)

37 
	#SREV
 012

	)

38 
	#WIRG
 014

	)

39 
	#REW
 016

	)

40 
	#DENS
 060000

	)

41 
	#IENABLE
 0100

	)

42 
	#CRDY
 0200

	)

43 
	#GAPSD
 010000

	)

44 
	#TUR
 1

	)

45 
	#HARD
 0102200

	)

46 
	#EOF
 0040000

	)

48 
	#SSEEK
 1

	)

49 
	#SIO
 2

	)

51 
	$tm›í
(
dev
, 
Êag
)

53 
dmö‹
;

55 
dmö‹
 = 
dev
.
d_mö‹
;

56 i‡(
t_›íf
[
dmö‹
])

57 
u
.
u_îr‹
 = 
ENXIO
;

59 
t_›íf
[
dmö‹
]++;

60 
t_blkno
[
dmö‹
] = 0;

61 
t_nxªc
[
dmö‹
] = 65535;

63 
	}
}

65 
	$tm˛o£
(
dev
, 
Êag
)

67 
dmö‹
;

69 
dmö‹
 = 
dev
.
d_mö‹
;

70 
t_›íf
[
dmö‹
] = 0;

71 i‡(
Êag
)

72 
	`tcomm™d
(
dmö‹
, 
WEOF
);

73 
	`tcomm™d
(
dmö‹
, 
REW
);

74 
	}
}

76 
	$tcomm™d
(
unô
, 
com
)

78 
lbﬁt
;

80 
tmèb
.
d_a˘ive
 || (
TMADDR
->
tmcs
 & 
CRDY
)==0)

81 
	`¶ìp
(&
lbﬁt
, 1);

82 
TMADDR
->
tmcs
 = 
DENS
|
com
|
GO
 | (
unô
<<8);

83 
	}
}

85 
	$tm°øãgy
(
abp
)

86 
buf
 *
abp
;

88 
buf
 *
bp
;

89 **
p
;

91 
bp
 = 
abp
;

92 
p
 = &
t_nxªc
[
bp
->
b_dev
.
d_mö‹
];

93 i‡(*
p
 <
bp
->
b_blkno
) {

94 i‡(*
p
 < 
bp
->
b_blkno
) {

95 
bp
->
b_Êags
 =| 
B_ERROR
;

96 
	`iod⁄e
(
bp
);

99 i‡(
bp
->
b_Êags
&
B_READ
) {

100 
	`˛rbuf
(
bp
);

101 
	`iod⁄e
(
bp
);

105 i‡((
bp
->
b_Êags
&
B_READ
)==0)

106 *
p
 = 
bp
->
b_blkno
 + 1;

107 
bp
->
av_f‹w
 = 0;

108 
	`•l5
();

109 i‡(
tmèb
.
d_a˘f
==0)

110 
tmèb
.
d_a˘f
 = 
bp
;

112 
tmèb
.
d_a˘l
->
av_f‹w
 = 
bp
;

113 
tmèb
.
d_a˘l
 = 
bp
;

114 i‡(
tmèb
.
d_a˘ive
==0)

115 
	`tm°¨t
();

116 
	`•l0
();

117 
	}
}

119 
	$tm°¨t
()

121 
buf
 *
bp
;

122 
com
;

123 
unô
;

124 *
blkno
;

126 
lo›
:

127 i‡((
bp
 = 
tmèb
.
d_a˘f
) == 0)

129 
unô
 = 
bp
->
b_dev
.
d_mö‹
;

130 
blkno
 = 
t_blkno
[
unô
];

131 i‡(
t_›íf
[
unô
] < 0 || (
TMADDR
->
tmcs
 & 
CRDY
)==0) {

132 
bp
->
b_Êags
 =| 
B_ERROR
;

133 
tmèb
.
d_a˘f
 = 
bp
->
av_f‹w
;

134 
	`iod⁄e
(
bp
);

135 
lo›
;

137 
com
 = (
unô
<<8Ë| (
bp
->
b_Êags
&
B_XMEM
Ë| 
IENABLE
|
DENS
;

138 i‡(
blkno
 !
bp
->
b_blkno
) {

139 
tmèb
.
d_a˘ive
 = 
SSEEK
;

140 i‡(
blkno
 < 
bp
->
b_blkno
) {

141 
com
 =| 
SFORW
|
GO
;

142 
TMADDR
->
tmbc
 = 
blkno
 - 
bp
->
b_blkno
;

144 i‡(
bp
->
b_blkno
 == 0)

145 
com
 =| 
REW
|
GO
;

147 
com
 =| 
SREV
|
GO
;

148 
TMADDR
->
tmbc
 = 
bp
->
b_blkno
 - 
blkno
;

151 
TMADDR
->
tmcs
 = 
com
;

154 
tmèb
.
d_a˘ive
 = 
SIO
;

155 
TMADDR
->
tmbc
 = 
bp
->
b_wcou¡
 << 1;

156 
TMADDR
->
tmba
 = 
bp
->
b_addr
;

157 
TMADDR
->
tmcs
 = 
com
 | ((
bp
->
b_Êags
&
B_READ
)? 
RCOM
|
GO
:

158 ((
tmèb
.
d_îr˙t
)? 
WIRG
|
GO
: 
WCOM
|GO));

159 
	}
}

161 
	$tmöå
()

163 
buf
 *
bp
;

164 
unô
;

166 i‡((
bp
 = 
tmèb
.
d_a˘f
)==0)

168 
unô
 = 
bp
->
b_dev
.
d_mö‹
;

169 i‡(
TMADDR
->
tmcs
 < 0) {

173 
TMADDR
->
tmrd
 & 
GAPSD
) ;

174 i‡((
TMADDR
->
tmî
&(
HARD
|
EOF
))==0 && 
tmèb
.
d_a˘ive
==
SIO
) {

175 i‡(++
tmèb
.
d_îr˙t
 < 10) {

176 
t_blkno
[
unô
]++;

177 
tmèb
.
d_a˘ive
 = 0;

178 
	`tm°¨t
();

182 if(
bp
 !&
πmbuf
 && (
TMADDR
->
tmî
&
EOF
)==0)

183 
t_›íf
[
unô
] = -1;

184 
bp
->
b_Êags
 =| 
B_ERROR
;

185 
tmèb
.
d_a˘ive
 = 
SIO
;

187 i‡(
tmèb
.
d_a˘ive
 =
SIO
) {

188 
tmèb
.
d_îr˙t
 = 0;

189 
t_blkno
[
unô
]++;

190 
tmèb
.
d_a˘f
 = 
bp
->
av_f‹w
;

191 
tmèb
.
d_a˘ive
 = 0;

192 
	`iod⁄e
(
bp
);

193 
bp
->
b_ªsid
 = 
TMADDR
->
tmbc
;

195 
t_blkno
[
unô
] = 
bp
->
b_blkno
;

196 
	`tm°¨t
();

197 
	}
}

199 
	$tmªad
(
dev
)

201 
	`tmphys
(
dev
);

202 
	`physio
(
tm°øãgy
, &
πmbuf
, 
dev
, 
B_READ
);

203 
u
.
u_cou¡
 = -
πmbuf
.
b_ªsid
;

204 
	}
}

206 
	$tmwrôe
(
dev
)

208 
	`tmphys
(
dev
);

209 
	`physio
(
tm°øãgy
, &
πmbuf
, 
dev
, 
B_WRITE
);

210 
u
.
u_cou¡
 = 0;

211 
	}
}

213 
	$tmphys
(
dev
)

215 
unô
, 
a
;

217 
unô
 = 
dev
.
d_mö‹
;

218 
a
 = 
	`lshi·
(
u
.
u_off£t
, -9);

219 
t_blkno
[
unô
] = 
a
;

220 
t_nxªc
[
unô
] = ++
a
;

221 
	}
}

	@usr/sys/dmr/tty.c

8 
	~"../∑øm.h
"

9 
	~"../sy°m.h
"

10 
	~"../u£r.h
"

11 
	~"../ây.h
"

12 
	~"../¥oc.h
"

13 
	~"../öode.h
"

14 
	~"../fûe.h
"

15 
	~"../ªg.h
"

16 
	~"../c⁄f.h
"

19 
	#PS
 0177776

	)

21 
	gm≠èb
[]

41 
	scblock
 {

42 
cblock
 *
	mc_√xt
;

43 
	möfo
[6];

46 
cblock
 
	gc‰ì
[
NCLIST
];

47 
cblock
 *
	gc‰ìli°
;

50 
	mârc§
;

51 
	mârbuf
;

52 
	mâtc§
;

53 
	mâtbuf
;

56 
	$gây
()

58 
v
[3];

59 *
up
, *
vp
;

61 
vp
 = 
v
;

62 
	`sgây
(
vp
);

63 i‡(
u
.
u_îr‹
)

65 
up
 = 
u
.
u_¨g
[0];

66 
	`suw‹d
(
up
, *
vp
++);

67 
	`suw‹d
(++
up
, *
vp
++);

68 
	`suw‹d
(++
up
, *
vp
++);

69 
	}
}

71 
	$°ty
()

73 *
up
;

75 
up
 = 
u
.
u_¨g
[0];

76 
u
.
u_¨g
[0] = 
	`fuw‹d
(
up
);

77 
u
.
u_¨g
[1] = 
	`fuw‹d
(++
up
);

78 
u
.
u_¨g
[2] = 
	`fuw‹d
(++
up
);

79 
	`sgây
(0);

80 
	}
}

82 
	$sgây
(
v
)

84 
fûe
 *
Â
;

85 
öode
 *
ù
;

87 i‡((
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
])Ë=
NULL
)

89 
ù
 = 
Â
->
f_öode
;

90 i‡((
ù
->
i_mode
&
IFMT
Ë!
IFCHR
) {

91 
u
.
u_îr‹
 = 
ENOTTY
;

94 (*
cdevsw
[
ù
->
i_addr
[0].
d_maj‹
].
d_sgây
)(ù->i_addr[0], 
v
);

95 
	}
}

97 
	$wÊushây
(
©p
)

98 
ây
 *
©p
;

100 
ây
 *
ç
;

102 
ç
 = 
©p
;

103 
	`•l5
();

104 
ç
->
t_outq
.
c_cc
)

105 
	`¶ìp
(&
ç
->
t_outq
, 
TTOPRI
);

106 
	`Êushây
(
ç
);

107 
	`•l0
();

108 
	}
}

110 
	$cöô
()

112 
c˝
;

113 
cblock
 *
˝
;

114 
cdevsw
 *
cdp
;

116 
c˝
 = 
c‰ì
;

117 
˝
=(
c˝
+07)&~07; c∞<&
c‰ì
[
NCLIST
-1]; cp++) {

118 
˝
->
c_√xt
 = 
c‰ìli°
;

119 
c‰ìli°
 = 
˝
;

121 
c˝
 = 0;

122 
cdp
 = 
cdevsw
; cdp->
d_›í
; cdp++)

123 
c˝
++;

124 
nchrdev
 = 
c˝
;

125 
	}
}

130 
	$Êushây
(
©p
)

131 
ây
 *
©p
;

133 
ây
 *
ç
;

134 
•s
;

136 
ç
 = 
©p
;

137 
	`gëc
(&
ç
->
t_ˇnq
) >= 0);

138 
	`gëc
(&
ç
->
t_outq
) >= 0);

139 
	`wakeup
(&
ç
->
t_øwq
);

140 
	`wakeup
(&
ç
->
t_outq
);

141 
•s
 = 
PS
->;

142 
	`•l5
();

143 
	`gëc
(&
ç
->
t_øwq
) >= 0);

144 
ç
->
t_dñ˘
 = 0;

145 
PS
->
•s
;

146 
	}
}

152 
	$ˇn⁄
(
©p
)

153 
ây
 *
©p
;

155 *
bp
;

156 *
bp1
;

157 
ây
 *
ç
;

158 
c
;

160 
ç
 = 
©p
;

161 
	`•l5
();

162 
ç
->
t_dñ˘
==0) {

163 i‡((
ç
->
t_°©e
&
CARR_ON
)==0)

165 
	`¶ìp
(&
ç
->
t_øwq
, 
TTIPRI
);

167 
	`•l0
();

168 
lo›
:

169 
bp
 = &
ˇn⁄b
[2];

170 (
c
=
	`gëc
(&
ç
->
t_øwq
)) >= 0) {

171 i‡(
c
==0377) {

172 
ç
->
t_dñ˘
--;

175 i‡((
ç
->
t_Êags
&
RAW
)==0) {

176 i‡(
bp
[-1]!='\\') {

177 i‡(
c
==
ç
->
t_îa£
) {

178 i‡(
bp
 > &
ˇn⁄b
[2])

179 
bp
--;

182 i‡(
c
==
ç
->
t_kûl
)

183 
lo›
;

184 i‡(
c
==
CEOT
)

187 i‡(
m≠èb
[
c
] && (m≠èb[c]==¯|| (
ç
->
t_Êags
&
LCASE
))) {

188 i‡(
bp
[-2] != '\\')

189 
c
 = 
m≠èb
[c];

190 
bp
--;

193 *
bp
++ = 
c
;

194 i‡(
bp
>=
ˇn⁄b
+
CANBSIZ
)

197 
bp1
 = 
bp
;

198 
bp
 = &
ˇn⁄b
[2];

199 
c
 = &
ç
->
t_ˇnq
;

200 
bp
<
bp1
)

201 
	`putc
(*
bp
++, 
c
);

203 
	}
}

210 
	$âyöput
(
ac
, 
©p
)

211 
ây
 *
©p
;

213 
t_Êags
, 
c
;

214 
ây
 *
ç
;

216 
ç
 = 
©p
;

217 
c
 = 
ac
;

218 
t_Êags
 = 
ç
->t_flags;

219 i‡((
c
 =& 0177Ë='\r' && 
t_Êags
&
CRMOD
)

220 
c
 = '\n';

221 i‡((
t_Êags
&
RAW
)==0 && (
c
==
CQUIT
 || c==
CINTR
)) {

222 
	`sig«l
(
ç
, 
c
==
CINTR
? 
SIGINT
:
SIGQIT
);

223 
	`Êushây
(
ç
);

226 i‡(
ç
->
t_øwq
.
c_cc
>=
TTYHOG
) {

227 
	`Êushây
(
ç
);

230 i‡(
t_Êags
&
LCASE
 && 
c
>='A' && c<='Z')

231 
c
 =+ 'a'-'A';

232 
	`putc
(
c
, &
ç
->
t_øwq
);

233 i‡(
t_Êags
&
RAW
 || 
c
=='\n' || c==004) {

234 
	`wakeup
(&
ç
->
t_øwq
);

235 i‡(
	`putc
(0377, &
ç
->
t_øwq
)==0)

236 
ç
->
t_dñ˘
++;

238 i‡(
t_Êags
&
ECHO
) {

239 
	`âyouçut
(
c
, 
ç
);

240 
	`â°¨t
(
ç
);

242 
	}
}

248 
	$âyouçut
(
ac
, 
ç
)

249 
ây
 *
ç
;

251 
c
;

252 
ây
 *
πp
;

253 *
cﬁp
;

254 
˘y≥
;

256 
πp
 = 
ç
;

257 
c
 = 
ac
&0177;

258 i‡(
c
==004 && (
πp
->
t_Êags
&
RAW
)==0)

260 i‡(
c
=='\t' && 
πp
->
t_Êags
&
XTABS
) {

262 
	`âyouçut
(' ', 
πp
);

263 
πp
->
t_cﬁ
&07);

266 i‡(
πp
->
t_Êags
&
LCASE
) {

267 
cﬁp
 = "({)}!|^~'`";

268 *
cﬁp
++)

269 if(
c
 =*
cﬁp
++) {

270 
	`âyouçut
('\\', 
πp
);

271 
c
 = 
cﬁp
[-2];

274 i‡('a'<=
c
 && c<='z')

275 
c
 =+ 'A' - 'a';

277 i‡(
c
=='\n' && 
πp
->
t_Êags
&
CRMOD
)

278 
	`âyouçut
('\r', 
πp
);

279 i‡(
	`putc
(
c
, &
πp
->
t_outq
))

281 
cﬁp
 = &
πp
->
t_cﬁ
;

282 
˘y≥
 = 
∑πab
[
c
];

283 
c
 = 0;

284 
˘y≥
&077) {

288 (*
cﬁp
)++;

296 i‡(*
cﬁp
)

297 (*
cﬁp
)--;

302 i‡(*
cﬁp
)

303 
c
 = 
	`max
((*
cﬁp
>>4) + 3, 6);

304 *
cﬁp
 = 0;

309 i‡((
πp
->
t_Êags
&
NTDELAY
)==0)

310 
c
 = 1 - (*
cﬁp
 | ~07);

311 *
cﬁp
 =| 07;

312 (*
cﬁp
)++;

317 
c
 = 0177;

322 
c
 = 6;

323 *
cﬁp
 = 0;

325 i‡(
c
 && (
πp
->
t_Êags
&
NODELAY
)==0)

326 
	`putc
(
c
|0200, &
πp
->
t_outq
);

327 
	}
}

329 
	$âr°π
(
©p
)

331 
ây
 *
ç
;

333 
ç
 = 
©p
;

334 
ç
->
t_°©e
 =& ~
TIMEOUT
;

335 
	`â°¨t
(
ç
);

336 
	}
}

338 
	$â°¨t
(
©p
)

339 
ây
 *
©p
;

341 *
addr
, 
c
;

342 
ây
 *
ç
;

343 °ru˘ { (*
func
)(); };

345 
ç
 = 
©p
;

346 
addr
 = 
ç
->
t_addr
;

347 i‡(
ç
->
t_°©e
&
SSTART
) {

348 (*
addr
.
func
)(
ç
);

351 i‡((
addr
->
âtc§
&
DONE
)==0 || 
ç
->
t_°©e
&
TIMEOUT
)

353 i‡((
c
=
	`gëc
(&
ç
->
t_outq
)) >= 0) {

354 i‡(
c
<=0177)

355 
addr
->
âtbuf
 = 
c
 | (
∑πab
[c]&0200);

357 
	`timeout
(
âr°π
, 
ç
, 
c
&0177);

358 
ç
->
t_°©e
 =| 
TIMEOUT
;

361 
	}
}

363 
	$âªad
(
©p
)

364 
ây
 *
©p
;

366 
ây
 *
ç
;

368 
ç
 = 
©p
;

369 i‡(
ç
->
t_ˇnq
.
c_cc
 || 
	`ˇn⁄
(tp))

370 
ç
->
t_ˇnq
.
c_cc
 && 
	`∑ssc
(
	`gëc
(&tp->t_canq))>=0);

371 
	}
}

373 
	$âwrôe
(
©p
)

374 
ây
 *
©p
;

376 
ây
 *
ç
;

377 
c
;

379 
ç
 = 
©p
;

380 (
c
=
	`˝ass
())>=0) {

381 
	`•l5
();

382 
ç
->
t_outq
.
c_cc
 > 
TTHIWAT
) {

383 
	`â°¨t
(
ç
);

384 
	`¶ìp
(&
ç
->
t_outq
, 
TTOPRI
);

386 
	`•l0
();

387 
	`âyouçut
(
c
, 
ç
);

389 
	`â°¨t
(
ç
);

390 
	}
}

392 
	$ây°ty
(
©p
, 
av
)

393 *
©p
, *
av
;

395 *
ç
, *
v
;

397 
ç
 = 
©p
;

398 if(
v
 = 
av
) {

399 *
v
++ = 
ç
->
t_•ìds
;

400 
v
->
lobyã
 = 
ç
->
t_îa£
;

401 
v
->
hibyã
 = 
ç
->
t_kûl
;

402 
v
[1] = 
ç
->
t_Êags
;

405 
	`wÊushây
(
ç
);

406 
v
 = 
u
.
u_¨g
;

407 
ç
->
t_•ìds
 = *
v
++;

408 
ç
->
t_îa£
 = 
v
->
lobyã
;

409 
ç
->
t_kûl
 = 
v
->
hibyã
;

410 
ç
->
t_Êags
 = 
v
[1];

412 
	}
}

	@usr/sys/dmr/vs.c

9 
	~"../ây.h
"

11 
	#VSADDR
 0174150

	)

12 
	#CDLEAD
 01

	)

13 
	#B1200
 030

	)

14 
	#STOP1
 0400

	)

15 
	#CLSEND
 02

	)

16 
	#RQSEND
 01

	)

18 
	#MAGIC_MAP
 0377

	)

21 
	mv§c§
;

22 
	mv§buf
;

23 
	mvsxc§
;

24 
	mvsxbuf
;

28 
˛i°
 
	miq
;

29 
˛i°
 
	moq
;

30 } 
	gvs
;

32 
	gvsm≠
[] "?0*#?546?213?879?";

34 
	$vs›í
(
dev
)

36 
VSADDR
->
v§c§
 = 
IENABLE
|
B1200
|
CDLEAD
;

37 
VSADDR
->
vsxc§
 = 
STOP1
|
IENABLE
|
B1200
;

38 
	`vsch¨
(0);

39 
	}
}

41 
	$vs˛o£
(
dev
)

43 
VSADDR
->
v§c§
 =& ~
IENABLE
;

44 
	`gëc
(&
vs
.
iq
) >= 0);

45 
	}
}

47 
	$vswrôe
(
dev
)

49 
cou¡
, 
c
;

51 
cou¡
 = 0;

52 (
c
=
	`˝ass
()) >= 0) {

53 i‡(--
cou¡
 <= 0) {

54 
cou¡
 = 60;

55 
	`vsch¨
(0);

57 
	`vsch¨
(
c
);

59 
	`vsch¨
(0);

60 
	}
}

62 
	$vsch¨
(
c
)

65 
c
 =^ 
MAGIC_MAP
;

66 
	`•l5
();

67 
vs
.
oq
.
c_cc
 > 60) {

68 
	`vsxöå
();

69 
	`¶ìp
(&
vs
.
oq
, 
TTIPRI
);

71 
	`putc
(
c
, &
vs
.
oq
);

72 
	`vsxöå
();

73 
	`•l0
();

74 
	}
}

76 
	$vsxöå
()

78 
lch¨
;

79 
c
;

80 *
xc§
;

82 
xc§
 = &
VSADDR
->
vsxc§
;

83 i‡(*
xc§
&
DONE
) {

84 i‡(
lch¨
==
MAGIC_MAP
) {

85 *
xc§
 =& ~
RQSEND
;

86 
lch¨
 = 0;

87 i‡(
vs
.
oq
.
c_cc
==0)

88 
wake
;

90 i‡((*
xc§
&
CLSEND
) == 0) {

91 *
xc§
 =& ~
RQSEND
;

92 *
xc§
 =| 
RQSEND
;

93 i‡((*
xc§
&
CLSEND
) == 0)

94 
wake
;

96 i‡((
c
 = 
	`gëc
(&
vs
.
oq
)) >= 0)

97 
VSADDR
->
vsxbuf
 = 
lch¨
 = 
c
;

98 i‡(
vs
.
oq
.
c_cc
 <= 15)

99 
wake
:

100 
	`wakeup
(&
vs
.
oq
);

102 
	}
}

104 
	$v§ód
(
dev
)

106 
c
;

108 
	`•l5
();

109 (
c
 = 
	`gëc
(&
vs
.
iq
)) < 0)

110 
	`¶ìp
(&
vs
.
iq
, 
TTIPRI
);

111 
	`•l0
();

112 
	`∑ssc
(
vsm≠
[
c
&017]);

113 
	}
}

115 
	$v§öå
()

117 
c
;

119 
c
 = 
VSADDR
->
v§buf
;

120 i‡(
vs
.
iq
.
c_cc
<=10)

121 
	`putc
(
c
, &
vs
.
iq
);

122 
	`wakeup
(&
vs
.
iq
);

123 
	}
}

	@usr/sys/dmr/vt.c

9 
	~"../∑øm.h
"

10 
	~"../u£r.h
"

12 
	gvtÊag
;

14 
	svåeg
 {

15 
	mc§
;

16 
	mbuf
;

19 
	#VTADDR
 0167770

	)

20 
	#RQINT
 01

	)

21 
	#BIENABL
 040

	)

22 
	#SEOF
 0100000

	)

23 
	#VTPRI
 8

	)

25 
	$vt›í
(
dev
, 
Êag
)

27 i‡(!
Êag
)

28 
u
.
u_îr‹
 = 
ENXIO
;

30 
VTADDR
->
c§
 = 
BIENABL
;

31 
	}
}

33 
	$vt˛o£
()

35 
VTADDR
->
buf
 = 
SEOF
;

36 
VTADDR
->
c§
 =| 
RQINT
;

37 
	}
}

39 
	$vtwrôe
()

41 
c
;

42 
cou¡
;

44 (
c
=
	`˝ass
()) >= 0) {

45 
ªåy
:

46 
cou¡
=0; count<10; count++)

47 i‡((
VTADDR
->
c§
&
RQINT
)==0) {

48 
VTADDR
->
buf
 = 
c
&0377;

49 
VTADDR
->
c§
 =| 
RQINT
;

50 
c⁄tö
;

52 
	`•l5
();

53 i‡(
VTADDR
->
c§
&
RQINT
) {

54 
vtÊag
++;

55 
	`¶ìp
(
VTADDR
, 
VTPRI
);

57 
	`•l0
();

58 
ªåy
;

59 
c⁄tö
:;

61 
	}
}

63 
	$vtöå
()

65 
VTADDR
->
c§
 =& ~
RQINT
;

66 i‡(
vtÊag
) {

67 
vtÊag
 = 0;

68 
	`wakeup
(
VTADDR
);

70 
	}
}

	@usr/sys/file.h

1 
	sfûe
 {

2 
	mf_Êag
;

3 
	mf_cou¡
;

4 
	mf_öode
;

5 *
	mf_off£t
[2];

6 } 
	gfûe
[
NFILE
];

9 
	#FREAD
 01

	)

10 
	#FWRITE
 02

	)

11 
	#FPIPE
 04

	)

	@usr/sys/filsys.h

1 
	sfûsys


3 
	ms_isize
;

4 
	ms_fsize
;

5 
	ms_n‰ì
;

6 
	ms_‰ì
[100];

7 
	ms_nöode
;

8 
	ms_öode
[100];

9 
	ms_Êock
;

10 
	ms_ûock
;

11 
	ms_fmod
;

12 
	ms_r⁄ly
;

13 
	ms_time
[2];

	@usr/sys/inode.h

1 
	söode
 {

2 
	mi_Êag
;

3 
	mi_cou¡
;

4 
	mi_dev
;

5 
	mi_numbî
;

6 
	mi_mode
;

7 
	mi_∆ök
;

8 
	mi_uid
;

9 
	mi_gid
;

10 
	mi_size0
;

11 *
	mi_size1
;

12 
	mi_addr
[8];

13 
	mi_œ°r
;

14 } 
	göode
[
NINODE
];

17 
	#ILOCK
 01

	)

18 
	#IUPD
 02

	)

19 
	#IACC
 04

	)

20 
	#IMOUNT
 010

	)

21 
	#IWANT
 020

	)

22 
	#ITEXT
 040

	)

25 
	#IALLOC
 0100000

	)

26 
	#IFMT
 060000

	)

27 
	#IFDIR
 040000

	)

28 
	#IFCHR
 020000

	)

29 
	#IFBLK
 060000

	)

30 
	#ILARG
 010000

	)

31 
	#ISUID
 04000

	)

32 
	#ISGID
 02000

	)

33 
	#ISVTX
 01000

	)

34 
	#IREAD
 0400

	)

35 
	#IWRITE
 0200

	)

36 
	#IEXEC
 0100

	)

	@usr/sys/ken/alloc.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../fûsys.h
"

8 
	~"../buf.h
"

9 
	~"../öode.h
"

10 
	~"../u£r.h
"

12 
	$iöô
()

14 *
˝
, *
bp
;

16 
bp
 = 
	`bªad
(
roŸdev
, 1);

17 
˝
 = 
	`gëblk
(
NODEV
);

18 if(
u
.
u_îr‹
)

19 
	`∑nic
("iinit");

20 
	`bc›y
(
bp
->
b_addr
, 
˝
->b_addr, 256);

21 
	`bªl£
(
bp
);

22 
mou¡
[0].
m_buÂ
 = 
˝
;

23 
mou¡
[0].
m_dev
 = 
roŸdev
;

24 
˝
 = cp->
b_addr
;

25 
˝
->
s_Êock
 = 0;

26 
˝
->
s_ûock
 = 0;

27 
˝
->
s_r⁄ly
 = 0;

28 
time
[0] = 
˝
->
s_time
[0];

29 
time
[1] = 
˝
->
s_time
[1];

30 
	}
}

32 
	$Æloc
(
dev
)

34 
bno
;

35 *
bp
, *
ù
, *
Â
;

37 
Â
 = 
	`gëfs
(
dev
);

38 
Â
->
s_Êock
)

39 
	`¶ìp
(&
Â
->
s_Êock
, 
PINOD
);

41 
bno
 = 
Â
->
s_‰ì
[--Â->
s_n‰ì
];

42 if(
bno
 == 0) {

43 
Â
->
s_n‰ì
++;

44 
	`¥dev
("nÿ•a˚", 
dev
);

45 
u
.
u_îr‹
 = 
ENOSPC
;

46 (
NULL
);

48 } 
	`badblock
(
Â
, 
bno
, 
dev
));

49 if(
Â
->
s_n‰ì
 <= 0) {

50 
Â
->
s_Êock
++;

51 
bp
 = 
	`bªad
(
dev
, 
bno
);

52 
ù
 = 
bp
->
b_addr
;

53 
Â
->
s_n‰ì
 = *
ù
++;

54 
	`bc›y
(
ù
, 
Â
->
s_‰ì
, 100);

55 
	`bªl£
(
bp
);

56 
Â
->
s_Êock
 = 0;

57 
	`wakeup
(&
Â
->
s_Êock
);

59 
bp
 = 
	`gëblk
(
dev
, 
bno
);

60 
	`˛rbuf
(
bp
);

61 
Â
->
s_fmod
 = 1;

62 (
bp
);

63 
	}
}

65 
	$‰ì
(
dev
, 
bno
)

67 *
Â
, *
bp
, *
ù
;

69 
Â
 = 
	`gëfs
(
dev
);

70 
Â
->
s_fmod
 = 1;

71 
Â
->
s_Êock
)

72 
	`¶ìp
(&
Â
->
s_Êock
, 
PINOD
);

73 i‡(
	`badblock
(
Â
, 
bno
, 
dev
))

75 if(
Â
->
s_n‰ì
 >= 100) {

76 
Â
->
s_Êock
++;

77 
bp
 = 
	`gëblk
(
dev
, 
bno
);

78 
ù
 = 
bp
->
b_addr
;

79 *
ù
++ = 
Â
->
s_n‰ì
;

80 
	`bc›y
(
Â
->
s_‰ì
, 
ù
, 100);

81 
Â
->
s_n‰ì
 = 0;

82 
	`bwrôe
(
bp
);

83 
Â
->
s_Êock
 = 0;

84 
	`wakeup
(&
Â
->
s_Êock
);

86 
Â
->
s_‰ì
[Â->
s_n‰ì
++] = 
bno
;

87 
Â
->
s_fmod
 = 1;

88 
	}
}

90 
	$badblock
(
aÂ
, 
abn
, 
dev
)

92 
fûsys
 *
Â
;

93 *
bn
;

95 
Â
 = 
aÂ
;

96 
bn
 = 
abn
;

97 i‡(
bn
 < 
Â
->
s_isize
+2 || b¿>Â->
s_fsize
) {

98 
	`¥dev
("bad block", 
dev
);

102 
	}
}

104 
	$üŒoc
(
dev
)

106 *
Â
, *
bp
, *
ù
;

107 
i
, 
j
, 
k
, 
öo
;

109 
Â
 = 
	`gëfs
(
dev
);

110 
Â
->
s_ûock
)

111 
	`¶ìp
(&
Â
->
s_ûock
, 
PINOD
);

112 
lo›
:

113 if(
Â
->
s_nöode
 > 0) {

114 
öo
 = 
Â
->
s_öode
[--Â->
s_nöode
];

115 
ù
 = 
	`igë
(
dev
, 
öo
);

116 if(
ù
->
i_mode
 == 0) {

117 
bp
 = &
ù
->
i_mode
; b∞< &ù->
i_addr
[8];)

118 *
bp
++ = 0;

119 
Â
->
s_fmod
 = 1;

120 (
ù
);

122 
	`¥ötf
("busy i\n");

123 
	`ùut
(
ù
);

124 
lo›
;

126 
Â
->
s_ûock
++;

127 
öo
 = 0;

128 
i
=0; i<
Â
->
s_isize
; i++) {

129 
bp
 = 
	`bªad
(
dev
, 
i
+2);

130 
ù
 = 
bp
->
b_addr
;

131 
j
=0; j<256; j=+16) {

132 
öo
++;

133 if(
ù
[
j
] != 0)

135 
k
=0; k<
NINODE
; k++)

136 if(
dev
==
öode
[
k
].
i_dev
 && 
öo
==öode[k].
i_numbî
)

137 
c⁄t
;

138 
Â
->
s_öode
[Â->
s_nöode
++] = 
öo
;

139 if(
Â
->
s_nöode
 >= 100)

141 
c⁄t
:;

143 
	`bªl£
(
bp
);

144 if(
Â
->
s_nöode
 >= 100)

147 if(
Â
->
s_nöode
 <= 0)

148 
	`∑nic
("out of inodes");

149 
Â
->
s_ûock
 = 0;

150 
	`wakeup
(&
Â
->
s_ûock
);

151 
lo›
;

152 
	}
}

154 
	$i‰ì
(
dev
, 
öo
)

156 *
Â
;

158 
Â
 = 
	`gëfs
(
dev
);

159 if(
Â
->
s_ûock
)

161 if(
Â
->
s_nöode
 >= 100)

163 
Â
->
s_öode
[Â->
s_nöode
++] = 
öo
;

164 
Â
->
s_fmod
 = 1;

165 
	}
}

167 
	$gëfs
(
dev
)

169 
mou¡
 *
p
;

170 *
n1
, *
n2
;

172 
p
 = &
mou¡
[0];Ö < &mou¡[
NMOUNT
];Ö++)

173 if(
p
->
m_buÂ
 !
NULL
 &&Ö->
m_dev
 =
dev
) {

174 
p
 =Ö->
m_buÂ
->
b_addr
;

175 
n1
 = 
p
->
s_n‰ì
;

176 
n2
 = 
p
->
s_nöode
;

177 if(
n1
 > 100 || 
n2
 > 100) {

178 
	`¥dev
("bad cou¡", 
dev
);

179 
p
->
s_n‰ì
 = 0;

180 
p
->
s_‰ì
[0] = 0;

181 
p
->
s_nöode
 = 0;

182 
p
->
s_öode
[0] = 0;

184 (
p
);

186 
	`∑nic
("no fs");

187 
	}
}

189 
	$upd©e
()

191 
öode
 *
ù
;

192 
mou¡
 *
mp
;

193 *
bp
;

195 if(
updlock
)

197 
updlock
++;

198 
mp
 = &
mou¡
[0]; m∞< &mou¡[
NMOUNT
]; mp++)

199 if(
mp
->
m_buÂ
 !
NULL
) {

200 
ù
 = 
mp
->
m_buÂ
->
b_addr
;

201 if(
ù
->
s_fmod
==0 || ip->
s_ûock
!=0 ||

202 
ù
->
s_Êock
!=0 || ip->
s_r⁄ly
!=0)

204 
bp
 = 
	`gëblk
(
mp
->
m_dev
, 1);

205 
ù
->
s_fmod
 = 0;

206 
ù
->
s_time
[0] = 
time
[0];

207 
ù
->
s_time
[1] = 
time
[1];

208 
	`bc›y
(
ù
, 
bp
->
b_addr
, 256);

209 
	`bwrôe
(
bp
);

211 
ù
 = &
öode
[0]; i∞< &öode[
NINODE
]; ip++)

212 if((
ù
->
i_Êag
&
ILOCK
) == 0) {

213 
ù
->
i_Êag
 =| 
ILOCK
;

214 
	`iupd©
(
ù
, 
time
);

215 
	`¥ñe
(
ù
);

217 
updlock
 = 0;

218 
	`bÊush
(
NODEV
);

219 
	}
}

	@usr/sys/ken/clock.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../¥oc.h
"

10 
	#UMODE
 0170000

	)

11 
	#CSW
 0177570

	)

12 
	#PS
 0177776

	)

14 
	möãg
;

17 
	$˛ock
(
dev
, 
•
, 
r1
, 
≈s
, 
r0
, 
pc
, 
ps
)

19 
ˇŒo
 *
p1
, *
p2
;

20 
¥oc
 *
µ
;

26 *
lks
 = 0115;

32 
	`di•œy
();

40 if(
ˇŒout
[0].
c_func
 == 0)

41 
out
;

42 
p2
 = &
ˇŒout
[0];

43 
p2
->
c_time
<=0 &&Ö2->
c_func
!=0)

44 
p2
++;

45 
p2
->
c_time
--;

51 if((
ps
&0340) != 0)

52 
out
;

58 
	`•l5
();

59 if(
ˇŒout
[0].
c_time
 <= 0) {

60 
p1
 = &
ˇŒout
[0];

61 
p1
->
c_func
 !0 &&Ö1->
c_time
 <= 0) {

62 (*
p1
->
c_func
)’1->
c_¨g
);

63 
p1
++;

65 
p2
 = &
ˇŒout
[0];

66 
p2
->
c_func
 = 
p1
->c_func) {

67 
p2
->
c_time
 = 
p1
->c_time;

68 
p2
->
c_¨g
 = 
p1
->c_arg;

69 
p1
++;

70 
p2
++;

79 
out
:

80 if((
ps
&
UMODE
) == UMODE) {

81 
u
.
u_utime
++;

82 if(
u
.
u_¥of
[3])

83 
	`öcupc
(
pc
, 
u
.
u_¥of
);

85 
u
.
u_°ime
++;

86 if(++
lbﬁt
 >= 60) {

87 if((
ps
&0340) != 0)

89 
lbﬁt
 =- 60;

90 if(++
time
[1] == 0)

91 ++
time
[0];

92 
	`•l1
();

93 if(
time
[1]==
tout
[1] &&Åime[0]==tout[0])

94 
	`wakeup
(
tout
);

95 if((
time
[1]&03) == 0)

96 
	`wakeup
(&
lbﬁt
);

97 
µ
 = &
¥oc
[0];Ö∞< &¥oc[
NPROC
];Öp++)

98 if(
µ
->
p_time
 != 127)

99 
µ
->
p_time
++;

100 if(
runö
!=0) {

101 
runö
 = 0;

102 
	`wakeup
(&
runö
);

104 if((
ps
&
UMODE
) == UMODE) {

105 
u
.
u_¨0
 = &
r0
;

106 
µ
 = 
u
.
u_¥o˝
;

107 if(
	`issig
())

108 
	`psig
();

109 if(
µ
->
p_¥i
 < 105)

110 
µ
->
p_¥i
++;

111 
	`ßvÂ
();

112 
	`swtch
();

115 
	}
}

117 
	$timeout
(
fun
, 
¨g
, 
tim
)

119 
ˇŒo
 *
p1
, *
p2
;

120 
t
;

121 
s
;

123 
t
 = 
tim
;

124 
s
 = 
PS
->
öãg
;

125 
p1
 = &
ˇŒout
[0];

126 
	`•l7
();

127 
p1
->
c_func
 !0 &&Ö1->
c_time
 <
t
) {

128 
t
 =- 
p1
->
c_time
;

129 
p1
++;

131 
p1
->
c_time
 =- 
t
;

132 
p2
 = 
p1
;

133 
p2
->
c_func
 != 0)

134 
p2
++;

135 
p2
 >
p1
) {

136 (
p2
+1)->
c_time
 =Ö2->c_time;

137 (
p2
+1)->
c_func
 =Ö2->c_func;

138 (
p2
+1)->
c_¨g
 =Ö2->c_arg;

139 
p2
--;

141 
p1
->
c_time
 = 
t
;

142 
p1
->
c_func
 = 
fun
;

143 
p1
->
c_¨g
 = 
¨g
;

144 
PS
->
öãg
 = 
s
;

145 
	}
}

	@usr/sys/ken/fio.c

5 
	~"../∑øm.h
"

6 
	~"../u£r.h
"

7 
	~"../fûsys.h
"

8 
	~"../fûe.h
"

9 
	~"../c⁄f.h
"

10 
	~"../öode.h
"

11 
	~"../ªg.h
"

13 
	$gëf
(
f
)

15 *
Â
, 
rf
;

17 
rf
 = 
f
;

18 if(
rf
<0 ||Ñf>=
NOFILE
)

19 
bad
;

20 
Â
 = 
u
.
u_ofûe
[
rf
];

21 if(
Â
 =
NULL
) {

22 
bad
:

23 
u
.
u_îr‹
 = 
EBADF
;

24 
Â
 = 
NULL
;

26 (
Â
);

27 
	}
}

29 
	$˛o£f
(
Â
)

30 *
Â
;

32 *
rÂ
, *
ù
;

34 
rÂ
 = 
Â
;

35 if(
rÂ
->
f_Êag
&
FPIPE
) {

36 
ù
 = 
rÂ
->
f_öode
;

37 
ù
->
i_mode
 =& ~(
IREAD
|
IWRITE
);

38 
	`wakeup
(
ù
+1);

39 
	`wakeup
(
ù
+2);

41 if(
rÂ
->
f_cou¡
 <= 1)

42 
	`˛o£i
(
rÂ
->
f_öode
,ÑÂ->
f_Êag
&
FWRITE
);

43 
rÂ
->
f_cou¡
--;

44 
	}
}

46 
	$˛o£i
(
ù
, 
rw
)

47 *
ù
;

49 *
rù
;

50 
dev
, 
maj
;

52 
rù
 = 
ù
;

53 
dev
 = 
rù
->
i_addr
[0];

54 
maj
 = 
rù
->
i_addr
[0].
d_maj‹
;

55 if(
rù
->
i_cou¡
 <= 1)

56 
rù
->
i_mode
&
IFMT
) {

58 
IFCHR
:

59 (*
cdevsw
[
maj
].
d_˛o£
)(
dev
, 
rw
);

62 
IFBLK
:

63 (*
bdevsw
[
maj
].
d_˛o£
)(
dev
, 
rw
);

65 
	`ùut
(
rù
);

66 
	}
}

68 
	$›íi
(
ù
, 
rw
)

69 *
ù
;

71 *
rù
;

72 
dev
, 
maj
;

74 
rù
 = 
ù
;

75 
dev
 = 
rù
->
i_addr
[0];

76 
maj
 = 
rù
->
i_addr
[0].
d_maj‹
;

77 
rù
->
i_mode
&
IFMT
) {

79 
IFCHR
:

80 if(
maj
 >
nchrdev
)

81 
bad
;

82 (*
cdevsw
[
maj
].
d_›í
)(
dev
, 
rw
);

85 
IFBLK
:

86 if(
maj
 >
nblkdev
) {

87 
bad
:

88 
u
.
u_îr‹
 = 
ENXIO
;

91 (*
bdevsw
[
maj
].
d_›í
)(
dev
, 
rw
);

93 
	}
}

95 
	$ac˚ss
(
aù
, 
mode
)

96 *
aù
;

98 *
ù
, 
m
;

100 
ù
 = 
aù
;

101 
m
 = 
mode
;

102 if(
m
 =
IWRITE
) {

103 if(
	`gëfs
(
ù
->
i_dev
)->
s_r⁄ly
 != 0) {

104 
u
.
u_îr‹
 = 
EROFS
;

107 if(
ù
->
i_Êag
 & 
ITEXT
) {

108 
u
.
u_îr‹
 = 
ETXTBSY
;

112 if(
u
.
u_uid
 == 0) {

113 if(
m
 =
IEXEC
 && (
ù
->
i_mode
 &

114 (
IEXEC
 | (IEXEC>>3) | (IEXEC>>6))) == 0)

118 if(
u
.
u_uid
 !
ù
->
i_uid
) {

119 
m
 =>> 3;

120 if(
u
.
u_gid
 !
ù
->
i_gid
)

121 
m
 =>> 3;

123 if((
ù
->
i_mode
&
m
) != 0)

125 
u
.
u_îr‹
 = 
EACCES
;

127 
	}
}

129 
	$ow√r
()

131 
öode
 *
ù
;

132 
	`uch¨
();

134 i‡((
ù
 = 
	`«mei
(
uch¨
, 0)Ë=
NULL
)

135 (
NULL
);

136 if(
u
.
u_uid
 =
ù
->
i_uid
)

137 (
ù
);

138 i‡(
	`su£r
())

139 (
ù
);

140 
	`ùut
(
ù
);

141 (
NULL
);

142 
	}
}

144 
	$su£r
()

147 if(
u
.
u_uid
 == 0)

149 
u
.
u_îr‹
 = 
EPERM
;

151 
	}
}

153 
	$uÁŒoc
()

155 
i
;

157 
i
=0; i<
NOFILE
; i++)

158 i‡(
u
.
u_ofûe
[
i
] =
NULL
) {

159 
u
.
u_¨0
[
R0
] = 
i
;

160 (
i
);

162 
u
.
u_îr‹
 = 
EMFILE
;

164 
	}
}

166 
fûe
 *
	gmaxÂ
;

168 
	$ÁŒoc
()

170 
fûe
 *
Â
;

171 
i
;

173 i‡((
i
 = 
	`uÁŒoc
()) < 0)

174 (
NULL
);

175 
Â
 = &
fûe
[0]; f∞< &fûe[
NFILE
]; fp++)

176 i‡(
Â
->
f_cou¡
==0) {

177 
u
.
u_ofûe
[
i
] = 
Â
;

178 
Â
->
f_cou¡
++;

179 
Â
->
f_off£t
[0] = 0;

180 
Â
->
f_off£t
[1] = 0;

181 i‡(
Â
>
maxÂ
)

182 
maxÂ
 = 
Â
;

183 (
Â
);

185 
	`¥ötf
("no file\n");

186 
u
.
u_îr‹
 = 
ENFILE
;

187 (
NULL
);

188 
	}
}

	@usr/sys/ken/iget.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../öode.h
"

9 
	~"../fûsys.h
"

10 
	~"../c⁄f.h
"

11 
	~"../buf.h
"

13 
öode
 *
	gmaxù
;

15 
	$igë
(
dev
, 
öo
)

16 
dev
;

17 
öo
;

19 
öode
 *
p
;

20 *
ù2
;

21 *
ù1
;

22 
mou¡
 *
ù
;

24 
lo›
:

25 
ù
 = 
NULL
;

26 
p
 = &
öode
[0];Ö < &öode[
NINODE
];Ö++) {

27 if(
dev
==
p
->
i_dev
 && 
öo
=ı->
i_numbî
) {

28 if((
p
->
i_Êag
&
ILOCK
) != 0) {

29 
p
->
i_Êag
 =| 
IWANT
;

30 
	`¶ìp
(
p
, 
PINOD
);

31 
lo›
;

33 if((
p
->
i_Êag
&
IMOUNT
) != 0) {

34 
ù
 = &
mou¡
[0]; i∞< &mou¡[
NMOUNT
]; ip++)

35 if(
ù
->
m_öodp
 =
p
) {

36 
dev
 = 
ù
->
m_dev
;

37 
öo
 = 
ROOTINO
;

38 
lo›
;

40 
	`∑nic
("no imt");

42 
p
->
i_cou¡
++;

43 
p
->
i_Êag
 =| 
ILOCK
;

44 (
p
);

46 if(
ù
==
NULL
 && 
p
->
i_cou¡
==0)

47 
ù
 = 
p
;

49 if((
p
=
ù
Ë=
NULL
)

50 
	`∑nic
("no inodes");

51 i‡(
p
>
maxù
)

52 
maxù
 = 
p
;

53 
p
->
i_dev
 = 
dev
;

54 
p
->
i_numbî
 = 
öo
;

55 
p
->
i_Êag
 = 
ILOCK
;

56 
p
->
i_cou¡
++;

57 
p
->
i_œ°r
 = -1;

58 
ù
 = 
	`bªad
(
dev
, 
	`ldiv
(
öo
+31,16));

59 
ù1
 = 
ù
->
b_addr
 + 32*
	`Ãem
(
öo
+31, 16);

60 
ù2
 = &
p
->
i_mode
;

61 
ù2
 < &
p
->
i_addr
[8])

62 *
ù2
++ = *
ù1
++;

63 
	`bªl£
(
ù
);

64 (
p
);

65 
	}
}

67 
	$ùut
(
p
)

68 
öode
 *
p
;

70 *
Ω
;

72 
Ω
 = 
p
;

73 if(
Ω
->
i_cou¡
 == 1) {

74 
Ω
->
i_Êag
 =| 
ILOCK
;

75 if(
Ω
->
i_∆ök
 <= 0) {

76 
	`ôrunc
(
Ω
);

77 
Ω
->
i_mode
 = 0;

78 
	`i‰ì
(
Ω
->
i_dev
,Ñp->
i_numbî
);

80 
	`iupd©
(
Ω
, 
time
);

81 
	`¥ñe
(
Ω
);

82 
Ω
->
i_Êag
 = 0;

83 
Ω
->
i_numbî
 = 0;

85 
Ω
->
i_cou¡
--;

86 
	`¥ñe
(
Ω
);

87 
	}
}

89 
	$iupd©
(
p
, 
tm
)

90 *
p
;

91 *
tm
;

93 *
ù1
, *
ù2
, *
Ω
;

94 *
bp
, 
i
;

96 
Ω
 = 
p
;

97 if((
Ω
->
i_Êag
&(
IUPD
|
IACC
)) != 0) {

98 if(
	`gëfs
(
Ω
->
i_dev
)->
s_r⁄ly
)

100 
i
 = 
Ω
->
i_numbî
+31;

101 
bp
 = 
	`bªad
(
Ω
->
i_dev
, 
	`ldiv
(
i
,16));

102 
ù1
 = 
bp
->
b_addr
 + 32*
	`Ãem
(
i
, 16);

103 
ù2
 = &
Ω
->
i_mode
;

104 
ù2
 < &
Ω
->
i_addr
[8])

105 *
ù1
++ = *
ù2
++;

106 if(
Ω
->
i_Êag
&
IACC
) {

107 *
ù1
++ = 
time
[0];

108 *
ù1
++ = 
time
[1];

110 
ù1
 =+ 2;

111 if(
Ω
->
i_Êag
&
IUPD
) {

112 *
ù1
++ = *
tm
++;

113 *
ù1
++ = *
tm
;

115 
	`bwrôe
(
bp
);

117 
	}
}

119 
	$ôrunc
(
ù
)

120 *
ù
;

122 *
Ω
, *
bp
, *
˝
;

124 
Ω
 = 
ù
;

125 if((
Ω
->
i_mode
&(
IFCHR
&
IFBLK
)) != 0)

127 
ù
 = &
Ω
->
i_addr
[0]; ip < &rp->i_addr[8]; ip++)

128 if(*
ù
) {

129 if((
Ω
->
i_mode
&
ILARG
) != 0) {

130 
bp
 = 
	`bªad
(
Ω
->
i_dev
, *
ù
);

131 
˝
 = 
bp
->
b_addr
; cp < bp->b_addr+512; cp++)

132 if(*
˝
)

133 
	`‰ì
(
Ω
->
i_dev
, *
˝
);

134 
	`bªl£
(
bp
);

136 
	`‰ì
(
Ω
->
i_dev
, *
ù
);

137 *
ù
 = 0;

139 
Ω
->
i_mode
 =& ~
ILARG
;

140 
Ω
->
i_size0
 = 0;

141 
Ω
->
i_size1
 = 0;

142 
Ω
->
i_Êag
 =| 
IUPD
;

143 
	}
}

145 
	$maknode
(
mode
)

147 *
ù
;

149 
ù
 = 
	`üŒoc
(
u
.
u_pdú
->
i_dev
);

150 
ù
->
i_Êag
 =| 
IACC
|
IUPD
;

151 
ù
->
i_mode
 = 
mode
|
IALLOC
;

152 
ù
->
i_∆ök
 = 1;

153 
ù
->
i_uid
 = 
u
.
u_uid
;

154 
ù
->
i_gid
 = 
u
.
u_gid
;

155 
	`wdú
(
ù
);

156 (
ù
);

157 
	}
}

159 
	$wdú
(
ù
)

160 *
ù
;

162 *
˝1
, *
˝2
;

164 
u
.
u_dít
.
u_öo
 = 
ù
->
i_numbî
;

165 
˝1
 = &
u
.
u_dít
.
u_«me
[0];

166 
˝2
 = &
u
.
u_dbuf
[0]; cp2 < &u.u_dbuf[
DIRSIZ
];)

167 *
˝1
++ = *
˝2
++;

168 
u
.
u_cou¡
 = 
DIRSIZ
+2;

169 
u
.
u_£gÊg
 = 1;

170 
u
.
u_ba£
 = &u.
u_dít
;

171 
	`wrôei
(
u
.
u_pdú
);

172 
	`ùut
(
u
.
u_pdú
);

173 
	}
}

	@usr/sys/ken/main.c

5 
	~"../∑øm.h
"

6 
	~"../u£r.h
"

7 
	~"../sy°m.h
"

8 
	~"../¥oc.h
"

9 
	~"../ãxt.h
"

10 
	~"../öode.h
"

11 
	~"../£g.h
"

13 
	glk•
[]

19 
	gicode
[]

34 
	$maö
()

36 
sch¨
;

37 
i1
, *
p
;

43 
updlock
 = 0;

44 
UISA
->
r
[0] = *
ka6
 + 
USIZE
;

45 
UISD
->
r
[0] = 077406;

46 ; 
	`fubyã
(0Ë>0; 
UISA
->
r
[0]++) {

47 
	`˛ór£g
(
UISA
->
r
[0]);

48 
maxmem
++;

49 
	`m‰ì
(
c‹em≠
, 1, 
UISA
->
r
[0]);

51 
	`¥ötf
("mem = %l\n", 
maxmem
*10/32);

52 
maxmem
 = 
	`mö
(maxmem, 
MAXMEM
);

53 
	`m‰ì
(
sw≠m≠
, 
nsw≠
, 
sw∂o
);

59 
UISA
->
r
[7] = 
ka6
[1];

60 
UISD
->
r
[7] = 077406;

61 
p
=
lk•
;;Ö++) {

62 if(*
p
 == 0)

63 
	`∑nic
("no clock");

64 if(
	`fuw‹d
(*
p
) != -1) {

65 
lks
 = *
p
;

74 
¥oc
[0].
p_addr
 = *
ka6
;

75 
¥oc
[0].
p_size
 = 
USIZE
;

76 
¥oc
[0].
p_°©
 = 
SRUN
;

77 
¥oc
[0].
p_Êag
 =| 
SLOAD
|
SSYS
;

78 
u
.
u_¥o˝
 = &
¥oc
[0];

84 
	`suªg
();

85 *
lks
 = 0115;

86 
	`cöô
();

87 
	`böô
();

88 
	`iöô
();

89 
roŸdú
 = 
	`igë
(
roŸdev
, 
ROOTINO
);

90 
roŸdú
->
i_Êag
 =& ~
ILOCK
;

91 
u
.
u_cdú
 = 
	`igë
(
roŸdev
, 
ROOTINO
);

92 
u
.
u_cdú
->
i_Êag
 =& ~
ILOCK
;

100 if(
	`√w¥oc
()) {

101 
	`ex∑nd
(
USIZE
+1);

102 
u
.
u_uiß
[0] = 
USIZE
;

103 
u
.
u_uisd
[0] = 6;

104 
	`suªg
();

105 
	`c›yout
(
icode
, 0, 30);

108 
	`sched
();

109 
	}
}

111 
	$suªg
()

113 *
up
, *
Ω
, 
a
;

115 
a
 = 
u
.
u_¥o˝
->
p_addr
;

116 
up
 = &
u
.
u_uiß
[0];

117 
Ω
 = &
UISA
->
r
[0];

118 
Ω
 < &
UISA
->
r
[8])

119 *
Ω
++ = *
up
++ + 
a
;

120 if((
up
=
u
.
u_¥o˝
->
p_ãxç
Ë!
NULL
)

121 
a
 =- 
up
->
x_ˇddr
;

122 
up
 = &
u
.
u_uisd
[0];

123 
Ω
 = &
UISD
->
r
[0];

124 
Ω
 < &
UISD
->
r
[8]) {

125 *
Ω
 = *
up
++;

126 if((*
Ω
++ & 
WO
) == 0)

127 
Ω
[(
UISA
-
UISD
)/2-1] =- 
a
;

129 
	}
}

131 
	$e°abur
(
¡
, 
nd
, 
ns
)

133 
a
, *
≠
, *
dp
;

135 if(
	`n£g
(
¡
)+n£g(
nd
)+n£g(
ns
Ë> 8 ||Çt+nd+ns+
USIZE
 > 
maxmem
) {

136 
u
.
u_îr‹
 = 
ENOMEM
;

139 
a
 = 0;

140 
≠
 = &
u
.
u_uiß
[0];

141 
dp
 = &
u
.
u_uisd
[0];

142 
¡
 >= 128) {

143 *
dp
++ = (127<<8Ë| 
RO
;

144 *
≠
++ = 
a
;

145 
a
 =+ 128;

146 
¡
 =- 128;

148 if(
¡
) {

149 *
dp
++ = ((
¡
-1)<<8Ë| 
RO
;

150 *
≠
++ = 
a
;

151 
a
 =+ 
¡
;

153 
a
 = 
USIZE
;

154 
nd
 >= 128) {

155 *
dp
++ = (127<<8Ë| 
RW
;

156 *
≠
++ = 
a
;

157 
a
 =+ 128;

158 
nd
 =- 128;

160 if(
nd
) {

161 *
dp
++ = ((
nd
-1)<<8Ë| 
RW
;

162 *
≠
++ = 
a
;

163 
a
 =+ 
nd
;

165 
≠
 < &
u
.
u_uiß
[8]) {

166 *
dp
++ = 0;

167 *
≠
++ = 0;

169 
a
 =+ 
ns
;

170 
ns
 >= 128) {

171 
a
 =- 128;

172 
ns
 =- 128;

173 *--
dp
 = (127<<8Ë| 
RW
;

174 *--
≠
 = 
a
;

176 if(
ns
) {

177 *--
dp
 = ((128-
ns
)<<8Ë| 
RW
 | 
ED
;

178 *--
≠
 = 
a
-128;

180 
	`suªg
();

182 
	}
}

184 
	$n£g
(
n
)

187 ((
n
+127)>>7);

188 
	}
}

	@usr/sys/ken/malloc.c

5 
	sm≠
 {

6 *
	mm_size
;

7 *
	mm_addr
;

10 
	$mÆloc
(
mp
, 
size
)

11 
m≠
 *
mp
;

13 
a
;

14 
m≠
 *
bp
;

16 
bp
 = 
mp
; bp->
m_size
; bp++) {

17 i‡(
bp
->
m_size
 >
size
) {

18 
a
 = 
bp
->
m_addr
;

19 
bp
->
m_addr
 =+ 
size
;

20 i‡((
bp
->
m_size
 =- 
size
) == 0)

22 
bp
++;

23 (
bp
-1)->
m_addr
 = bp->m_addr;

24 } (
bp
-1)->
m_size
 = bp->m_size);

25 (
a
);

29 
	}
}

31 
	$m‰ì
(
mp
, 
size
, 
Ø
)

32 
m≠
 *
mp
;

34 
m≠
 *
bp
;

35 
t
;

36 
a
;

38 
a
 = 
Ø
;

39 
bp
 = 
mp
; bp->
m_addr
<=
a
 && bp->
m_size
!=0; bp++);

40 i‡(
bp
>
mp
 && (bp-1)->
m_addr
+(bp-1)->
m_size
 =
a
) {

41 (
bp
-1)->
m_size
 =+ 
size
;

42 i‡(
a
+
size
 =
bp
->
m_addr
) {

43 (
bp
-1)->
m_size
 =+ bp->m_size;

44 
bp
->
m_size
) {

45 
bp
++;

46 (
bp
-1)->
m_addr
 = bp->m_addr;

47 (
bp
-1)->
m_size
 = bp->m_size;

51 i‡(
a
+
size
 =
bp
->
m_addr
 && bp->
m_size
) {

52 
bp
->
m_addr
 =- 
size
;

53 
bp
->
m_size
 =+ 
size
;

54 } i‡(
size
) do {

55 
t
 = 
bp
->
m_addr
;

56 
bp
->
m_addr
 = 
a
;

57 
a
 = 
t
;

58 
t
 = 
bp
->
m_size
;

59 
bp
->
m_size
 = 
size
;

60 
bp
++;

61 } 
size
 = 
t
);

63 
	}
}

	@usr/sys/ken/nami.c

5 
	~"../∑øm.h
"

6 
	~"../öode.h
"

7 
	~"../u£r.h
"

8 
	~"../sy°m.h
"

9 
	~"../buf.h
"

11 
	$«mei
(
func
, 
Êag
)

12 (*
func
)();

13 
Êag
;

27 
öode
 *
dp
;

28 
c
;

29 *
˝
;

30 
eo
, *
bp
;

37 
dp
 = 
u
.
u_cdú
;

38 if((
c
=(*
func
)()) == '/')

39 
dp
 = 
roŸdú
;

40 
	`igë
(
dp
->
i_dev
, dp->
i_numbî
);

41 
c
 == '/')

42 
c
 = (*
func
)();

43 if(
c
 ='\0' && 
Êag
 != 0) {

44 
u
.
u_îr‹
 = 
ENOENT
;

45 
out
;

48 
˛o›
:

54 if(
u
.
u_îr‹
)

55 
out
;

56 if(
c
 == '\0')

57 (
dp
);

65 if((
dp
->
i_mode
&
IFMT
Ë!
IFDIR
) {

66 
u
.
u_îr‹
 = 
ENOTDIR
;

67 
out
;

70 if(
	`ac˚ss
(
dp
, 
IEXEC
))

71 
out
;

78 
˝
 = &
u
.
u_dbuf
[0];

79 
c
!='/' && c!='\0' && 
u
.
u_îr‹
==0) {

80 if(
˝
 < &
u
.
u_dbuf
[
DIRSIZ
])

81 *
˝
++ = 
c
;

82 
c
 = (*
func
)();

84 
˝
 < &
u
.
u_dbuf
[
DIRSIZ
])

85 *
˝
++ = '\0';

86 
c
 == '/')

87 
c
 = (*
func
)();

88 if(
u
.
u_îr‹
)

89 
out
;

95 
u
.
u_off£t
[1] = 0;

96 
u
.
u_off£t
[0] = 0;

97 
u
.
u_£gÊg
 = 1;

98 
eo
 = 0;

99 
u
.
u_cou¡
 = 
	`ldiv
(
dp
->
i_size1
, 
DIRSIZ
+2);

100 
bp
 = 
NULL
;

102 
ño›
:

103 if(
u
.
u_cou¡
 == 0) {

104 if(
bp
 !
NULL
)

105 
	`bªl£
(
bp
);

106 if(
Êag
==1 && 
c
=='\0') {

107 if(
	`ac˚ss
(
dp
, 
IWRITE
))

108 
out
;

109 
u
.
u_pdú
 = 
dp
;

110 if(
eo
)

111 
u
.
u_off£t
[1] = 
eo
-
DIRSIZ
-2; 

112 
dp
->
i_Êag
 =| 
IUPD
;

113 (
NULL
);

115 
u
.
u_îr‹
 = 
ENOENT
;

116 
out
;

118 if((
u
.
u_off£t
[1]&0777) == 0) {

119 if(
bp
 !
NULL
)

120 
	`bªl£
(
bp
);

121 
bp
 = 
	`bªad
(
dp
->
i_dev
,

122 
	`bm≠
(
dp
, 
	`ldiv
(
u
.
u_off£t
[1], 512)));

124 
	`bc›y
(
bp
->
b_addr
+(
u
.
u_off£t
[1]&0777), &u.
u_dít
, (
DIRSIZ
+2)/2);

125 
u
.
u_off£t
[1] =+ 
DIRSIZ
+2;

126 
u
.
u_cou¡
--;

127 if(
u
.
u_dít
.
u_öo
 == 0) {

128 if(
eo
 == 0)

129 
eo
 = 
u
.
u_off£t
[1];

130 
ño›
;

132 
˝
 = &
u
.
u_dbuf
[0]; c∞< &u.u_dbuf[
DIRSIZ
]; cp++)

133 if(*
˝
 !˝[
u
.
u_dít
.
u_«me
 - u.
u_dbuf
])

134 
ño›
;

135 if(
bp
 !
NULL
)

136 
	`bªl£
(
bp
);

137 if(
Êag
==2 && 
c
=='\0') {

138 if(
	`ac˚ss
(
dp
, 
IWRITE
))

139 
out
;

140 (
dp
);

142 
bp
 = 
dp
->
i_dev
;

143 
	`ùut
(
dp
);

144 
dp
 = 
	`igë
(
bp
, 
u
.
u_dít
.
u_öo
);

145 if(
dp
 =
NULL
)

146 (
NULL
);

147 
˛o›
;

149 
out
:

150 
	`ùut
(
dp
);

151 (
NULL
);

152 
	}
}

154 
	$sch¨
()

157 (*
u
.
u_dúp
++ & 0377);

158 
	}
}

160 
	$uch¨
()

162 
c
;

164 
c
 = 
	`fubyã
(
u
.
u_dúp
++);

165 if(
c
 == -1)

166 
u
.
u_îr‹
 = 
EFAULT
;

167 (
c
);

168 
	}
}

	@usr/sys/ken/pipe.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../öode.h
"

9 
	~"../fûe.h
"

10 
	~"../ªg.h
"

12 
	#PIPSIZ
 4096

	)

13 
	$pùe
()

15 *
ù
, *
rf
, *
wf
;

17 
ù
 = 
	`üŒoc
(
roŸdev
);

18 if(
ù
 =
NULL
)

20 
wf
 = 
	`ÁŒoc
();

21 if(
wf
 =
NULL
) {

22 
	`ùut
(
ù
);

25 
u
.
u_¨0
[
R1
] = u.u_¨0[
R0
];

26 
rf
 = 
	`ÁŒoc
();

27 if(
rf
 =
NULL
) {

28 
wf
->
f_cou¡
 = 0;

29 
u
.
u_ofûe
[u.
u_¨0
[
R1
]] = 
NULL
;

30 
	`ùut
(
ù
);

33 
wf
->
f_Êag
 = 
FWRITE
|
FPIPE
;

34 
wf
->
f_öode
 = 
ù
;

35 
rf
->
f_Êag
 = 
FREAD
|
FPIPE
;

36 
rf
->
f_öode
 = 
ù
;

37 
ù
->
i_cou¡
 = 2;

38 
ù
->
i_Êag
 = 
IACC
|
IUPD
;

39 
ù
->
i_mode
 = 
IALLOC
;

40 
	}
}

42 
	$ªadp
(
Â
)

43 *
Â
;

45 *
Ω
, *
ù
;

47 
Ω
 = 
Â
;

48 
ù
 = 
Ω
->
f_öode
;

50 
lo›
:

51 
	`∂ock
(
ù
);

52 if(
Ω
->
f_off£t
[1] =
ù
->
i_size1
) {

53 if(
Ω
->
f_off£t
[1] != 0) {

54 
Ω
->
f_off£t
[1] = 0;

55 
ù
->
i_size1
 = 0;

56 if(
ù
->
i_mode
&
IWRITE
) {

57 
ù
->
i_mode
 =& ~
IWRITE
;

58 
	`wakeup
(
ù
+1);

61 
	`¥ñe
(
ù
);

62 if(
ù
->
i_cou¡
 < 2)

64 
ù
->
i_mode
 =| 
IREAD
;

65 
	`¶ìp
(
ù
+2, 
PPIPE
);

66 
lo›
;

68 
u
.
u_off£t
[0] = 0;

69 
u
.
u_off£t
[1] = 
Ω
->
f_off£t
[1];

70 
	`ªadi
(
ù
);

71 
Ω
->
f_off£t
[1] = 
u
.
u_off£t
[1];

72 
	`¥ñe
(
ù
);

73 
	}
}

75 
	$wrôï
(
Â
)

77 *
Ω
, *
ù
, 
c
;

79 
Ω
 = 
Â
;

80 
ù
 = 
Ω
->
f_öode
;

81 
c
 = 
u
.
u_cou¡
;

83 
lo›
:

84 
	`∂ock
(
ù
);

85 if(
ù
->
i_cou¡
<2 || 
c
==0) {

86 
	`¥ñe
(
ù
);

87 
u
.
u_cou¡
 = 
c
;

90 if(
ù
->
i_size1
 =
PIPSIZ
) {

91 
ù
->
i_mode
 =| 
IWRITE
;

92 
	`¥ñe
(
ù
);

93 
	`¶ìp
(
ù
+1, 
PPIPE
);

94 
lo›
;

96 
u
.
u_off£t
[0] = 0;

97 
u
.
u_off£t
[1] = 
ù
->
i_size1
;

98 
u
.
u_cou¡
 = 
	`mö
(
c
, 
PIPSIZ
-u.
u_off£t
[1]);

99 
c
 =- 
u
.
u_cou¡
;

100 
	`wrôei
(
ù
);

101 
	`¥ñe
(
ù
);

102 if(
ù
->
i_mode
&
IREAD
) {

103 
ù
->
i_mode
 =& ~
IREAD
;

104 
	`wakeup
(
ù
+2);

106 
lo›
;

107 
	}
}

109 
	$∂ock
(
ù
)

110 *
ù
;

112 *
Ω
;

114 
Ω
 = 
ù
;

115 
Ω
->
i_Êag
&
ILOCK
) {

116 
Ω
->
i_Êag
 =| 
IWANT
;

117 
	`¶ìp
(
Ω
, 
PPIPE
);

119 
Ω
->
i_Êag
 =| 
ILOCK
;

120 
	}
}

122 
	$¥ñe
(
ù
)

123 *
ù
;

125 *
Ω
;

127 
Ω
 = 
ù
;

128 
Ω
->
i_Êag
 =& ~
ILOCK
;

129 if(
Ω
->
i_Êag
&
IWANT
) {

130 
Ω
->
i_Êag
 =& ~
IWANT
;

131 
	`wakeup
(
Ω
);

133 
	}
}

	@usr/sys/ken/prf.c

5 
	~"../∑øm.h
"

6 
	~"../£g.h
"

7 
	~"../buf.h
"

8 
	~"../c⁄f.h
"

10 
	#KL
 0177560

	)

13 
	mr§
;

14 
	mrbr
;

15 
	mx§
;

16 
	mxbr
;

17 
	mcsw
;

20 *
	g∑nic°r
;

22 
	$¥ötf
(
fmt
,
x1
,
x2
,
x3
,
x4
,
x5
,
x6
,
x7
,
x8
,
x9
,
xa
,
xb
,
xc
)

23 
fmt
[];

25 *
s
;

26 *
adx
, 
c
;

28 
adx
 = &
x1
;

29 
lo›
:

30 (
c
 = *
fmt
++) != '%') {

31 if(
c
 == '\0')

33 
	`putch¨
(
c
);

35 
c
 = *
fmt
++;

36 if(
c
 == 'd') {

37 if(*
adx
 < 0) {

38 
	`putch¨
('-');

39 *
adx
 = -*adx;

41 
c
 = 'l';

43 if(
c
 == 'l' || c == 'o')

44 
	`¥öä
(*
adx
, 
c
=='o'? 8: 10);

45 if(
c
 == 'c')

46 
	`putch¨
(*
adx
);

47 if(
c
 == 's') {

48 
s
 = *
adx
;

49 
c
 = *
s
++)

50 
	`putch¨
(
c
);

52 
adx
++;

53 
lo›
;

54 
	}
}

56 
	$¥öä
(
n
, 
b
)

58 
a
;

60 if(
a
 = 
	`ldiv
(
n
, 
b
))

61 
	`¥öä
(
a
, 
b
);

62 
	`putch¨
(
	`Ãem
(
n
, 
b
) + '0');

63 
	}
}

65 
	$putch¨
(
c
)

67 
rc
, 
s
;

69 
rc
 = 
c
;

70 if(
KL
->
csw
 == 0)

72 (
KL
->
x§
&0200) == 0);

73 if(
rc
 == 0)

75 
s
 = 
KL
->
x§
;

76 
KL
->
x§
 = 0;

77 
KL
->
xbr
 = 
rc
;

78 if(
rc
 == '\n') {

79 
	`putch¨
('\r');

80 
	`putch¨
(0177);

81 
	`putch¨
(0177);

83 
	`putch¨
(0);

84 
KL
->
x§
 = 
s
;

85 
	}
}

87 
	$∑nic
(
s
)

88 *
s
;

90 
∑nic°r
 = 
s
;

91 
	`upd©e
();

92 
	`¥ötf
("∑nic: %s\n", 
s
);

94 
	`idÀ
();

95 
	}
}

97 
	$¥dev
(
°r
, 
dev
)

100 
	`¥ötf
("%†⁄ %d/%d\n", 
°r
, 
dev
.
d_maj‹
, dev.
d_mö‹
);

101 
	}
}

103 
	$devîr‹
(
bp
, 
o˘
)

104 *
bp
;

106 *
rbp
;

108 
rbp
 = 
bp
;

109 
	`¥dev
("devîr", 
rbp
->
b_dev
);

110 
	`¥ötf
("b¿%dÉÿ%o\n", 
rbp
->
b_blkno
, 
o˘
);

111 
	}
}

	@usr/sys/ken/rdwri.c

5 
	~"../∑øm.h
"

6 
	~"../öode.h
"

7 
	~"../u£r.h
"

8 
	~"../buf.h
"

9 
	~"../c⁄f.h
"

10 
	~"../sy°m.h
"

12 
	$ªadi
(
aù
)

13 
öode
 *
aù
;

15 *
bp
;

16 
lbn
, 
bn
, 
⁄
;

17 
dn
, 
n
;

18 
öode
 *
ù
;

20 
ù
 = 
aù
;

21 if(
u
.
u_cou¡
 == 0)

23 
ù
->
i_Êag
 =| 
IACC
;

24 if((
ù
->
i_mode
&
IFMT
Ë=
IFCHR
) {

25 (*
cdevsw
[
ù
->
i_addr
[0].
d_maj‹
].
d_ªad
)(ip->i_addr[0]);

30 
lbn
 = 
bn
 = 
	`lshi·
(
u
.
u_off£t
, -9);

31 
⁄
 = 
u
.
u_off£t
[1] & 0777;

32 
n
 = 
	`mö
(512-
⁄
, 
u
.
u_cou¡
);

33 if((
ù
->
i_mode
&
IFMT
Ë!
IFBLK
) {

34 
dn
 = 
	`dpcmp
(
ù
->
i_size0
, ip->
i_size1
,

35 
u
.
u_off£t
[0], u.u_offset[1]);

36 if(
dn
 <= 0)

38 
n
 = 
	`mö
“, 
dn
);

39 i‡((
bn
 = 
	`bm≠
(
ù
, 
lbn
)) == 0)

41 
dn
 = 
ù
->
i_dev
;

43 
dn
 = 
ù
->
i_addr
[0];

44 
øblock
 = 
bn
+1;

46 i‡(
ù
->
i_œ°r
+1 =
lbn
)

47 
bp
 = 
	`bªada
(
dn
, 
bn
, 
øblock
);

49 
bp
 = 
	`bªad
(
dn
, 
bn
);

50 
ù
->
i_œ°r
 = 
lbn
;

51 
	`iomove
(
bp
, 
⁄
, 
n
, 
B_READ
);

52 
	`bªl£
(
bp
);

53 } 
u
.
u_îr‹
==0 && u.
u_cou¡
!=0);

54 
	}
}

56 
	$wrôei
(
aù
)

57 
öode
 *
aù
;

59 *
bp
;

60 
n
, 
⁄
;

61 
dn
, 
bn
;

62 
öode
 *
ù
;

64 
ù
 = 
aù
;

65 
ù
->
i_Êag
 =| 
IACC
|
IUPD
;

66 if((
ù
->
i_mode
&
IFMT
Ë=
IFCHR
) {

67 (*
cdevsw
[
ù
->
i_addr
[0].
d_maj‹
].
d_wrôe
)(ip->i_addr[0]);

70 i‡(
u
.
u_cou¡
 == 0)

74 
bn
 = 
	`lshi·
(
u
.
u_off£t
, -9);

75 
⁄
 = 
u
.
u_off£t
[1] & 0777;

76 
n
 = 
	`mö
(512-
⁄
, 
u
.
u_cou¡
);

77 if((
ù
->
i_mode
&
IFMT
Ë!
IFBLK
) {

78 i‡((
bn
 = 
	`bm≠
(
ù
, bn)) == 0)

80 
dn
 = 
ù
->
i_dev
;

82 
dn
 = 
ù
->
i_addr
[0];

83 if(
n
 == 512)

84 
bp
 = 
	`gëblk
(
dn
, 
bn
); 

85 
bp
 = 
	`bªad
(
dn
, 
bn
);

86 
	`iomove
(
bp
, 
⁄
, 
n
, 
B_WRITE
);

87 if(
u
.
u_îr‹
 != 0)

88 
	`bªl£
(
bp
); 

89 i‡((
u
.
u_off£t
[1]&0777)==0)

90 
	`bawrôe
(
bp
); 

91 
	`bdwrôe
(
bp
);

92 if(
	`dpcmp
(
ù
->
i_size0
, ip->
i_size1
,

93 
u
.
u_off£t
[0], u.u_offset[1]) < 0 &&

94 (
ù
->
i_mode
&(
IFBLK
&
IFCHR
)) == 0) {

95 
ù
->
i_size0
 = 
u
.
u_off£t
[0];

96 
ù
->
i_size1
 = 
u
.
u_off£t
[1];

98 
ù
->
i_Êag
 =| 
IUPD
;

99 } 
u
.
u_îr‹
==0 && u.
u_cou¡
!=0);

100 
	}
}

102 
	$max
(
a
, 
b
)

103 *
a
, *
b
;

106 if(
a
 > 
b
)

107 (
a
);

108 (
b
);

109 
	}
}

111 
	$mö
(
a
, 
b
)

112 *
a
, *
b
;

115 if(
a
 < 
b
)

116 (
a
);

117 (
b
);

118 
	}
}

120 
	$iomove
(
bp
, 
o
, 
™
, 
Êag
)

121 
buf
 *
bp
;

123 *
˝
;

124 
n
, 
t
;

126 
n
 = 
™
;

127 
˝
 = 
bp
->
b_addr
 + 
o
;

128 if(
u
.
u_£gÊg
==0 && ((
n
 | 
˝
 | u.
u_ba£
)&01)==0) {

129 i‡(
Êag
==
B_WRITE
)

130 
˝
 = 
	`c›yö
(
u
.
u_ba£
, cp, 
n
);

132 
˝
 = 
	`c›yout
(˝, 
u
.
u_ba£
, 
n
);

133 i‡(
˝
) {

134 
u
.
u_îr‹
 = 
EFAULT
;

137 
u
.
u_ba£
 =+ 
n
;

138 
	`d∑dd
(
u
.
u_off£t
, 
n
);

139 
u
.
u_cou¡
 =- 
n
;

142 i‡(
Êag
==
B_WRITE
) {

143 
n
--) {

144 i‡((
t
 = 
	`˝ass
()) < 0)

146 *
˝
++ = 
t
;

149 
n
--)

150 if(
	`∑ssc
(*
˝
++) < 0)

152 
	}
}

	@usr/sys/ken/sig.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../¥oc.h
"

9 
	~"../öode.h
"

10 
	~"../ªg.h
"

12 
	#TBIT
 020

	)

14 
	$sig«l
(
ç
, 
sig
)

16 
¥oc
 *
p
;

18 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

19 if(
p
->
p_âyp
==
ç
)

20 
	`psig«l
(
p
, 
sig
);

21 
	}
}

23 
	$psig«l
(
p
, 
sig
)

24 *
p
;

26 *
Ω
;

28 
Ω
 = 
p
;

29 
Ω
->
p_sig
 = 
sig
;

30 if(
Ω
->
p_°©
 =
SWAIT
) {

31 
Ω
->
p_wch™
 = 0;

32 
Ω
->
p_°©
 = 
SRUN
;

33 if(
runout
) {

34 
runout
 = 0;

35 
	`wakeup
(&
runout
);

38 
	}
}

40 
	$issig
()

42 
n
;

44 if(
n
 = 
u
.
u_¥o˝
->
p_sig
)

45 if((
u
.
u_sig«l
[
n
]&1) == 0)

46 (
n
);

48 
	}
}

50 
	$psig
()

52 
n
, 
p
;

53 *
Ω
;

55 
Ω
 = 
u
.
u_¥o˝
;

56 
n
 = 
Ω
->
p_sig
;

57 
Ω
->
p_sig
 = 0;

58 if((
p
=
u
.
u_sig«l
[
n
]) != 0) {

59 
u
.
u_îr‹
 = 0;

60 
u
.
u_sig«l
[
n
] = 0;

61 
	`suw‹d
(
u
.
u_¨0
[
R6
] =- 2, u.u_¨0[
RPS
]);

62 
	`suw‹d
(
u
.
u_¨0
[
R6
] =- 2, u.u_¨0[
R7
]);

63 
u
.
u_¨0
[
RPS
] =& ~
TBIT
;

64 
u
.
u_¨0
[
R7
] = 
p
;

67 
n
) {

69 
SIGQIT
:

70 
SIGINS
:

71 
SIGTRC
:

72 
SIGIOT
:

73 
SIGEMT
:

74 
SIGFPT
:

75 
SIGBUS
:

76 
SIGSEG
:

77 
SIGSYS
:

78 
u
.
u_¨g
[0] = 
n
;

79 if(
	`c‹e
())

80 
n
 =+ 0200;

82 
u
.
u_¨g
[0] = (u.
u_¨0
[
R0
]<<8Ë| 
n
;

83 
	`exô
();

84 
	}
}

86 
	$c‹e
()

88 
s
, *
ù
;

89 
sch¨
;

91 
u
.
u_îr‹
 = 0;

92 
u
.
u_dúp
 = "core";

93 
ù
 = 
	`«mei
(&
sch¨
, 1);

94 if(
ù
 =
NULL
) {

95 if(
u
.
u_îr‹
)

97 
ù
 = 
	`maknode
(0666);

99 if(!
	`ac˚ss
(
ù
, 
IWRITE
)) {

100 
	`ôrunc
(
ù
);

101 
u
.
u_off£t
[0] = 0;

102 
u
.
u_off£t
[1] = 0;

103 
u
.
u_ba£
 = &u;

104 
u
.
u_cou¡
 = 
USIZE
*64;

105 
u
.
u_£gÊg
 = 1;

106 
	`wrôei
(
ù
);

107 
s
 = 
u
.
u_¥o˝
->
p_size
 - 
USIZE
;

108 
	`e°abur
(0, 
s
, 0);

109 
u
.
u_ba£
 = 0;

110 
u
.
u_cou¡
 = 
s
*64;

111 
u
.
u_£gÊg
 = 0;

112 
	`wrôei
(
ù
);

114 
	`ùut
(
ù
);

115 (
u
.
u_îr‹
==0);

116 
	}
}

	@usr/sys/ken/slp.c

5 
	~"../∑øm.h
"

6 
	~"../u£r.h
"

7 
	~"../¥oc.h
"

8 
	~"../ãxt.h
"

9 
	~"../sy°m.h
"

10 
	~"../fûe.h
"

11 
	~"../öode.h
"

12 
	~"../buf.h
"

14 
	#PS
 0177776

	)

16 
	möãg
;

19 
	$¶ìp
(
ch™
, 
¥i
)

21 *
Ω
, 
s
;

23 
u
.
u_d¶ìp
 = 0;

24 
s
 = 
PS
->
öãg
;

25 
Ω
 = 
u
.
u_¥o˝
;

26 if(
¥i
 >= 0) {

27 if(
	`issig
())

28 
psig
;

29 
Ω
->
p_wch™
 = 
ch™
;

30 
Ω
->
p_°©
 = 
SWAIT
;

31 
Ω
->
p_¥i
 = 
¥i
;

32 
	`•l0
();

33 if(
runö
 != 0) {

34 
runö
 = 0;

35 
	`wakeup
(&
runö
);

37 
	`swtch
();

38 if(
	`issig
()) {

39 
psig
:

40 
	`¨ëu
(
u
.
u_qßv
);

44 
Ω
->
p_wch™
 = 
ch™
;

45 
Ω
->
p_°©
 = 
SSLEEP
;

46 
Ω
->
p_¥i
 = 
¥i
;

47 
	`•l0
();

48 
	`swtch
();

50 
PS
->
öãg
 = 
s
;

51 
	}
}

53 
	$wakeup
(
ch™
)

55 
¥oc
 *
p
;

56 
n
, 
c
;

58 
lo›
:

59 
c
 = 
ch™
;

60 
n
 = 0;

61 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

62 if(
p
->
p_wch™
 =
c
) {

63 if(
runout
!=0 && (
p
->
p_Êag
&
SLOAD
)==0) {

64 
runout
 = 0;

65 
n
++;

67 
p
->
p_wch™
 = 0;

68 
p
->
p_°©
 = 
SRUN
;

69 
ruƒun
++;

71 if(
n
) {

72 
ch™
 = &
runout
;

73 
lo›
;

75 
	}
}

77 
	$sched
()

79 
¥oc
 *
p1
;

80 
¥oc
 *
Ω
;

81 
a
, 
n
;

88 
lo›
;

90 
¶o›
:

91 
runö
++;

92 
	`¶ìp
(&
runö
, 
PSWP
);

94 
lo›
:

95 
	`•l6
();

96 
n
 = -1;

97 
Ω
 = &
¥oc
[0];Ñ∞< &¥oc[
NPROC
];Ñp++)

98 if(
Ω
->
p_°©
==
SRUN
 && (Ω->
p_Êag
&
SLOAD
)==0 &&

99 
Ω
->
p_time
 > 
n
) {

100 
p1
 = 
Ω
;

101 
n
 = 
Ω
->
p_time
;

103 if(
n
 == -1) {

104 
runout
++;

105 
	`¶ìp
(&
runout
, 
PSWP
);

106 
lo›
;

113 
	`•l0
();

114 
Ω
 = 
p1
;

115 
a
 = 
Ω
->
p_size
;

116 if((
Ω
Ùp->
p_ãxç
Ë!
NULL
)

117 if(
Ω
->
x_ccou¡
 == 0)

118 
a
 =+ 
Ω
->
x_size
;

119 if((
a
=
	`mÆloc
(
c‹em≠
,á)Ë!
NULL
)

120 
found2
;

127 
	`•l6
();

128 
Ω
 = &
¥oc
[0];Ñ∞< &¥oc[
NPROC
];Ñp++)

129 if((
Ω
->
p_Êag
&(
SSYS
|
SLOCK
|
SLOAD
))==SLOAD &&

130 
Ω
->
p_°©
 =
SWAIT
)

131 
found1
;

140 if(
n
 < 3)

141 
¶o›
;

142 
n
 = -1;

143 
Ω
 = &
¥oc
[0];Ñ∞< &¥oc[
NPROC
];Ñp++)

144 if((
Ω
->
p_Êag
&(
SSYS
|
SLOCK
|
SLOAD
))==SLOAD &&

145 (
Ω
->
p_°©
==
SRUN
 ||Ñp->p_°©==
SSLEEP
) &&

146 
Ω
->
p_time
 > 
n
) {

147 
p1
 = 
Ω
;

148 
n
 = 
Ω
->
p_time
;

150 if(
n
 < 2)

151 
¶o›
;

152 
Ω
 = 
p1
;

158 
found1
:

159 
	`•l0
();

160 
Ω
->
p_Êag
 =& ~
SLOAD
;

161 
	`xsw≠
(
Ω
, 1, 0);

162 
lo›
;

168 
found2
:

169 if((
Ω
=
p1
->
p_ãxç
Ë!
NULL
) {

170 if(
Ω
->
x_ccou¡
 == 0) {

171 if(
	`sw≠
(
Ω
->
x_daddr
, 
a
,Ñp->
x_size
, 
B_READ
))

172 
sw≠î
;

173 
Ω
->
x_ˇddr
 = 
a
;

174 
a
 =+ 
Ω
->
x_size
;

176 
Ω
->
x_ccou¡
++;

178 
Ω
 = 
p1
;

179 if(
	`sw≠
(
Ω
->
p_addr
, 
a
,Ñp->
p_size
, 
B_READ
))

180 
sw≠î
;

181 
	`m‰ì
(
sw≠m≠
, (
Ω
->
p_size
+7)/8,Ñp->
p_addr
);

182 
Ω
->
p_addr
 = 
a
;

183 
Ω
->
p_Êag
 =| 
SLOAD
;

184 
Ω
->
p_time
 = 0;

185 
lo›
;

187 
sw≠î
:

188 
	`∑nic
("swapÉrror");

189 
	}
}

191 
	$swtch
()

193 *
p
;

194 
i
, 
n
;

195 
¥oc
 *
Ω
;

197 if(
p
 =
NULL
)

198 
p
 = &
¥oc
[0];

199 
	`ßvu
(
u
.
u_rßv
);

200 
	`ªtu
(
¥oc
[0].
p_addr
);

202 
lo›
:

203 
Ω
 = 
p
;

204 
p
 = 
NULL
;

205 
n
 = 127;

206 
i
=0; i<
NPROC
; i++) {

207 
Ω
++;

208 if(
Ω
 >&
¥oc
[
NPROC
])

209 
Ω
 = &
¥oc
[0];

210 if(
Ω
->
p_°©
==
SRUN
 && (Ω->
p_Êag
&
SLOAD
)!=0) {

211 if(
Ω
->
p_¥i
 < 
n
) {

212 
p
 = 
Ω
;

213 
n
 = 
Ω
->
p_¥i
;

217 if(
p
 =
NULL
) {

218 
p
 = 
Ω
;

219 
	`idÀ
();

220 
lo›
;

222 
Ω
 = 
p
;

223 
	`ªtu
(
Ω
->
p_addr
);

224 
	`suªg
();

225 if(
Ω
->
p_Êag
&
SSWAP
) {

226 
Ω
->
p_Êag
 =& ~
SSWAP
;

227 
	`¨ëu
(
u
.
u_sßv
);

230 
	}
}

232 
	$√w¥oc
()

234 
a1
, 
a2
;

235 
¥oc
 *
p
, *
up
;

236 
¥oc
 *
Ωp
;

237 *
rù
, 
n
;

239 
Ωp
 = &
¥oc
[0];Ñµ < &¥oc[
NPROC
];Ñpp++)

240 if(
Ωp
->
p_°©
 =
NULL
)

241 
found
;

242 
	`∑nic
("noÖrocs");

244 
found
:

249 
p
 = 
Ωp
;

250 
rù
 = 
u
.
u_¥o˝
;

251 
up
 = 
rù
;

252 
Ωp
->
p_°©
 = 
SRUN
;

253 
Ωp
->
p_Êag
 = 
SLOAD
;

254 
Ωp
->
p_uid
 = 
rù
->p_uid;

255 
Ωp
->
p_âyp
 = 
rù
->p_ttyp;

256 
Ωp
->
p_ãxç
 = 
rù
->p_textp;

257 
Ωp
->
p_pid
 = ++
mpid
;

258 
Ωp
->
p_µid
 = 
rù
->
p_pid
;

259 
Ωp
->
p_time
 = 0;

266 
rù
 = &
u
.
u_ofûe
[0];Ñù < &u.u_ofûe[
NOFILE
];)

267 if((
Ωp
 = *
rù
++Ë!
NULL
)

268 
Ωp
->
f_cou¡
++;

269 if((
Ωp
=
up
->
p_ãxç
Ë!
NULL
) {

270 
Ωp
->
x_cou¡
++;

271 
Ωp
->
x_ccou¡
++;

273 
u
.
u_cdú
->
i_cou¡
++;

280 
	`ßvu
(
u
.
u_rßv
);

281 
Ωp
 = 
p
;

282 
u
.
u_¥o˝
 = 
Ωp
;

283 
rù
 = 
up
;

284 
n
 = 
rù
->
p_size
;

285 
a1
 = 
rù
->
p_addr
;

286 
Ωp
->
p_size
 = 
n
;

287 
a2
 = 
	`mÆloc
(
c‹em≠
, 
n
);

288 if(
a2
 =
NULL
) {

289 
rù
->
p_°©
 = 
SIDL
;

290 
Ωp
->
p_addr
 = 
a1
;

291 
	`ßvu
(
u
.
u_sßv
);

292 
	`xsw≠
(
Ωp
, 0, 0);

293 
Ωp
->
p_Êag
 =| 
SSWAP
;

294 
rù
->
p_°©
 = 
SRUN
;

296 
Ωp
->
p_addr
 = 
a2
;

297 
n
--)

298 
	`c›y£g
(
a1
++, 
a2
++);

300 
u
.
u_¥o˝
 = 
rù
;

302 
	}
}

304 
	$ex∑nd
(
√wsize
)

306 
i
, 
n
;

307 *
p
, 
a1
, 
a2
;

309 
p
 = 
u
.
u_¥o˝
;

310 
n
 = 
p
->
p_size
;

311 
p
->
p_size
 = 
√wsize
;

312 
a1
 = 
p
->
p_addr
;

313 if(
n
 >
√wsize
) {

314 
	`m‰ì
(
c‹em≠
, 
n
-
√wsize
, 
a1
+newsize);

317 
	`ßvu
(
u
.
u_rßv
);

318 
a2
 = 
	`mÆloc
(
c‹em≠
, 
√wsize
);

319 if(
a2
 =
NULL
) {

320 
	`ßvu
(
u
.
u_sßv
);

321 
	`xsw≠
(
p
, 1, 
n
);

322 
p
->
p_Êag
 =| 
SSWAP
;

323 
	`swtch
();

326 
p
->
p_addr
 = 
a2
;

327 
i
=0; i<
n
; i++)

328 
	`c›y£g
(
a1
+
i
, 
a2
++);

329 
	`m‰ì
(
c‹em≠
, 
n
, 
a1
);

330 
	`ªtu
(
p
->
p_addr
);

331 
	`suªg
();

332 
	}
}

	@usr/sys/ken/subr.c

5 
	~"../∑øm.h
"

6 
	~"../c⁄f.h
"

7 
	~"../öode.h
"

8 
	~"../u£r.h
"

9 
	~"../buf.h
"

10 
	~"../sy°m.h
"

12 
	$bm≠
(
ù
, 
bn
)

13 
öode
 *
ù
;

14 
bn
;

16 *
bp
, *
b≠
, 
nb
;

17 *
nbp
, 
d
, 
i
;

19 
d
 = 
ù
->
i_dev
;

21 i‡(
bn
 & ~03777) {

22 
u
.
u_îr‹
 = 
EFBIG
;

25 if((
ù
->
i_mode
&
ILARG
) == 0) {

31 if((
bn
 & ~7) != 0) {

38 i‡((
bp
 = 
	`Æloc
(
d
)Ë=
NULL
)

40 
b≠
 = 
bp
->
b_addr
;

41 
i
=0; i<8; i++) {

42 *
b≠
++ = 
ù
->
i_addr
[
i
];

43 
ù
->
i_addr
[
i
] = 0;

45 
ù
->
i_addr
[0] = 
bp
->
b_blkno
;

46 
	`bdwrôe
(
bp
);

47 
ù
->
i_mode
 =| 
ILARG
;

48 
œrge
;

50 
nb
 = 
ù
->
i_addr
[
bn
];

51 if(
nb
 =0 && (
bp
 = 
	`Æloc
(
d
)Ë!
NULL
) {

52 
	`bdwrôe
(
bp
);

53 
nb
 = 
bp
->
b_blkno
;

54 
ù
->
i_addr
[
bn
] = 
nb
;

55 
ù
->
i_Êag
 =| 
IUPD
;

57 i‡(
bn
<7)

58 
øblock
 = 
ù
->
i_addr
[
bn
+1];

60 
øblock
 = 0;

61 (
nb
);

68 
œrge
:

69 
i
 = 
bn
>>8;

70 if((
nb
=
ù
->
i_addr
[
i
]) == 0) {

71 
ù
->
i_Êag
 =| 
IUPD
;

72 i‡((
bp
 = 
	`Æloc
(
d
)Ë=
NULL
)

74 
nb
 = 
bp
->
b_blkno
;

75 
ù
->
i_addr
[
i
] = 
nb
;

77 
bp
 = 
	`bªad
(
d
, 
nb
);

78 
b≠
 = 
bp
->
b_addr
;

79 
i
 = 
bn
 & 0377;

80 if((
nb
=
b≠
[
i
]Ë=0 && (
nbp
 = 
	`Æloc
(
d
)Ë!
NULL
) {

81 
nb
 = 
nbp
->
b_blkno
;

82 
b≠
[
i
] = 
nb
;

83 
	`bdwrôe
(
nbp
);

84 
	`bdwrôe
(
bp
);

86 
	`bªl£
(
bp
);

87 
øblock
 = 
b≠
[
i
+1];

88 (
nb
);

89 
	}
}

91 
	$∑ssc
(
c
)

92 
c
;

95 if(
u
.
u_£gÊg
)

96 *
u
.
u_ba£
 = 
c
; 

97 if(
	`subyã
(
u
.
u_ba£
, 
c
) < 0) {

98 
u
.
u_îr‹
 = 
EFAULT
;

101 
u
.
u_cou¡
--;

102 if(++
u
.
u_off£t
[1] == 0)

103 
u
.
u_off£t
[0]++;

104 
u
.
u_ba£
++;

105 (
u
.
u_cou¡
 == 0? -1: 0);

106 
	}
}

108 
	$˝ass
()

110 
c
;

112 if(
u
.
u_cou¡
 == 0)

114 if(
u
.
u_£gÊg
)

115 
c
 = *
u
.
u_ba£
; 

116 if((
c
=
	`fubyã
(
u
.
u_ba£
)) < 0) {

117 
u
.
u_îr‹
 = 
EFAULT
;

120 
u
.
u_cou¡
--;

121 if(++
u
.
u_off£t
[1] == 0)

122 
u
.
u_off£t
[0]++;

123 
u
.
u_ba£
++;

124 (
c
&0377);

125 
	}
}

127 
	$nodev
()

130 
u
.
u_îr‹
 = 
ENODEV
;

131 
	}
}

133 
	$nuŒdev
()

135 
	}
}

137 
	$bc›y
(
‰om
, 
to
, 
cou¡
)

138 *
‰om
, *
to
;

140 *
a
, *
b
, 
c
;

142 
a
 = 
‰om
;

143 
b
 = 
to
;

144 
c
 = 
cou¡
;

146 *
b
++ = *
a
++;

147 --
c
);

148 
	}
}

	@usr/sys/ken/sys1.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../¥oc.h
"

9 
	~"../buf.h
"

10 
	~"../ªg.h
"

11 
	~"../öode.h
"

13 
	gªgloc
[8];

15 
	$exec
()

17 
≠
, 
«
, 
nc
, *
bp
;

18 
ts
, 
ds
;

19 
c
, *
ù
;

20 *
˝
;

21 
uch¨
;

29 
ù
 = 
	`«mei
(&
uch¨
, 0);

30 if(
ù
 =
NULL
)

32 
exe˙t
 >
NEXEC
)

33 
	`¶ìp
(&
exe˙t
);

34 
exe˙t
++;

35 
bp
 = 
	`gëblk
(
NODEV
);

36 if(
	`ac˚ss
(
ù
, 
IEXEC
Ë|| (ù->
i_mode
&
IFMT
)!=0)

37 
bad
;

44 
˝
 = 
bp
->
b_addr
;

45 
«
 = 0;

46 
nc
 = 0;

47 
≠
 = 
	`fuw‹d
(
u
.
u_¨g
[1])) {

48 
«
++;

49 if(
≠
 == -1)

50 
bad
;

51 
u
.
u_¨g
[1] =+ 2;

53 
c
 = 
	`fubyã
(
≠
++);

54 if(
c
 == -1)

55 
bad
;

56 *
˝
++ = 
c
;

57 
nc
++;

58 if(
nc
 > 510) {

59 
u
.
u_îr‹
 = 
E2BIG
;

60 
bad
;

62 if(
c
 == 0)

66 if((
nc
&1) != 0) {

67 *
˝
++ = 0;

68 
nc
++;

81 
u
.
u_ba£
 = &u.
u_¨g
[0];

82 
u
.
u_cou¡
 = 8;

83 
u
.
u_off£t
[1] = 0;

84 
u
.
u_off£t
[0] = 0;

85 
u
.
u_£gÊg
 = 1;

86 
	`ªadi
(
ù
);

87 
u
.
u_£gÊg
 = 0;

88 if(
u
.
u_îr‹
)

89 
bad
;

90 if(
u
.
u_¨g
[0] == 0407) {

91 
u
.
u_¨g
[2] =+ u.u_arg[1];

92 
u
.
u_¨g
[1] = 0;

94 if(
u
.
u_¨g
[0] != 0410) {

95 
u
.
u_îr‹
 = 
ENOEXEC
;

96 
bad
;

98 if(
u
.
u_¨g
[1]!=0 && (
ù
->
i_Êag
&
ITEXT
)==0 && ip->
i_cou¡
!=1) {

99 
u
.
u_îr‹
 = 
ETXTBSY
;

100 
bad
;

109 
ts
 = ((
u
.
u_¨g
[1]+63)>>6) & 01777;

110 
ds
 = ((
u
.
u_¨g
[2]+u.u_arg[3]+63)>>6) & 01777;

111 if(
	`e°abur
(
ts
, 
ds
, 
SSIZE
))

112 
bad
;

120 
u
.
u_¥of
[3] = 0;

121 
	`x‰ì
();

122 
	`ex∑nd
(
USIZE
);

123 
	`xÆloc
(
ù
);

124 
c
 = 
USIZE
+
ds
+
SSIZE
;

125 
	`ex∑nd
(
c
);

126 --
c
 >
USIZE
)

127 
	`˛ór£g
(
u
.
u_¥o˝
->
p_addr
+
c
);

133 
	`e°abur
(0, 
ds
, 0);

134 
u
.
u_ba£
 = 0;

135 
u
.
u_off£t
[1] = 020+u.
u_¨g
[1];

136 
u
.
u_cou¡
 = u.
u_¨g
[2];

137 
	`ªadi
(
ù
);

143 
u
.
u_tsize
 = 
ts
;

144 
u
.
u_dsize
 = 
ds
;

145 
u
.
u_ssize
 = 
SSIZE
;

146 
	`e°abur
(
u
.
u_tsize
, u.
u_dsize
, u.
u_ssize
);

147 
˝
 = 
bp
->
b_addr
;

148 
≠
 = -
nc
 - 
«
*2 - 4;

149 
u
.
u_¨0
[
R6
] = 
≠
;

150 
	`suw‹d
(
≠
, 
«
);

151 
c
 = -
nc
;

152 
«
--) {

153 
	`suw‹d
(
≠
=+2, 
c
);

155 
	`subyã
(
c
++, *
˝
);

156 *
˝
++);

158 
	`suw‹d
(
≠
+2, -1);

164 if(
ù
->
i_mode
&
ISUID
)

165 if(
u
.
u_uid
 != 0) {

166 
u
.
u_uid
 = 
ù
->
i_uid
;

167 
u
.
u_¥o˝
->
p_uid
 = 
ù
->
i_uid
;

169 if(
ù
->
i_mode
&
ISGID
)

170 
u
.
u_gid
 = 
ù
->
i_gid
;

176 
c
 = 
ù
;

177 
ù
 = &
u
.
u_sig«l
[0]; i∞< &u.u_sig«l[
NSIG
]; ip++)

178 if((*
ù
 & 1) == 0)

179 *
ù
 = 0;

180 
˝
 = &
ªgloc
[0]; cp < &regloc[6];)

181 
u
.
u_¨0
[*
˝
++] = 0;

182 
u
.
u_¨0
[
R7
] = 0;

183 
ù
 = &
u
.
u_fßv
[0]; ip < &u.u_fsav[25];)

184 *
ù
++ = 0;

185 
ù
 = 
c
;

187 
bad
:

188 
	`ùut
(
ù
);

189 
	`bªl£
(
bp
);

190 if(
exe˙t
 >
NEXEC
)

191 
	`wakeup
(&
exe˙t
);

192 
exe˙t
--;

193 
	}
}

195 
	$ªxô
()

198 
u
.
u_¨g
[0] = u.
u_¨0
[
R0
] << 8;

199 
	`exô
();

200 
	}
}

202 
	$exô
()

204 *
q
, 
a
;

205 
¥oc
 *
p
;

207 
q
 = &
u
.
u_sig«l
[0]; q < &u.u_sig«l[
NSIG
];)

208 *
q
++ = 1;

209 
q
 = &
u
.
u_ofûe
[0]; q < &u.u_ofûe[
NOFILE
]; q++)

210 if(
a
 = *
q
) {

211 *
q
 = 
NULL
;

212 
	`˛o£f
(
a
);

214 
	`ùut
(
u
.
u_cdú
);

215 
	`x‰ì
();

216 
a
 = 
	`mÆloc
(
sw≠m≠
, 8);

217 
p
 = 
	`gëblk
(
sw≠dev
, 
a
);

218 
	`bc›y
(&
u
, 
p
->
b_addr
, 256);

219 
	`bwrôe
(
p
);

220 
q
 = 
u
.
u_¥o˝
;

221 
	`m‰ì
(
c‹em≠
, 
q
->
p_size
, q->
p_addr
);

222 
q
->
p_addr
 = 
a
;

223 
q
->
p_°©
 = 
SZOMB
;

225 
lo›
:

226 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

227 if(
q
->
p_µid
 =
p
->
p_pid
) {

228 
	`wakeup
(&
¥oc
[1]);

229 
	`wakeup
(
p
);

230 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

231 if(
q
->
p_pid
 =
p
->
p_µid
)

232 
p
->
p_µid
 = 1;

233 
	`swtch
();

236 if(
q
->
p_µid
 == 1)

237 
	`∑nic
("no initÖroc");

238 
q
->
p_µid
 = 1;

239 
lo›
;

240 
	}
}

242 
	$waô
()

244 
f
, *
bp
;

245 
¥oc
 *
p
;

247 
f
 = 0;

249 
lo›
:

250 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

251 if(
p
->
p_µid
 =
u
.
u_¥o˝
->
p_pid
) {

252 
f
++;

253 if(
p
->
p_°©
 =
SZOMB
) {

254 
u
.
u_¨0
[
R0
] = 
p
->
p_pid
;

255 
bp
 = 
	`bªad
(
sw≠dev
, 
f
=
p
->
p_addr
);

256 
	`m‰ì
(
sw≠m≠
, 8, 
f
);

257 
p
->
p_°©
 = 
NULL
;

258 
p
->
p_pid
 = 0;

259 
p
->
p_µid
 = 0;

260 
p
->
p_sig
 = 0;

261 
p
->
p_âyp
 = 0;

262 
p
->
p_Êag
 = 0;

263 
p
 = 
bp
->
b_addr
;

264 
u
.
u_c°ime
[0] =+ 
p
->u_cstime[0];

265 
	`d∑dd
(
u
.
u_c°ime
, 
p
->u_cstime[1]);

266 
	`d∑dd
(
u
.
u_c°ime
, 
p
->
u_°ime
);

267 
u
.
u_cutime
[0] =+ 
p
->u_cutime[0];

268 
	`d∑dd
(
u
.
u_cutime
, 
p
->u_cutime[1]);

269 
	`d∑dd
(
u
.
u_cutime
, 
p
->
u_utime
);

270 
u
.
u_¨0
[
R1
] = 
p
->
u_¨g
[0];

271 
	`bªl£
(
bp
);

275 if(
f
) {

276 
	`¶ìp
(
u
.
u_¥o˝
, 
PWAIT
);

277 
lo›
;

279 
u
.
u_îr‹
 = 
ECHILD
;

280 
	}
}

282 
	$f‹k
()

284 
¥oc
 *
p1
, *
p2
;

286 
p1
 = 
u
.
u_¥o˝
;

287 
p2
 = &
¥oc
[0];Ö2 < &¥oc[
NPROC
];Ö2++)

288 if(
p2
->
p_°©
 =
NULL
)

289 
found
;

290 
u
.
u_îr‹
 = 
EAGAIN
;

291 
out
;

293 
found
:

294 if(
	`√w¥oc
()) {

295 
u
.
u_¨0
[
R0
] = 
p1
->
p_pid
;

296 
u
.
u_c°ime
[0] = 0;

297 
u
.
u_c°ime
[1] = 0;

298 
u
.
u_°ime
 = 0;

299 
u
.
u_cutime
[0] = 0;

300 
u
.
u_cutime
[1] = 0;

301 
u
.
u_utime
 = 0;

304 
u
.
u_¨0
[
R0
] = 
p2
->
p_pid
;

306 
out
:

307 
u
.
u_¨0
[
R7
] =+ 2;

308 
	}
}

310 
	$sbªak
()

312 
a
, 
n
, 
d
;

313 
i
;

321 
n
 = (((
u
.
u_¨g
[0]+63)>>6Ë& 01777Ë- 
	`n£g
(u.
u_tsize
)*128;

322 if(
n
 < 0)

323 
n
 = 0;

324 
d
 = 
n
 - 
u
.
u_dsize
;

325 
n
 =+ 
USIZE
+
u
.
u_ssize
;

326 if(
	`e°abur
(
u
.
u_tsize
, u.
u_dsize
+
d
, u.
u_ssize
))

328 
u
.
u_dsize
 =+ 
d
;

329 if(
d
 > 0)

330 
biggî
;

331 
a
 = 
u
.
u_¥o˝
->
p_addr
 + 
n
 - u.
u_ssize
;

332 
i
 = 
n
;

333 
n
 = 
u
.
u_ssize
;

334 
n
--) {

335 
	`c›y£g
(
a
-
d
,á);

336 
a
++;

338 
	`ex∑nd
(
i
);

341 
biggî
:

342 
	`ex∑nd
(
n
);

343 
a
 = 
u
.
u_¥o˝
->
p_addr
 + 
n
;

344 
n
 = 
u
.
u_ssize
;

345 
n
--) {

346 
a
--;

347 
	`c›y£g
(
a
-
d
,á);

349 
d
--)

350 
	`˛ór£g
(--
a
);

351 
	}
}

	@usr/sys/ken/sys2.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../ªg.h
"

9 
	~"../fûe.h
"

10 
	~"../öode.h
"

12 
	$ªad
()

14 
	`rdwr
(
FREAD
);

15 
	}
}

17 
	$wrôe
()

19 
	`rdwr
(
FWRITE
);

20 
	}
}

22 
	$rdwr
(
mode
)

24 *
Â
, 
m
;

26 
m
 = 
mode
;

27 
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
]);

28 if(
Â
 =
NULL
)

30 if((
Â
->
f_Êag
&
m
) == 0) {

31 
u
.
u_îr‹
 = 
EBADF
;

34 
u
.
u_ba£
 = u.
u_¨g
[0];

35 
u
.
u_cou¡
 = u.
u_¨g
[1];

36 
u
.
u_£gÊg
 = 0;

37 if(
Â
->
f_Êag
&
FPIPE
) {

38 if(
m
==
FREAD
)

39 
	`ªadp
(
Â
); 

40 
	`wrôï
(
Â
);

42 
u
.
u_off£t
[1] = 
Â
->
f_off£t
[1];

43 
u
.
u_off£t
[0] = 
Â
->
f_off£t
[0];

44 if(
m
==
FREAD
)

45 
	`ªadi
(
Â
->
f_öode
); 

46 
	`wrôei
(
Â
->
f_öode
);

47 
	`d∑dd
(
Â
->
f_off£t
, 
u
.
u_¨g
[1]-u.
u_cou¡
);

49 
u
.
u_¨0
[
R0
] = u.
u_¨g
[1]-u.
u_cou¡
;

50 
	}
}

52 
	$›í
()

54 *
ù
;

55 
uch¨
;

57 
ù
 = 
	`«mei
(&
uch¨
, 0);

58 if(
ù
 =
NULL
)

60 
u
.
u_¨g
[1]++;

61 
	`›í1
(
ù
, 
u
.
u_¨g
[1], 0);

62 
	}
}

64 
	$¸ót
()

66 *
ù
;

67 
uch¨
;

69 
ù
 = 
	`«mei
(&
uch¨
, 1);

70 if(
ù
 =
NULL
) {

71 if(
u
.
u_îr‹
)

73 
ù
 = 
	`maknode
(
u
.
u_¨g
[1]&07777);

74 
	`›í1
(
ù
, 
FWRITE
, 2);

76 
	`›í1
(
ù
, 
FWRITE
, 1);

77 
	}
}

79 
	$›í1
(
ù
, 
mode
, 
åf
)

80 *
ù
;

82 
fûe
 *
Â
;

83 *
rù
, 
m
;

85 
rù
 = 
ù
;

86 
m
 = 
mode
;

87 if(
åf
 != 2) {

88 if(
m
&
FREAD
)

89 
	`ac˚ss
(
rù
, 
IREAD
);

90 if(
m
&
FWRITE
) {

91 
	`ac˚ss
(
rù
, 
IWRITE
);

92 if((
rù
->
i_mode
&
IFMT
Ë=
IFDIR
)

93 
u
.
u_îr‹
 = 
EISDIR
;

96 if(
u
.
u_îr‹
)

97 
out
;

98 if(
åf
)

99 
	`ôrunc
(
rù
);

100 
	`¥ñe
(
rù
);

101 
	`›íi
(
rù
, 
m
&
FWRITE
);

102 if(
u
.
u_îr‹
)

103 
out
;

104 i‡((
Â
 = 
	`ÁŒoc
()Ë=
NULL
)

105 
out
;

106 
Â
->
f_Êag
 = 
m
&(
FREAD
|
FWRITE
);

107 
Â
->
f_öode
 = 
rù
;

110 
out
:

111 
	`ùut
(
rù
);

112 
	}
}

114 
	$˛o£
()

116 *
Â
;

118 
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
]);

119 if(
Â
 =
NULL
)

121 
u
.
u_ofûe
[u.
u_¨0
[
R0
]] = 
NULL
;

122 
	`˛o£f
(
Â
);

123 
	}
}

125 
	$£ek
()

127 
n
[2];

128 *
Â
, 
t
;

130 
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
]);

131 if(
Â
 =
NULL
)

133 if(
Â
->
f_Êag
&
FPIPE
) {

134 
u
.
u_îr‹
 = 
ESPIPE
;

137 
t
 = 
u
.
u_¨g
[1];

138 if(
t
 > 2) {

139 
n
[1] = 
u
.
u_¨g
[0]<<9;

140 
n
[0] = 
u
.
u_¨g
[0]>>7;

141 if(
t
 == 3)

142 
n
[0] =& 0777;

144 
n
[1] = 
u
.
u_¨g
[0];

145 
n
[0] = 0;

146 if(
t
!=0 && 
n
[1]<0)

147 
n
[0] = -1;

149 
t
) {

153 
n
[0] =+ 
Â
->
f_off£t
[0];

154 
	`d∑dd
(
n
, 
Â
->
f_off£t
[1]);

158 
n
[0] =+ 
Â
->
f_öode
->
i_size0
;

159 
	`d∑dd
(
n
, 
Â
->
f_öode
->
i_size1
);

165 
Â
->
f_off£t
[1] = 
n
[1];

166 
Â
->
f_off£t
[0] = 
n
[0];

167 
	}
}

169 
	$lök
()

171 *
ù
, *
xp
;

172 
uch¨
;

174 
ù
 = 
	`«mei
(&
uch¨
, 0);

175 if(
ù
 =
NULL
)

177 if(
ù
->
i_∆ök
 >= 127) {

178 
u
.
u_îr‹
 = 
EMLINK
;

179 
out
;

181 if((
ù
->
i_mode
&
IFMT
)==
IFDIR
 && !
	`su£r
())

182 
out
;

188 
ù
->
i_Êag
 =& ~
ILOCK
;

189 
u
.
u_dúp
 = u.
u_¨g
[1];

190 
xp
 = 
	`«mei
(&
uch¨
, 1);

191 if(
xp
 !
NULL
) {

192 
u
.
u_îr‹
 = 
EEXIST
;

193 
	`ùut
(
xp
);

195 if(
u
.
u_îr‹
)

196 
out
;

197 if(
u
.
u_pdú
->
i_dev
 !
ù
->i_dev) {

198 
	`ùut
(
u
.
u_pdú
);

199 
u
.
u_îr‹
 = 
EXDEV
;

200 
out
;

202 
	`wdú
(
ù
);

203 
ù
->
i_∆ök
++;

204 
ù
->
i_Êag
 =| 
IUPD
;

206 
out
:

207 
	`ùut
(
ù
);

208 
	}
}

210 
	$mknod
()

212 *
ù
;

213 
uch¨
;

215 if(
	`su£r
()) {

216 
ù
 = 
	`«mei
(&
uch¨
, 1);

217 if(
ù
 !
NULL
) {

218 
u
.
u_îr‹
 = 
EEXIST
;

219 
out
;

222 if(
u
.
u_îr‹
)

224 
ù
 = 
	`maknode
(
u
.
u_¨g
[1]);

225 
ù
->
i_addr
[0] = 
u
.
u_¨g
[2];

227 
out
:

228 
	`ùut
(
ù
);

229 
	}
}

231 
	$s¶ï
()

233 *
d
[2];

235 
	`•l7
();

236 
d
[0] = 
time
[0];

237 
d
[1] = 
time
[1];

238 
	`d∑dd
(
d
, 
u
.
u_¨0
[
R0
]);

240 
	`dpcmp
(
d
[0], d[1], 
time
[0],Åime[1]) > 0) {

241 if(
	`dpcmp
(
tout
[0],Åout[1], 
time
[0],Åime[1]) <= 0 ||

242 
	`dpcmp
(
tout
[0],Åout[1], 
d
[0], d[1]) > 0) {

243 
tout
[0] = 
d
[0];

244 
tout
[1] = 
d
[1];

246 
	`¶ìp
(
tout
, 
PSLEP
);

248 
	`•l0
();

249 
	}
}

	@usr/sys/ken/sys3.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../ªg.h
"

8 
	~"../buf.h
"

9 
	~"../fûsys.h
"

10 
	~"../u£r.h
"

11 
	~"../öode.h
"

12 
	~"../fûe.h
"

13 
	~"../c⁄f.h
"

15 
	$f°©
()

17 *
Â
;

19 
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
]);

20 if(
Â
 =
NULL
)

22 
	`°©1
(
Â
->
f_öode
, 
u
.
u_¨g
[0]);

23 
	}
}

25 
	$°©
()

27 
ù
;

28 
uch¨
;

30 
ù
 = 
	`«mei
(&
uch¨
, 0);

31 if(
ù
 =
NULL
)

33 
	`°©1
(
ù
, 
u
.
u_¨g
[1]);

34 
	`ùut
(
ù
);

35 
	}
}

37 
	$°©1
(
ù
, 
ub
)

38 *
ù
;

40 
i
, *
bp
, *
˝
;

42 
	`iupd©
(
ù
, 
time
);

43 
bp
 = 
	`bªad
(
ù
->
i_dev
, 
	`ldiv
(ù->
i_numbî
+31, 16));

44 
˝
 = 
bp
->
b_addr
 + 32*
	`Ãem
(
ù
->
i_numbî
+31, 16) + 24;

45 
ù
 = &(ù->
i_dev
);

46 
i
=0; i<14; i++) {

47 
	`suw‹d
(
ub
, *
ù
++);

48 
ub
 =+ 2;

50 
i
=0; i<4; i++) {

51 
	`suw‹d
(
ub
, *
˝
++);

52 
ub
 =+ 2;

54 
	`bªl£
(
bp
);

55 
	}
}

57 
	$dup
()

59 
i
, *
Â
;

61 
Â
 = 
	`gëf
(
u
.
u_¨0
[
R0
]);

62 if(
Â
 =
NULL
)

64 i‡((
i
 = 
	`uÁŒoc
()) < 0)

66 
u
.
u_ofûe
[
i
] = 
Â
;

67 
Â
->
f_cou¡
++;

68 
	}
}

70 
	$smou¡
()

72 
d
;

73 *
ù
;

74 
mou¡
 *
mp
, *
smp
;

75 
uch¨
;

77 
d
 = 
	`gëmdev
();

78 if(
u
.
u_îr‹
)

80 
u
.
u_dúp
 = u.
u_¨g
[1];

81 
ù
 = 
	`«mei
(&
uch¨
, 0);

82 if(
ù
 =
NULL
)

84 if(
ù
->
i_cou¡
!=1 || (ù->
i_mode
&(
IFBLK
&
IFCHR
))!=0)

85 
out
;

86 
smp
 = 
NULL
;

87 
mp
 = &
mou¡
[0]; m∞< &mou¡[
NMOUNT
]; mp++) {

88 if(
mp
->
m_buÂ
 !
NULL
) {

89 if(
d
 =
mp
->
m_dev
)

90 
out
;

92 if(
smp
 =
NULL
)

93 
smp
 = 
mp
;

95 if(
smp
 =
NULL
)

96 
out
;

97 
mp
 = 
	`bªad
(
d
, 1);

98 if(
u
.
u_îr‹
) {

99 
	`bªl£
(
mp
);

100 
out1
;

102 
smp
->
m_öodp
 = 
ù
;

103 
smp
->
m_dev
 = 
d
;

104 
smp
->
m_buÂ
 = 
	`gëblk
(
NODEV
);

105 
	`bc›y
(
mp
->
b_addr
, 
smp
->
m_buÂ
->b_addr, 256);

106 
smp
 = smp->
m_buÂ
->
b_addr
;

107 
smp
->
s_ûock
 = 0;

108 
smp
->
s_Êock
 = 0;

109 
smp
->
s_r⁄ly
 = 
u
.
u_¨g
[2] & 1;

110 
	`bªl£
(
mp
);

111 
ù
->
i_Êag
 =| 
IMOUNT
;

112 
	`¥ñe
(
ù
);

115 
out
:

116 
u
.
u_îr‹
 = 
EBUSY
;

117 
out1
:

118 
	`ùut
(
ù
);

119 
	}
}

121 
	$sumou¡
()

123 
d
;

124 
öode
 *
ù
;

125 
mou¡
 *
mp
;

127 
	`upd©e
();

128 
d
 = 
	`gëmdev
();

129 if(
u
.
u_îr‹
)

131 
mp
 = &
mou¡
[0]; m∞< &mou¡[
NMOUNT
]; mp++)

132 if(
mp
->
m_buÂ
!=
NULL
 && 
d
==mp->
m_dev
)

133 
found
;

134 
u
.
u_îr‹
 = 
EINVAL
;

137 
found
:

138 
ù
 = &
öode
[0]; i∞< &öode[
NINODE
]; ip++)

139 if(
ù
->
i_numbî
!=0 && 
d
==ù->
i_dev
) {

140 
u
.
u_îr‹
 = 
EBUSY
;

143 
ù
 = 
mp
->
m_öodp
;

144 
ù
->
i_Êag
 =& ~
IMOUNT
;

145 
	`ùut
(
ù
);

146 
ù
 = 
mp
->
m_buÂ
;

147 
mp
->
m_buÂ
 = 
NULL
;

148 
	`bªl£
(
ù
);

149 
	}
}

151 
	$gëmdev
()

153 
d
, *
ù
;

154 
uch¨
;

156 
ù
 = 
	`«mei
(&
uch¨
, 0);

157 if(
ù
 =
NULL
)

159 if((
ù
->
i_mode
&
IFMT
Ë!
IFBLK
)

160 
u
.
u_îr‹
 = 
ENOTBLK
;

161 
d
 = 
ù
->
i_addr
[0];

162 if(
ù
->
i_addr
[0].
d_maj‹
 >
nblkdev
)

163 
u
.
u_îr‹
 = 
ENXIO
;

164 
	`ùut
(
ù
);

165 (
d
);

166 
	}
}

	@usr/sys/ken/sys4.c

5 
	~"../∑øm.h
"

6 
	~"../u£r.h
"

7 
	~"../ªg.h
"

8 
	~"../öode.h
"

9 
	~"../sy°m.h
"

10 
	~"../¥oc.h
"

12 
	#CSW
 0177570

	)

15 
	mcsw
;

18 
	$gëswô
()

21 
u
.
u_¨0
[
R0
] = 
CSW
->
csw
;

22 
	}
}

24 
	$gtime
()

27 
u
.
u_¨0
[
R0
] = 
time
[0];

28 
u
.
u_¨0
[
R1
] = 
time
[1];

29 
	}
}

31 
	$°ime
()

34 if(
	`su£r
()) {

35 
time
[0] = 
u
.
u_¨0
[
R0
];

36 
time
[1] = 
u
.
u_¨0
[
R1
];

37 
	`wakeup
(
tout
);

39 
	}
}

41 
	$£tuid
()

43 
uid
;

45 
uid
 = 
u
.
u_¨0
[
R0
].
lobyã
;

46 if(
u
.
u_ruid
 =
uid
.
lobyã
 || 
	`su£r
()) {

47 
u
.
u_uid
 = 
uid
;

48 
u
.
u_¥o˝
->
p_uid
 = 
uid
;

49 
u
.
u_ruid
 = 
uid
;

51 
	}
}

53 
	$gëuid
()

56 
u
.
u_¨0
[
R0
].
lobyã
 = u.
u_ruid
;

57 
u
.
u_¨0
[
R0
].
hibyã
 = u.
u_uid
;

58 
	}
}

60 
	$£tgid
()

62 
gid
;

64 
gid
 = 
u
.
u_¨0
[
R0
].
lobyã
;

65 if(
u
.
u_rgid
 =
gid
.
lobyã
 || 
	`su£r
()) {

66 
u
.
u_gid
 = 
gid
;

67 
u
.
u_rgid
 = 
gid
;

69 
	}
}

71 
	$gëgid
()

74 
u
.
u_¨0
[
R0
].
lobyã
 = u.
u_rgid
;

75 
u
.
u_¨0
[
R0
].
hibyã
 = u.
u_gid
;

76 
	}
}

78 
	$gëpid
()

80 
u
.
u_¨0
[
R0
] = u.
u_¥o˝
->
p_pid
;

81 
	}
}

83 
	$sync
()

86 
	`upd©e
();

87 
	}
}

89 
	$ni˚
()

91 
n
;

93 
n
 = 
u
.
u_¨0
[
R0
];

94 if(
n
 > 20)

95 
n
 = 20;

96 if(
n
 < 0 && !
	`su£r
())

97 
n
 = 0;

98 
u
.
u_ni˚
 = 
n
;

99 
	}
}

101 
	$u∆ök
()

103 *
ù
, *
µ
;

104 
uch¨
;

106 
µ
 = 
	`«mei
(&
uch¨
, 2);

107 if(
µ
 =
NULL
)

109 
	`¥ñe
(
µ
);

110 
ù
 = 
	`igë
(
µ
->
i_dev
, 
u
.
u_dít
.
u_öo
);

111 if(
ù
 =
NULL
)

112 
	`∑nic
("unlink -- iget");

113 if((
ù
->
i_mode
&
IFMT
)==
IFDIR
 && !
	`su£r
())

114 
out
;

115 
u
.
u_off£t
[1] =- 
DIRSIZ
+2;

116 
u
.
u_ba£
 = &u.
u_dít
;

117 
u
.
u_cou¡
 = 
DIRSIZ
+2;

118 
u
.
u_dít
.
u_öo
 = 0;

119 
	`wrôei
(
µ
);

120 
ù
->
i_∆ök
--;

121 
ù
->
i_Êag
 =| 
IUPD
;

123 
out
:

124 
	`ùut
(
µ
);

125 
	`ùut
(
ù
);

126 
	}
}

128 
	$chdú
()

130 *
ù
;

131 
uch¨
;

133 
ù
 = 
	`«mei
(&
uch¨
, 0);

134 if(
ù
 =
NULL
)

136 if((
ù
->
i_mode
&
IFMT
Ë!
IFDIR
) {

137 
u
.
u_îr‹
 = 
ENOTDIR
;

138 
bad
:

139 
	`ùut
(
ù
);

142 if(
	`ac˚ss
(
ù
, 
IEXEC
))

143 
bad
;

144 
	`ùut
(
u
.
u_cdú
);

145 
u
.
u_cdú
 = 
ù
;

146 
	`¥ñe
(
ù
);

147 
	}
}

149 
	$chmod
()

151 *
ù
;

153 i‡((
ù
 = 
	`ow√r
()Ë=
NULL
)

155 
ù
->
i_mode
 =& ~07777;

156 i‡(
u
.
u_uid
)

157 
u
.
u_¨g
[1] =& ~
ISVTX
;

158 
ù
->
i_mode
 =| 
u
.
u_¨g
[1]&07777;

159 
ù
->
i_Êag
 =| 
IUPD
;

160 
	`ùut
(
ù
);

161 
	}
}

163 
	$chown
()

165 *
ù
;

167 i‡(!
	`su£r
(Ë|| (
ù
 = 
	`ow√r
()Ë=
NULL
)

169 
ù
->
i_uid
 = 
u
.
u_¨g
[1];

170 if(
u
.
u_uid
 != 0)

171 
ù
->
i_mode
 =& ~
ISUID
;

172 
ù
->
i_Êag
 =| 
IUPD
;

173 
	`ùut
(
ù
);

174 
	}
}

176 
	$smd©e
()

178 
öode
 *
ù
;

179 *
ç
;

180 
tbuf
[2];

182 i‡((
ù
 = 
	`ow√r
()Ë=
NULL
)

184 
ù
->
i_Êag
 =| 
IUPD
;

185 
ç
 = &
tbuf
[2];

186 *--
ç
 = 
u
.
u_¨0
[
R1
];

187 *--
ç
 = 
u
.
u_¨0
[
R0
];

188 
	`iupd©
(
ù
, 
ç
);

189 
ù
->
i_Êag
 =& ~
IUPD
;

190 
	`ùut
(
ù
);

191 
	}
}

193 
	$ssig
()

195 
a
;

197 
a
 = 
u
.
u_¨g
[0];

198 if(
a
<=0 ||á>=
NSIG
) {

199 
u
.
u_îr‹
 = 
EINVAL
;

202 
u
.
u_¨0
[
R0
] = u.
u_sig«l
[
a
];

203 
u
.
u_sig«l
[
a
] = u.
u_¨g
[1];

204 
u
.
u_sig«l
[9] = 0;

205 if(
u
.
u_¥o˝
->
p_sig
 =
a
)

206 
u
.
u_¥o˝
->
p_sig
 = 0;

207 
	}
}

209 
	$kûl
()

211 
¥oc
 *
p
;

213 
p
 = &
¥oc
[0];Ö < &¥oc[
NPROC
];Ö++)

214 if(
p
->
p_pid
 =
u
.
u_¨0
[
R0
])

215 
found
;

216 
u
.
u_îr‹
 = 
ESRCH
;

219 
found
:

220 i‡(
p
->
p_uid
 !
u
.
u_uid
)

221 if(!
	`su£r
())

223 
	`psig«l
(
p
, 
u
.
u_¨g
[0]);

224 
	}
}

226 
	$times
()

228 *
p
;

230 
p
 = &
u
.
u_utime
;Ö < &u.u_utime+6;) {

231 
	`suw‹d
(
u
.
u_¨g
[0], *
p
++);

232 
u
.
u_¨g
[0] =+ 2;

234 
	}
}

236 
	$¥ofû
()

239 
u
.
u_¥of
[0] = u.
u_¨g
[0] & ~1;

240 
u
.
u_¥of
[1] = u.
u_¨g
[1];

241 
u
.
u_¥of
[2] = u.
u_¨g
[2];

242 
u
.
u_¥of
[3] = (u.
u_¨g
[3]>>1) & 077777;

243 
	}
}

	@usr/sys/ken/sysent.c

5 
	gsy£¡
[]

7 0, &
	gnuŒsys
,

8 0, &
	gªxô
,

9 0, &
	gf‹k
,

10 2, &
	gªad
,

11 2, &
	gwrôe
,

12 2, &
	g›í
,

13 0, &
	g˛o£
,

14 0, &
	gwaô
,

15 2, &
	g¸ót
,

16 2, &
	glök
,

17 1, &
	gu∆ök
,

18 2, &
	gexec
,

19 1, &
	gchdú
,

20 0, &
	ggtime
,

21 3, &
	gmknod
,

22 2, &
	gchmod
,

23 2, &
	gchown
,

24 1, &
	gsbªak
,

25 2, &
	g°©
,

26 2, &
	g£ek
,

27 0, &
	ggëpid
,

28 3, &
	gsmou¡
,

29 1, &
	gsumou¡
,

30 0, &
	g£tuid
,

31 0, &
	ggëuid
,

32 0, &
	g°ime
,

33 0, &
	gnosys
,

34 0, &
	gnosys
,

35 1, &
	gf°©
,

36 0, &
	gnosys
,

37 1, &
	gsmd©e
,

38 1, &
	g°ty
,

39 1, &
	ggây
,

40 0, &
	gnosys
,

41 0, &
	gni˚
,

42 0, &
	gs¶ï
,

43 0, &
	gsync
,

44 1, &
	gkûl
,

45 0, &
	ggëswô
,

46 0, &
	gnosys
,

47 0, &
	gnosys
,

48 0, &
	gdup
,

49 0, &
	gpùe
,

50 1, &
	gtimes
,

51 4, &
	g¥ofû
,

52 0, &
	gnosys
,

53 0, &
	g£tgid
,

54 0, &
	ggëgid
,

55 2, &
	gssig
,

56 0, &
	gnosys
,

57 0, &
	gnosys
,

58 0, &
	gnosys
,

59 0, &
	gnosys
,

60 0, &
	gnosys
,

61 0, &
	gnosys
,

62 0, &
	gnosys
,

63 0, &
	gnosys
,

64 0, &
	gnosys
,

65 0, &
	gnosys
,

66 0, &
	gnosys
,

67 0, &
	gnosys
,

68 0, &
	gnosys
,

69 0, &
	gnosys
,

70 0, &
	gnosys


	@usr/sys/ken/text.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../¥oc.h
"

9 
	~"../ãxt.h
"

10 
	~"../öode.h
"

12 
	$xsw≠
(
p
, 
ff
, 
os
)

13 *
p
;

15 *
Ω
, 
a
;

17 
Ω
 = 
p
;

18 if(
os
 == 0)

19 
os
 = 
Ω
->
p_size
;

20 
a
 = 
	`mÆloc
(
sw≠m≠
, (
Ω
->
p_size
+7)/8);

21 if(
a
 =
NULL
)

22 
	`∑nic
("out of swap space");

23 
	`xccdec
(
Ω
->
p_ãxç
);

24 
Ω
->
p_Êag
 =| 
SLOCK
;

25 if(
	`sw≠
(
a
, 
Ω
->
p_addr
, 
os
, 0))

26 
	`∑nic
("swapÉrror");

27 if(
ff
)

28 
	`m‰ì
(
c‹em≠
, 
os
, 
Ω
->
p_addr
);

29 
Ω
->
p_addr
 = 
a
;

30 
Ω
->
p_Êag
 =& ~(
SLOAD
|
SLOCK
);

31 
Ω
->
p_time
 = 0;

32 if(
runout
) {

33 
runout
 = 0;

34 
	`wakeup
(&
runout
);

36 
	}
}

38 
	$x‰ì
()

40 *
xp
, *
ù
;

42 if((
xp
=
u
.
u_¥o˝
->
p_ãxç
Ë!
NULL
) {

43 
u
.
u_¥o˝
->
p_ãxç
 = 
NULL
;

44 
	`xccdec
(
xp
);

45 if(--
xp
->
x_cou¡
 == 0) {

46 
ù
 = 
xp
->
x_ùå
;

47 if((
ù
->
i_mode
&
ISVTX
) == 0) {

48 
xp
->
x_ùå
 = 
NULL
;

49 
	`m‰ì
(
sw≠m≠
, (
xp
->
x_size
+7)/8, xp->
x_daddr
);

50 
ù
->
i_Êag
 =& ~
ITEXT
;

51 
	`ùut
(
ù
);

55 
	}
}

57 
	$xÆloc
(
ù
)

58 *
ù
;

60 
ãxt
 *
xp
;

61 *
Ω
, 
ts
;

63 if(
u
.
u_¨g
[1] == 0)

65 
Ω
 = 
NULL
;

66 
xp
 = &
ãxt
[0]; x∞< &ãxt[
NTEXT
]; xp++)

67 if(
xp
->
x_ùå
 =
NULL
) {

68 if(
Ω
 =
NULL
)

69 
Ω
 = 
xp
;

71 if(
xp
->
x_ùå
 =
ù
) {

72 
xp
->
x_cou¡
++;

73 
u
.
u_¥o˝
->
p_ãxç
 = 
xp
;

74 
out
;

76 if((
xp
=
Ω
Ë=
NULL
)

77 
	`∑nic
("out ofÅext");

78 
xp
->
x_cou¡
 = 1;

79 
xp
->
x_ccou¡
 = 0;

80 
xp
->
x_ùå
 = 
ù
;

81 
ts
 = ((
u
.
u_¨g
[1]+63)>>6) & 01777;

82 
xp
->
x_size
 = 
ts
;

83 if((
xp
->
x_daddr
 = 
	`mÆloc
(
sw≠m≠
, (
ts
+7)/8)Ë=
NULL
)

84 
	`∑nic
("out of swap space");

85 
	`ex∑nd
(
USIZE
+
ts
);

86 
	`e°abur
(0, 
ts
, 0);

87 
u
.
u_cou¡
 = u.
u_¨g
[1];

88 
u
.
u_off£t
[1] = 020;

89 
u
.
u_ba£
 = 0;

90 
	`ªadi
(
ù
);

91 
Ω
 = 
u
.
u_¥o˝
;

92 
Ω
->
p_Êag
 =| 
SLOCK
;

93 
	`sw≠
(
xp
->
x_daddr
, 
Ω
->
p_addr
+
USIZE
, 
ts
, 0);

94 
Ω
->
p_Êag
 =& ~
SLOCK
;

95 
Ω
->
p_ãxç
 = 
xp
;

96 
Ω
 = 
ù
;

97 
Ω
->
i_Êag
 =| 
ITEXT
;

98 
Ω
->
i_cou¡
++;

99 
	`ex∑nd
(
USIZE
);

101 
out
:

102 if(
xp
->
x_ccou¡
 == 0) {

103 
	`ßvu
(
u
.
u_rßv
);

104 
	`ßvu
(
u
.
u_sßv
);

105 
	`xsw≠
(
u
.
u_¥o˝
, 1, 0);

106 
u
.
u_¥o˝
->
p_Êag
 =| 
SSWAP
;

107 
	`swtch
();

110 
xp
->
x_ccou¡
++;

111 
	}
}

113 
	$xccdec
(
xp
)

114 *
xp
;

116 *
Ω
;

118 if((
Ω
=
xp
)!=
NULL
 &&Ñp->
x_ccou¡
!=0)

119 if(--
Ω
->
x_ccou¡
 == 0)

120 
	`m‰ì
(
c‹em≠
, 
Ω
->
x_size
,Ñp->
x_ˇddr
);

121 
	}
}

	@usr/sys/ken/trap.c

5 
	~"../∑øm.h
"

6 
	~"../sy°m.h
"

7 
	~"../u£r.h
"

8 
	~"../¥oc.h
"

9 
	~"../ªg.h
"

10 
	~"../£g.h
"

12 
	#EBIT
 1

	)

13 
	#UMODE
 0170000

	)

14 
	#SETD
 0170011

	)

15 
	ssy£¡
 {

16 
	mcou¡
;

17 (*
	mˇŒ
)();

18 } 
	gsy£¡
[64];

19 
	gªgloc
[8]

21 
	gR0
, 
	gR1
, 
	gR2
, 
	gR3
, 
	gR4
, 
	gR5
, 
	gR6
, 
	gR7


24 
	$å≠
(
dev
, 
•
, 
r1
, 
≈s
, 
r0
, 
pc
, 
ps
)

25 *
•
;

27 
i
, 
a
;

28 
sy£¡
 *
ˇŒp
;

30 
	`ßvÂ
();

31 
u
.
u_¨0
 = &
r0
;

32 if(
dev
 == 8) {

33 
	`psig«l
(
u
.
u_¥o˝
, 
SIGFPT
);

34 if((
ps
&
UMODE
) == UMODE)

35 
îr
;

38 if(
dev
==1 && 
	`fuw‹d
(
pc
-2)==
SETD
 && 
u
.
u_sig«l
[
SIGINS
]==0)

40 if((
ps
&
UMODE
) != UMODE)

41 
bad
;

42 
u
.
u_îr‹
 = 0;

43 if(
dev
==9 && 
•
 < -
u
.
u_ssize
*64) {

44 if(
	`backup
(&
r0
) == 0)

45 if(!
	`e°abur
(
u
.
u_tsize
, u.
u_dsize
, u.
u_ssize
+
SINCR
)) {

46 
	`ex∑nd
(
u
.
u_¥o˝
->
p_size
+
SINCR
);

47 
a
 = 
u
.
u_¥o˝
->
p_addr
 + u.u_¥o˝->
p_size
;

48 
i
=
u
.
u_ssize
; i; i--) {

49 
a
--;

50 
	`c›y£g
(
a
-
SINCR
,á);

52 
i
=
SINCR
; i; i--)

53 
	`˛ór£g
(--
a
);

54 
u
.
u_ssize
 =+ 
SINCR
;

55 
îr
;

58 
dev
) {

61 
i
 = 
SIGBUS
;

62 
def
;

65 
i
 = 
SIGINS
;

66 
def
;

69 
i
 = 
SIGTRC
;

70 
def
;

73 
i
 = 
SIGIOT
;

74 
def
;

77 
i
 = 
SIGEMT
;

78 
def
;

81 
i
 = 
SIGSEG
;

82 
def
;

84 
def
:

85 
	`psig«l
(
u
.
u_¥o˝
, 
i
);

88 
u
.
u_îr‹
 = 
dev
+100;

92 if(
u
.
u_îr‹
)

93 
îr
;

94 
ps
 =& ~
EBIT
;

95 
ˇŒp
 = &
sy£¡
[
	`fuw‹d
(
pc
-2)&077];

96 i‡(
ˇŒp
 =
sy£¡
) {

97 
a
 = 
	`fuw‹d
(
pc
);

98 
pc
 =+ 2;

99 
ˇŒp
 = &
sy£¡
[
	`fuw‹d
(
a
)&077];

100 
a
 =+ 2;

102 
a
 = 
pc
;

103 
pc
 =+ 
ˇŒp
->
cou¡
*2;

105 
i
=0; i < 
ˇŒp
->
cou¡
; i++) {

106 
u
.
u_¨g
[
i
] = 
	`fuw‹d
(
a
);

107 
a
 =+ 2;

109 
u
.
u_dúp
 = u.
u_¨g
[0];

110 
	`å≠1
(
ˇŒp
->
ˇŒ
);

111 if(
u
.
u_îr‹
 >= 100)

112 
	`psig«l
(
u
.
u_¥o˝
, 
SIGSYS
);

113 
îr
:

114 if(
	`issig
())

115 
	`psig
();

116 if(
u
.
u_îr‹
 != 0) {

117 
ps
 =| 
EBIT
;

118 
r0
 = 
u
.
u_îr‹
;

120 
u
.
u_¥o˝
->
p_¥i
 = 
PUSER
 + u.
u_ni˚
;

121 if(
u
.
u_d¶ìp
++ > 15) {

122 
u
.
u_d¶ìp
 = 0;

123 
u
.
u_¥o˝
->
p_¥i
++;

124 
	`swtch
();

128 
bad
:

129 
	`¥ötf
("ka6 = %o\n", *
ka6
);

130 
	`¥ötf
("≠†%o\n", &
ps
);

131 
	`∑nic
("trap");

132 
	}
}

134 
	$å≠1
(
f
)

135 (*
f
)();

138 
	`ßvu
(
u
.
u_qßv
);

139 (*
f
)();

140 
	}
}

142 
	$nosys
()

145 
u
.
u_îr‹
 = 100;

146 
	}
}

148 
	$nuŒsys
()

150 
	}
}

	@usr/sys/param.h

5 
	#NBUF
 15

	)

6 
	#NINODE
 100

	)

7 
	#NFILE
 100

	)

8 
	#NMOUNT
 5

	)

9 
	#NEXEC
 4

	)

10 
	#MAXMEM
 (32*32)

	)

11 
	#SSIZE
 20

	)

12 
	#SINCR
 20

	)

13 
	#NOFILE
 15

	)

14 
	#CANBSIZ
 256

	)

15 
	#CMAPSIZ
 100

	)

16 
	#SMAPSIZ
 100

	)

17 
	#NCALL
 20

	)

18 
	#NPROC
 50

	)

19 
	#NTEXT
 20

	)

20 
	#NCLIST
 100

	)

28 
	#PSWP
 -100

	)

29 
	#PINOD
 -90

	)

30 
	#PRIBIO
 -50

	)

31 
	#PPIPE
 1

	)

32 
	#PWAIT
 40

	)

33 
	#PSLEP
 90

	)

34 
	#PUSER
 100

	)

41 
	#NSIG
 13

	)

42 
	#SIGHUP
 1

	)

43 
	#SIGINT
 2

	)

44 
	#SIGQIT
 3

	)

45 
	#SIGINS
 4

	)

46 
	#SIGTRC
 5

	)

47 
	#SIGIOT
 6

	)

48 
	#SIGEMT
 7

	)

49 
	#SIGFPT
 8

	)

50 
	#SIGKIL
 9

	)

51 
	#SIGBUS
 10

	)

52 
	#SIGSEG
 11

	)

53 
	#SIGSYS
 12

	)

60 
	#USIZE
 16

	)

61 
	#NULL
 0

	)

62 
	#NODEV
 (-1)

	)

63 
	#ROOTINO
 1

	)

64 
	#DIRSIZ
 14

	)

68 
	mlobyã
;

69 
	mhibyã
;

	@usr/sys/proc.h

1 
	s¥oc
 {

2 
	mp_°©
;

3 
	mp_Êag
;

4 
	mp_¥i
;

5 
	mp_sig
;

6 
	mp_uid
;

7 
	mp_time
;

8 
	mp_âyp
;

9 
	mp_pid
;

10 
	mp_µid
;

11 
	mp_addr
;

12 
	mp_size
;

13 
	mp_wch™
;

14 *
	mp_ãxç
;

15 } 
	g¥oc
[
NPROC
];

18 
	#SSLEEP
 1

	)

19 
	#SWAIT
 2

	)

20 
	#SRUN
 3

	)

21 
	#SIDL
 4

	)

22 
	#SZOMB
 5

	)

25 
	#SLOAD
 01

	)

26 
	#SSYS
 02

	)

27 
	#SLOCK
 04

	)

28 
	#SSWAP
 010

	)

	@usr/sys/reg.h

1 
	#R0
 (0)

	)

2 
	#R1
 (-2)

	)

3 
	#R2
 (-9)

	)

4 
	#R3
 (-8)

	)

5 
	#R4
 (-7)

	)

6 
	#R5
 (-6)

	)

7 
	#R6
 (-3)

	)

8 
	#R7
 (1)

	)

9 
	#RPS
 (2)

	)

	@usr/sys/seg.h

9 
	#UISD
 0177600

	)

10 
	#UISA
 0177640

	)

11 
	#RO
 02

	)

12 
	#RW
 06

	)

13 
	#WO
 04

	)

14 
	#ED
 010

	)

16 
	mr
[8];

18 *
	gka6
;

	@usr/sys/systm.h

1 
	gˇn⁄b
[
CANBSIZ
];

2 
	gc‹em≠
[
CMAPSIZ
];

3 
	gsw≠m≠
[
SMAPSIZ
];

4 *
	groŸdú
;

5 
	gexe˙t
;

6 
	glbﬁt
;

7 
	gtime
[2];

8 
	gtout
[2];

9 
	sˇŒo


11 
	mc_time
;

12 
	mc_¨g
;

13 (*
	mc_func
)();

14 } 
	gˇŒout
[
NCALL
];

15 
	smou¡


17 
	mm_dev
;

18 *
	mm_buÂ
;

19 *
	mm_öodp
;

20 } 
	gmou¡
[
NMOUNT
];

21 
	gmpid
;

22 
	grunö
;

23 
	grunout
;

24 
	gruƒun
;

25 
	gmaxmem
;

26 *
	glks
;

27 
	groŸdev
;

28 
	gsw≠dev
;

29 
	gsw∂o
;

30 
	gnsw≠
;

31 
	gupdlock
;

32 
	gøblock
;

	@usr/sys/text.h

1 
	sãxt


3 
	mx_daddr
;

4 
	mx_ˇddr
;

5 
	mx_size
;

6 *
	mx_ùå
;

7 
	mx_cou¡
;

8 
	mx_ccou¡
;

9 } 
	gãxt
[
NTEXT
];

	@usr/sys/tty.h

1 
	s˛i°
 {

2 
	mc_cc
;

3 
	mc_cf
;

4 
	mc_˛
;

7 
	sây
 {

8 
˛i°
 
	mt_øwq
;

9 
˛i°
 
	mt_ˇnq
;

10 
˛i°
 
	mt_outq
;

11 
	mt_Êags
;

12 *
	mt_addr
;

13 
	mt_dñ˘
;

14 
	mt_cﬁ
;

15 
	mt_îa£
;

16 
	mt_kûl
;

17 
	mt_°©e
;

18 
	mt_ch¨
;

19 
	mt_•ìds
;

22 
	g∑πab
[];

24 
	#TTIPRI
 10

	)

25 
	#TTOPRI
 20

	)

26 
	#CERASE
 '#'

	)

27 
	#CEOT
 004

	)

28 
	#CKILL
 '@'

	)

29 
	#CQUIT
 034

	)

30 
	#CINTR
 0177

	)

33 
	#TTHIWAT
 50

	)

34 
	#TTLOWAT
 30

	)

35 
	#TTYHOG
 256

	)

38 
	#NODELAY
 01

	)

39 
	#XTABS
 02

	)

40 
	#LCASE
 04

	)

41 
	#ECHO
 010

	)

42 
	#CRMOD
 020

	)

43 
	#RAW
 040

	)

44 
	#ODDP
 0100

	)

45 
	#EVENP
 0200

	)

46 
	#HUPCL
 0400

	)

47 
	#NTDELAY
 010000

	)

50 
	#DONE
 0200

	)

51 
	#IENABLE
 0100

	)

52 
	#TIMEOUT
 01

	)

53 
	#WOPEN
 02

	)

54 
	#ISOPEN
 04

	)

55 
	#SSTART
 010

	)

56 
	#CARR_ON
 020

	)

57 
	#BUSY
 040

	)

	@usr/sys/user.h

1 
	su£r
 {

2 
	mu_rßv
[2];

3 
	mu_fßv
[25];

4 
	mu_£gÊg
;

5 
	mu_îr‹
;

6 
	mu_uid
;

7 
	mu_gid
;

8 
	mu_ruid
;

9 
	mu_rgid
;

10 
	mu_¥o˝
;

11 *
	mu_ba£
;

12 *
	mu_cou¡
;

13 *
	mu_off£t
[2];

14 *
	mu_cdú
;

15 
	mu_dbuf
[
DIRSIZ
];

16 *
	mu_dúp
;

18 
	mu_öo
;

19 
	mu_«me
[
DIRSIZ
];

20 } 
	mu_dít
;

21 *
	mu_pdú
;

22 
	mu_uiß
[8];

23 
	mu_uisd
[8];

24 
	mu_ofûe
[
NOFILE
];

25 
	mu_¨g
[5];

26 
	mu_tsize
;

27 
	mu_dsize
;

28 
	mu_ssize
;

29 
	mu_qßv
[2];

30 
	mu_sßv
[2];

31 
	mu_sig«l
[
NSIG
];

32 
	mu_utime
;

33 
	mu_°ime
;

34 
	mu_cutime
[2];

35 
	mu_c°ime
[2];

36 *
	mu_¨0
;

37 
	mu_¥of
[4];

38 
	mu_ni˚
;

39 
	mu_d¶ìp
;

40 } 
	gu
;

43 
	#EFAULT
 106

	)

44 
	#EPERM
 1

	)

45 
	#ENOENT
 2

	)

46 
	#ESRCH
 3

	)

47 
	#EIO
 5

	)

48 
	#ENXIO
 6

	)

49 
	#E2BIG
 7

	)

50 
	#ENOEXEC
 8

	)

51 
	#EBADF
 9

	)

52 
	#ECHILD
 10

	)

53 
	#EAGAIN
 11

	)

54 
	#ENOMEM
 12

	)

55 
	#EACCES
 13

	)

56 
	#ENOTBLK
 15

	)

57 
	#EBUSY
 16

	)

58 
	#EEXIST
 17

	)

59 
	#EXDEV
 18

	)

60 
	#ENODEV
 19

	)

61 
	#ENOTDIR
 20

	)

62 
	#EISDIR
 21

	)

63 
	#EINVAL
 22

	)

64 
	#ENFILE
 23

	)

65 
	#EMFILE
 24

	)

66 
	#ENOTTY
 25

	)

67 
	#ETXTBSY
 26

	)

68 
	#EFBIG
 27

	)

69 
	#ENOSPC
 28

	)

70 
	#ESPIPE
 29

	)

71 
	#EROFS
 30

	)

72 
	#EMLINK
 31

	)

	@
1
.
1
/usr/include
135
2488
usr/c/c00.c
usr/c/c01.c
usr/c/c02.c
usr/c/c03.c
usr/c/c04.c
usr/c/c0h.c
usr/c/c10.c
usr/c/c11.c
usr/c/c12.c
usr/c/c13.c
usr/c/c1h.c
usr/c/c20.c
usr/c/c21.c
usr/c/c2h.c
usr/c/cvopt.c
usr/source/s1/ac.c
usr/source/s1/cal.c
usr/source/s1/cc.c
usr/source/s1/cdb.c
usr/source/s1/check.c
usr/source/s1/chmod.c
usr/source/s1/cmp.c
usr/source/s1/comm.c
usr/source/s1/cp.c
usr/source/s1/date.c
usr/source/s1/dd.c
usr/source/s1/df.c
usr/source/s1/diff1.c
usr/source/s1/dump.c
usr/source/s1/echo.c
usr/source/s1/exit.c
usr/source/s1/fc.c
usr/source/s1/find.c
usr/source/s1/glob.c
usr/source/s1/goto.c
usr/source/s1/if.c
usr/source/s1/init.c
usr/source/s1/ln.c
usr/source/s1/login.c
usr/source/s1/lpr.c
usr/source/s1/ls.c
usr/source/s2/mail.c
usr/source/s2/mkfs.c
usr/source/s2/mknod.c
usr/source/s2/mount.c
usr/source/s2/mv.c
usr/source/s2/nice.c
usr/source/s2/nm.c
usr/source/s2/nohup.c
usr/source/s2/od.c
usr/source/s2/pr.c
usr/source/s2/prof.c
usr/source/s2/ps.c
usr/source/s2/pwd.c
usr/source/s2/restor.c
usr/source/s2/rm.c
usr/source/s2/sa.c
usr/source/s2/sh.c
usr/source/s2/size.c
usr/source/s2/sleep.c
usr/source/s2/sort.c
usr/source/s2/split.c
usr/source/s2/stty.c
usr/source/s2/su.c
usr/source/s2/sync.c
usr/source/s2/tee.c
usr/source/s2/tr.c
usr/source/s2/typo.c
usr/source/s2/umount.c
usr/source/s2/uniq.c
usr/source/s2/wc.c
usr/source/s2/who.c
usr/source/s3/ctime.c
usr/source/s4/errlst.c
usr/source/s4/getpw.c
usr/source/s4/mon.c
usr/source/s4/perror.c
usr/source/s4/qsort.c
usr/source/s4/rin.c
usr/sys/buf.h
usr/sys/conf.h
usr/sys/conf/conf.c
usr/sys/conf/mkconf.c
usr/sys/dmr/bio.c
usr/sys/dmr/cat.c
usr/sys/dmr/dc.c
usr/sys/dmr/dh.c
usr/sys/dmr/dhdm.c
usr/sys/dmr/dhfdm.c
usr/sys/dmr/dn.c
usr/sys/dmr/dp.c
usr/sys/dmr/kl.c
usr/sys/dmr/lp.c
usr/sys/dmr/mem.c
usr/sys/dmr/partab.c
usr/sys/dmr/pc.c
usr/sys/dmr/rf.c
usr/sys/dmr/rk.c
usr/sys/dmr/rp.c
usr/sys/dmr/tc.c
usr/sys/dmr/tm.c
usr/sys/dmr/tty.c
usr/sys/dmr/vs.c
usr/sys/dmr/vt.c
usr/sys/file.h
usr/sys/filsys.h
usr/sys/inode.h
usr/sys/ken/alloc.c
usr/sys/ken/clock.c
usr/sys/ken/fio.c
usr/sys/ken/iget.c
usr/sys/ken/main.c
usr/sys/ken/malloc.c
usr/sys/ken/nami.c
usr/sys/ken/pipe.c
usr/sys/ken/prf.c
usr/sys/ken/rdwri.c
usr/sys/ken/sig.c
usr/sys/ken/slp.c
usr/sys/ken/subr.c
usr/sys/ken/sys1.c
usr/sys/ken/sys2.c
usr/sys/ken/sys3.c
usr/sys/ken/sys4.c
usr/sys/ken/sysent.c
usr/sys/ken/text.c
usr/sys/ken/trap.c
usr/sys/param.h
usr/sys/proc.h
usr/sys/reg.h
usr/sys/seg.h
usr/sys/systm.h
usr/sys/text.h
usr/sys/tty.h
usr/sys/user.h
